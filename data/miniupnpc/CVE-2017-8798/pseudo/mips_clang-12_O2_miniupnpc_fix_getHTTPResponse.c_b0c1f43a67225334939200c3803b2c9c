void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // $v0
  char *v5; // $s1
  void *v6; // $v0
  unsigned int v7; // $v0
  char *v8; // $a1
  unsigned int v9; // $a3
  int v10; // $s7
  unsigned int v11; // $s6
  unsigned int v12; // $a2
  int v13; // $s4
  int v14; // $v0
  signed int v15; // $fp
  int v16; // $s3
  char *v17; // $s0
  char *v18; // $v0
  void *v19; // $a1
  int v20; // $a0
  int v21; // $v1
  int v22; // $v1
  signed int v23; // $s0
  unsigned int v24; // $s3
  int v25; // $v0
  const unsigned __int16 **v26; // $v0
  int v27; // $a0
  const unsigned __int16 *v28; // $v0
  int v29; // $v1
  _BYTE *v30; // $at
  char *v31; // $s3
  char *v32; // $v0
  int v33; // $a0
  int v34; // $v1
  size_t v35; // $v0
  size_t v36; // $a1
  char *v37; // $v0
  size_t v38; // $s3
  size_t v39; // $t0
  int v40; // $s3
  int v41; // $s0
  int v42; // $v1
  int v43; // $v0
  int v44; // $fp
  int *v45; // $a2
  int v46; // $a0
  int v47; // $a1
  int v48; // $v1
  const char *v49; // $s0
  int v50; // $s3
  int v51; // $v0
  int v52; // $v0
  int v53; // $at
  int v54; // $v0
  signed int v55; // $v1
  unsigned int v56; // $s3
  size_t v57; // $a1
  void *v58; // $s6
  char *v59; // $s0
  char *v61; // [sp+18h] [-878h]
  size_t n; // [sp+1Ch] [-874h]
  unsigned int v63; // [sp+34h] [-85Ch]
  unsigned int v64; // [sp+34h] [-85Ch]
  char *v65; // [sp+38h] [-858h]
  _BYTE *v66; // [sp+3Ch] [-854h]
  unsigned int v67; // [sp+40h] [-850h]
  int *v68; // [sp+44h] [-84Ch]
  int v69; // [sp+48h] [-848h]
  unsigned int v70; // [sp+4Ch] [-844h]
  unsigned int v71; // [sp+50h] [-840h]
  int v72; // [sp+54h] [-83Ch]
  void *ptr; // [sp+58h] [-838h]
  char *v74; // [sp+5Ch] [-834h]
  int *v75; // [sp+60h] [-830h]
  void *src; // [sp+64h] [-82Ch]
  int v77; // [sp+68h] [-828h]
  unsigned int v78; // [sp+6Ch] [-824h]
  char v79; // [sp+70h] [-820h] BYREF
  _BYTE v80[3]; // [sp+71h] [-81Fh] BYREF
  char v81[2048]; // [sp+90h] [-800h] BYREF

  v77 = s;
  if ( status_code )
    *status_code = -1;
  v75 = status_code;
  v4 = (char *)malloc(0x800u);
  if ( v4 )
  {
    v5 = v4;
    v78 = 2048;
    v6 = malloc(0x800u);
    if ( v6 )
    {
      v68 = size;
      ptr = v6;
      v69 = 0;
      v79 = 0;
      v7 = -1;
      v8 = v81;
      v65 = "content-length";
      v9 = 0;
      v10 = 0;
      v67 = 2048;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v66 = v80;
      src = v81;
LABEL_6:
      while ( 1 )
      {
        v70 = v9;
        v71 = v12;
        v72 = v7;
        v14 = receivedata(v77, v8, 2048, 5000);
        if ( v14 <= 0 )
          break;
        v15 = v14;
        v16 = v10;
        v17 = v5;
        while ( 1 )
        {
          if ( v13 )
          {
            v10 = v16;
            v8 = (char *)src;
            v12 = v71;
            v9 = v70;
            v5 = v17;
            if ( !v69 )
              goto LABEL_126;
LABEL_36:
            if ( v15 <= 0 )
              goto LABEL_142;
            v23 = 0;
            while ( 2 )
            {
              v74 = (char *)ptr;
LABEL_39:
              if ( v9 )
              {
                v31 = v74;
                goto LABEL_70;
              }
              if ( v12 )
              {
                v24 = v12;
                if ( v23 >= v15 )
                {
LABEL_45:
                  v12 = v24;
                  goto LABEL_46;
                }
              }
              else
              {
                v23 += v8[v23] == 0xD;
                if ( v23 >= v15 )
                {
                  v24 = 0;
                  if ( v23 >= v15 )
                    goto LABEL_45;
                }
                else
                {
                  v23 += v8[v23] == 0xA;
                  v24 = 0;
                  if ( v23 >= v15 )
                    goto LABEL_45;
                }
              }
              v26 = _ctype_b_loc();
              v8 = (char *)src;
              v27 = (int)v66;
              v28 = *v26;
              v12 = v24;
              while ( v12 < 0x1F )
              {
                v29 = v8[v23];
                if ( (v28[v29] & 0x10) == 0 )
                  break;
                v30 = (_BYTE *)(v27 + v12);
                *v30 = 0;
                *(v30 - 1) = v29;
                ++v23;
                ++v12;
                if ( v15 == v23 )
                {
                  ptr = v74;
                  v7 = v72;
                  v9 = 0;
                  if ( v72 > 0 )
                    goto LABEL_143;
                  goto LABEL_6;
                }
              }
LABEL_46:
              if ( v23 < v15 )
              {
                while ( 1 )
                {
                  v25 = (unsigned __int8)v8[v23];
                  if ( v25 == 10 || v25 == 13 )
                    break;
                  if ( v15 == ++v23 )
                  {
                    v9 = 0;
                    ptr = v74;
                    goto LABEL_142;
                  }
                }
                v23 += v25 == 0xD;
              }
              if ( v23 >= v15 )
              {
                ptr = v74;
                v7 = v72;
                v9 = 0;
                if ( v72 > 0 )
                  goto LABEL_143;
                goto LABEL_6;
              }
              v9 = 0;
              if ( v8[v23] == 10 )
              {
                if ( !v12 )
                {
                  v79 = 0;
                  ptr = v74;
                  goto end_of_stream;
                }
                v32 = &v79;
                v9 = 0;
                do
                {
                  v34 = (unsigned __int8)*v32;
                  if ( (unsigned __int8)(v34 - 0x30) >= 0xAu )
                  {
                    v33 = 16 * v9 - 0x57;
                    v34 = (char)(v34 | 0x20);
                  }
                  else
                  {
                    v33 = 16 * v9 - 0x30;
                  }
                  v9 = v33 + v34;
                  --v12;
                  ++v32;
                }
                while ( v12 );
                v79 = 0;
                if ( !v9 )
                {
                  ptr = v74;
                  goto end_of_stream;
                }
                v12 = 0;
                ++v23;
                v31 = v74;
LABEL_70:
                v71 = v12;
                v35 = v15 - v23;
                v70 = v9;
                if ( v9 < v15 - v23 )
                  v35 = v9;
                v74 = (char *)v35;
                v63 = v35 + v11;
                if ( v67 >= v35 + v11 )
                {
                  v37 = v31;
                }
                else
                {
                  v36 = v72;
                  if ( v72 < v35 + v11 )
                    v36 = v35 + v11;
                  if ( v72 < 0 )
                    v36 = v35 + v11;
                  v67 = v36;
                  v37 = (char *)realloc(v31, v36);
                  if ( !v37 )
                  {
                    free(v31);
                    free(v5);
                    *v68 = -1;
                    return 0;
                  }
                }
                ptr = v37;
                v38 = (size_t)v74;
                memcpy(&v37[v11], (char *)src + v23, (size_t)v74);
                v8 = (char *)src;
                v23 += v38;
                v12 = v71;
                v11 = v63;
                v9 = v70 - v38;
                if ( v23 < v15 )
                  continue;
LABEL_142:
                v7 = v72;
                if ( v72 > 0 )
                {
LABEL_143:
                  if ( v11 >= v7 )
                    goto end_of_stream;
                }
                goto LABEL_6;
              }
              goto LABEL_39;
            }
          }
          v10 = v15 + v16;
          if ( v78 >= v15 + v16 )
          {
            v5 = v17;
            v19 = src;
          }
          else
          {
            v18 = (char *)realloc(v17, v15 + v16);
            v78 = v15 + v16;
            v19 = src;
            v5 = v18;
            if ( !v18 )
            {
              free(v17);
              free(ptr);
              *v68 = -1;
              return 0;
            }
          }
          memcpy(&v5[v16], v19, v15);
          if ( v10 >= 2 )
          {
            v20 = 0;
            do
            {
              v21 = (unsigned __int8)v5[v20];
              if ( v21 == 10 )
              {
                v22 = v20 + 1;
                v13 = v20 + 2;
                if ( v5[v20 + 1] != 0xA )
                  v13 = 0;
              }
              else if ( v21 == 13 )
              {
                v22 = v20 + 1;
                v13 = 0;
                if ( v5[v20 + 1] == 10 )
                {
                  v22 = v20 + 2;
                  if ( v20 + 2 >= v10 )
                  {
                    v13 = 0;
                  }
                  else
                  {
                    v13 = 0;
                    if ( v5[v22] == 13 )
                    {
                      v22 = v20 + 3;
                      if ( v20 + 3 >= v10 )
                      {
                        v13 = 0;
                      }
                      else
                      {
                        v13 = v20 + 4;
                        if ( v5[v22] != 0xA )
                          v13 = 0;
                      }
                    }
                  }
                }
              }
              else
              {
                v22 = v20;
                v13 = 0;
              }
              v20 = v22 + 1;
            }
            while ( v22 + 1 < v10 - 1 && !v13 );
            if ( v13 )
              break;
          }
          v15 = receivedata(v77, v81, 2048, 5000);
          v13 = 0;
          v16 = v10;
          v17 = v5;
          if ( v15 <= 0 )
            goto end_of_stream;
        }
        if ( v13 >= 2 )
        {
          v39 = v15 + v16;
          v40 = v13 - 1;
          v41 = 0;
          v42 = 0;
          v43 = 0;
          v44 = 0;
          v45 = v75;
          v74 = (char *)v39;
          do
          {
            v47 = (unsigned __int8)v5[v44];
            if ( v43 > 0 && v43 >= v42 && v47 == 58 )
            {
              v46 = v44;
              if ( v44 < v40 )
              {
                v46 = v44;
                while ( 1 )
                {
                  v48 = (unsigned __int8)v5[v46 + 1];
                  if ( v48 != 32 && v48 != 9 )
                    break;
                  if ( v13 - 1 == ++v46 )
                  {
                    v46 = v40;
                    break;
                  }
                }
              }
              v41 = v46 + 1;
              v42 = v44;
            }
            else if ( v47 == 13 || v47 == 10 )
            {
              if ( !v45 || v43 )
              {
                if ( v43 < v42 && v42 < v41 )
                {
                  v61 = &v5[v43];
                  n = v42 - v43;
                  if ( strncasecmp(&v5[v43], v65, v42 - v43) )
                  {
                    if ( strncasecmp(v61, "transfer-encoding", n) )
                    {
                      v45 = v75;
                      v39 = (size_t)v74;
                    }
                    else
                    {
                      v52 = strncasecmp(&v5[v41], "chunked", 7u);
                      v53 = v69;
                      if ( !v52 )
                        v53 = 1;
                      v69 = v53;
                      v45 = v75;
                      v39 = (size_t)v74;
                    }
                  }
                  else
                  {
                    v72 = strtol(&v5[v41], 0u, 10);
                    v45 = v75;
                    v39 = (size_t)v74;
                  }
                }
              }
              else if ( v44 > 0 )
              {
                v49 = v5 + 1;
                v50 = v44;
                do
                {
                  if ( *(v49 - 1) == 32 )
                  {
                    if ( *v45 >= 0 )
                    {
                      v40 = v13 - 1;
                      goto LABEL_118;
                    }
                    v51 = strtol(v49, 0u, 10);
                    v39 = (size_t)v74;
                    v45 = v75;
                    *v75 = v51;
                  }
                  --v50;
                  ++v49;
                }
                while ( v50 );
                v40 = v13 - 1;
              }
LABEL_118:
              v41 = 0;
              if ( v44 < v10 )
              {
                do
                {
                  v54 = (unsigned __int8)v5[v44];
                  if ( v54 != 13 && v54 != 10 )
                  {
                    v46 = v44;
                    v43 = v44;
                    v42 = v44;
                    goto LABEL_86;
                  }
                  ++v44;
                }
                while ( v39 != v44 );
                v46 = v10;
                v43 = v10;
                v42 = v10;
              }
              else
              {
                v46 = v44;
                v43 = v44;
                v42 = v44;
              }
            }
            else
            {
              v46 = v44;
            }
LABEL_86:
            v44 = v46 + 1;
          }
          while ( v46 + 1 < v40 );
        }
        v15 = v10 - v13;
        memcpy(v81, &v5[v13], v10 - v13);
        v8 = (char *)src;
        v12 = v71;
        v9 = v70;
        if ( v69 )
          goto LABEL_36;
LABEL_126:
        v55 = v15;
        if ( v72 < v15 + v11 )
          v55 = v72 - v11;
        if ( v72 >= 1 )
          v15 = v55;
        v64 = v11;
        v56 = v15 + v11;
        if ( v67 >= v15 + v11 )
        {
          v59 = (char *)ptr;
        }
        else
        {
          v57 = v72;
          if ( v72 < v56 )
            v57 = v15 + v11;
          if ( v72 < 0 )
            v57 = v15 + v11;
          v58 = ptr;
          v67 = v57;
          v59 = (char *)realloc(ptr, v57);
          if ( !v59 )
          {
            free(v58);
            free(v5);
            *v68 = -1;
            return 0;
          }
        }
        memcpy(&v59[v64], v81, v15);
        ptr = v59;
        v8 = (char *)src;
        v12 = v71;
        v9 = v70;
        v7 = v72;
        v11 = v56;
        if ( v72 > 0 )
          goto LABEL_143;
      }
end_of_stream:
      free(v5);
      *v68 = v11;
      if ( v11 )
      {
        return ptr;
      }
      else
      {
        free(ptr);
        return 0;
      }
    }
    else
    {
      free(v5);
      *size = -1;
      return 0;
    }
  }
  else
  {
    *size = -1;
    return 0;
  }
}
