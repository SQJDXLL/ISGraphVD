void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  void *result; // x0
  char *v6; // x25
  char *v7; // x0
  unsigned int v8; // w21
  int v9; // w28
  unsigned int v10; // w16
  int v11; // w20
  unsigned int v12; // w19
  __int64 v13; // x9
  int v14; // w0
  int v15; // w27
  unsigned int v16; // w23
  char *v17; // x22
  int v18; // w8
  int v19; // w9
  int v20; // w11
  __int64 v21; // x11
  __int64 v22; // x10
  int v23; // w11
  int v24; // w9
  __int64 v25; // x26
  unsigned int v26; // w21
  const unsigned __int16 *v27; // x10
  __int64 v28; // x8
  __int64 v29; // x14
  char *v30; // x15
  __int64 v31; // x8
  int v32; // w9
  __int64 v33; // x8
  char *v34; // x9
  int v35; // t1
  int v36; // w11
  int v37; // w10
  unsigned int v38; // w23
  unsigned int v39; // w9
  size_t v41; // x1
  char *v42; // x0
  int v43; // w14
  int *v44; // x13
  int v45; // w11
  int v46; // w9
  int v47; // w8
  int v48; // w27
  const char *v49; // x22
  int v50; // w10
  __int64 v51; // x23
  __int64 v52; // x9
  int v53; // w12
  int v54; // w10
  const char *v55; // x22
  size_t v56; // x23
  int v57; // w0
  int v58; // w8
  int v59; // w0
  char *v60; // x8
  __int64 v61; // x9
  int v62; // w10
  int v63; // w23
  int v64; // w10
  int v65; // w13
  __int64 v66; // x9
  int v67; // w12
  int v68; // w10
  const char *v69; // x22
  size_t v70; // x26
  int v71; // w0
  int v72; // w8
  char *v73; // x8
  __int64 v74; // x9
  int v75; // w10
  unsigned int v76; // w11
  int v78; // w23
  unsigned int v79; // w22
  size_t v81; // x27
  char *v82; // x0
  char *v83; // x0
  char *v84; // x0
  int v85; // [xsp+4h] [xbp-89Ch]
  int v86; // [xsp+4h] [xbp-89Ch]
  int v87; // [xsp+2Ch] [xbp-874h]
  int *v88; // [xsp+30h] [xbp-870h]
  int v89; // [xsp+3Ch] [xbp-864h]
  unsigned int v90; // [xsp+40h] [xbp-860h]
  unsigned int v91; // [xsp+48h] [xbp-858h]
  __int64 v92; // [xsp+48h] [xbp-858h]
  __int64 v93; // [xsp+58h] [xbp-848h]
  char *ptr; // [xsp+60h] [xbp-840h]
  unsigned int v95; // [xsp+68h] [xbp-838h]
  unsigned int v96; // [xsp+68h] [xbp-838h]
  unsigned int v97; // [xsp+6Ch] [xbp-834h]
  char v99[32]; // [xsp+78h] [xbp-828h] BYREF
  char src[2056]; // [xsp+98h] [xbp-808h] BYREF

  if ( status_code )
    *status_code = -1;
  result = malloc(0x800uLL);
  if ( !result )
    goto LABEL_186;
  v6 = (char *)result;
  v7 = (char *)malloc(0x800uLL);
  if ( !v7 )
  {
    free(v6);
    result = 0LL;
LABEL_186:
    *size = -1;
    return result;
  }
  v88 = size;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 2048;
  v13 = 0xFFFFFFFFLL;
  ptr = v7;
  v89 = 0;
  v97 = 0;
  v99[0] = 0;
  v90 = 2048;
  v87 = s;
  while ( 1 )
  {
    while ( 1 )
    {
      v95 = v10;
      v93 = v13;
      v14 = receivedata((unsigned int)s, src, 2048LL, 5000LL, 0LL);
      if ( v14 < 1 )
        goto end_of_stream;
      v15 = v14;
      v16 = v9;
      v17 = v6;
LABEL_10:
      if ( !v11 )
        break;
      v9 = v16;
      v6 = v17;
      v10 = v95;
      if ( v89 )
        goto LABEL_36;
LABEL_166:
      v76 = v97;
      if ( v15 + v97 <= (unsigned int)v93 || (int)v93 <= 0 )
        v78 = v15;
      else
        v78 = v93 - v97;
      v79 = v78 + v97;
      if ( v78 + v97 <= v90 )
      {
        v82 = ptr;
      }
      else
      {
        if ( (unsigned int)v93 < v79 || (int)v93 < 0 )
          v81 = v79;
        else
          v81 = (unsigned int)v93;
        v82 = (char *)realloc(ptr, v81);
        if ( !v82 )
        {
          v84 = ptr;
LABEL_194:
          free(v84);
          v83 = v6;
          goto LABEL_187;
        }
        v76 = v97;
        v90 = v81;
      }
      ptr = v82;
      memcpy(&v82[v76], src, v78);
      v10 = v95;
      v97 += v78;
      v13 = v93;
      s = v87;
      if ( (int)v93 >= 1 )
      {
LABEL_183:
        if ( v97 >= (unsigned int)v13 )
          goto end_of_stream;
      }
    }
    v9 = v15 + v16;
    if ( v15 + v16 <= v12 )
    {
      v6 = v17;
    }
    else
    {
      v6 = (char *)realloc(v17, (unsigned int)v9);
      v12 = v15 + v16;
      if ( !v6 )
      {
        free(v17);
        v83 = ptr;
LABEL_187:
        free(v83);
        result = 0LL;
        *v88 = -1;
        return result;
      }
    }
    memcpy(&v6[v16], src, (unsigned int)v15);
    v18 = v9 - 1;
    if ( v9 <= 1 )
      goto LABEL_9;
    v19 = 0;
    while ( 1 )
    {
      v20 = (unsigned __int8)v6[v19];
      if ( v20 == 10 )
      {
        v22 = v19 + 1LL;
        v23 = (unsigned __int8)v6[v22];
        v24 = v19 + 2;
        goto LABEL_27;
      }
      if ( v20 != 13 )
      {
        v11 = 0;
        if ( ++v19 >= v18 )
          goto LABEL_8;
        goto LABEL_18;
      }
      LODWORD(v21) = v19 + 1;
      if ( v6[v19 + 1] != 10 )
        break;
      v21 = v19 + 2LL;
      if ( v19 + 2 >= v9 || v6[v21] != 13 )
        break;
      v22 = v19 + 3LL;
      if ( (int)v22 >= v9 )
      {
        v11 = 0;
        goto LABEL_30;
      }
      v23 = (unsigned __int8)v6[v22];
      v24 = v19 + 4;
LABEL_27:
      if ( v23 == 10 )
        v11 = v24;
      else
        v11 = 0;
LABEL_30:
      v19 = v22 + 1;
      if ( (int)v22 + 1 >= v18 )
        goto LABEL_8;
LABEL_18:
      if ( v11 )
        goto LABEL_8;
    }
    v11 = 0;
    v19 = v21 + 1;
    if ( (int)v21 + 1 < v18 )
      goto LABEL_18;
LABEL_8:
    if ( !v11 )
    {
LABEL_9:
      v15 = receivedata((unsigned int)s, src, 2048LL, 5000LL, 0LL);
      v11 = 0;
      v16 = v9;
      v17 = v6;
      if ( v15 < 1 )
        goto end_of_stream;
      goto LABEL_10;
    }
    if ( v11 >= 2 )
    {
      v43 = v11 - 1;
      v44 = status_code;
      v92 = v11 - 1;
      v45 = 0;
      v46 = 0;
      v47 = 0;
      if ( status_code )
      {
        v48 = 0;
        v49 = v6 + 1;
        while ( 1 )
        {
          v50 = (unsigned __int8)v6[v48];
          v51 = (unsigned int)v48;
          if ( v50 == 58 && v47 >= 1 && v46 <= v47 )
          {
            if ( v48 < v43 )
            {
              v52 = 0LL;
              do
              {
                v53 = (unsigned __int8)v49[v48 + v52];
                if ( v53 != 9 && v53 != 32 )
                {
                  v48 += v52;
                  goto LABEL_92;
                }
                ++v52;
              }
              while ( v92 - v48 != v52 );
              v48 = v43;
              v46 = v51;
              v45 = v11;
              goto LABEL_94;
            }
LABEL_92:
            v45 = v48 + 1;
          }
          else
          {
            if ( v50 != 13 && v50 != 10 )
              goto LABEL_94;
            if ( !v47 )
            {
              if ( v48 < 1 )
                goto LABEL_122;
              while ( 1 )
              {
                if ( *(v49 - 1) == 32 )
                {
                  if ( (*v44 & 0x80000000) == 0 )
                  {
LABEL_121:
                    v43 = v11 - 1;
                    LODWORD(v51) = v48;
                    v49 = v6 + 1;
                    goto LABEL_122;
                  }
                  v59 = strtol(v49, 0uLL, 10);
                  v44 = status_code;
                  *status_code = v59;
                }
                --v51;
                ++v49;
                if ( !v51 )
                  goto LABEL_121;
              }
            }
            v54 = v46 - v47;
            if ( v46 <= v47 || v45 <= v46 )
            {
LABEL_122:
              if ( v48 < v9 )
                goto LABEL_123;
            }
            else
            {
              v55 = &v6[v47];
              v85 = v45;
              v56 = v54;
              if ( !strncasecmp(v55, "content-length", v54) )
              {
                v93 = strtol(&v6[v85], 0uLL, 10);
              }
              else if ( !strncasecmp(v55, "transfer-encoding", v56) )
              {
                v57 = strncasecmp(&v6[v85], "chunked", 7uLL);
                v58 = v89;
                if ( !v57 )
                  v58 = 1;
                v89 = v58;
              }
              v44 = status_code;
              v43 = v11 - 1;
              LODWORD(v51) = v48;
              v49 = v6 + 1;
              if ( v48 < v9 )
              {
LABEL_123:
                v60 = &v6[v48];
                v61 = v9 - (__int64)v48;
                do
                {
                  v62 = (unsigned __int8)*v60;
                  if ( v62 != 13 && v62 != 10 )
                  {
                    v45 = 0;
                    v47 = v48;
                    v46 = v48;
                    goto LABEL_94;
                  }
                  ++v48;
                  --v61;
                  ++v60;
                }
                while ( v61 );
                v45 = 0;
                v48 = v9;
                v47 = v9;
                v46 = v9;
                goto LABEL_94;
              }
            }
            v45 = 0;
            v47 = v48;
          }
          v46 = v51;
LABEL_94:
          if ( ++v48 >= v43 )
            goto LABEL_165;
        }
      }
      v63 = 0;
      while ( 2 )
      {
        v64 = (unsigned __int8)v6[v63];
        v65 = v63;
        if ( v64 == 58 && v47 >= 1 && v46 <= v47 )
        {
          if ( v63 < v43 )
          {
            v66 = 0LL;
            do
            {
              v67 = (unsigned __int8)v6[v63 + 1 + v66];
              if ( v67 != 32 && v67 != 9 )
              {
                v63 += v66;
                goto LABEL_133;
              }
              ++v66;
            }
            while ( v92 - v63 != v66 );
            v63 = v43;
            v46 = v65;
            v45 = v11;
            goto LABEL_135;
          }
LABEL_133:
          v45 = v63 + 1;
        }
        else
        {
          if ( v64 != 13 && v64 != 10 )
            goto LABEL_135;
          v68 = v46 - v47;
          if ( v46 > v47 && v45 > v46 )
          {
            v69 = &v6[v47];
            v70 = v68;
            v86 = v45;
            if ( !strncasecmp(v69, "content-length", v68) )
            {
              v93 = strtol(&v6[v86], 0uLL, 10);
            }
            else if ( !strncasecmp(v69, "transfer-encoding", v70) )
            {
              v71 = strncasecmp(&v6[v86], "chunked", 7uLL);
              v72 = v89;
              if ( !v71 )
                v72 = 1;
              v89 = v72;
            }
            v43 = v11 - 1;
            v65 = v63;
          }
          if ( v63 < v9 )
          {
            v73 = &v6[v63];
            v74 = v9 - (__int64)v63;
            do
            {
              v75 = (unsigned __int8)*v73;
              if ( v75 != 13 && v75 != 10 )
              {
                v45 = 0;
                v47 = v63;
                v46 = v63;
                goto LABEL_135;
              }
              ++v63;
              --v74;
              ++v73;
            }
            while ( v74 );
            v45 = 0;
            v63 = v9;
            v47 = v9;
            v46 = v9;
LABEL_135:
            if ( ++v63 >= v43 )
              goto LABEL_165;
            continue;
          }
          v45 = 0;
          v47 = v63;
        }
        break;
      }
      v46 = v65;
      goto LABEL_135;
    }
LABEL_165:
    v15 = v9 - v11;
    memcpy(src, &v6[v11], v9 - v11);
    v10 = v95;
    if ( !v89 )
      goto LABEL_166;
LABEL_36:
    if ( v15 >= 1 )
      break;
LABEL_87:
    v13 = v93;
    s = v87;
    if ( (int)v93 >= 1 )
      goto LABEL_183;
  }
  LODWORD(v25) = 0;
  v91 = v97;
  while ( 1 )
  {
    do
    {
      if ( v8 )
        goto LABEL_71;
      if ( !v10 )
      {
        v25 = src[(int)v25] == 13 ? (int)v25 + 1LL : (int)v25;
        if ( (int)v25 < v15 && src[v25] == 10 )
          LODWORD(v25) = v25 + 1;
      }
      if ( (int)v25 < v15 )
      {
        v26 = v10;
        v27 = *_ctype_b_loc();
        v28 = 0LL;
        v10 = v15 + v26 - v25;
        while ( (unsigned __int64)v26 + v28 <= 0x1E )
        {
          v29 = (unsigned __int8)src[(int)v25 + v28];
          if ( (v27[v29] & 0x1000) == 0 )
            break;
          v30 = &v99[v26 + 1 + v28++];
          *(v30 - 1) = v29;
          *v30 = 0;
          if ( (unsigned int)v15 - (__int64)(int)v25 == v28 )
          {
            LODWORD(v25) = v15;
            goto LABEL_53;
          }
        }
        LODWORD(v25) = v25 + v28;
        v10 = v26 + v28;
      }
LABEL_53:
      v31 = (int)v25;
      if ( (int)v25 <= (__int64)(unsigned int)v15 )
        v25 = (unsigned int)v15;
      else
        v25 = (int)v25;
      while ( v25 != v31 )
      {
        v32 = (unsigned __int8)src[v31++];
        if ( v32 == 13 || v32 == 10 )
        {
          if ( v32 == 13 )
            LODWORD(v25) = v31;
          else
            LODWORD(v25) = v31 - 1;
          break;
        }
      }
      if ( v15 <= (int)v25 )
      {
        v8 = 0;
        v97 = v91;
        goto LABEL_87;
      }
      v8 = 0;
    }
    while ( src[(int)v25] != 10 );
    if ( !v10 )
      break;
    v8 = 0;
    v33 = v10;
    v34 = v99;
    do
    {
      v35 = (unsigned __int8)*v34++;
      v36 = v35 - 0x30;
      v37 = (v35 | 0x20) - 0x57;
      if ( (unsigned int)(v35 - 0x30) < 0xA )
        v37 = v36;
      --v33;
      v8 = v37 + 16 * v8;
    }
    while ( v33 );
    v99[0] = 0;
    if ( !v8 )
      goto LABEL_189;
    v10 = 0;
    LODWORD(v25) = v25 + 1;
LABEL_71:
    if ( v8 >= v15 - (int)v25 )
      v38 = v15 - v25;
    else
      v38 = v8;
    v39 = v38 + v91;
    v96 = v10;
    v97 = v38 + v91;
    if ( v38 + v91 <= v90 )
    {
      v42 = ptr;
    }
    else
    {
      if ( (unsigned int)v93 < v39 || (int)v93 < 0 )
        v41 = v39;
      else
        v41 = (unsigned int)v93;
      v90 = v41;
      v42 = (char *)realloc(ptr, v41);
      if ( !v42 )
      {
        v84 = ptr;
        goto LABEL_194;
      }
    }
    ptr = v42;
    memcpy(&v42[v91], &src[(int)v25], v38);
    LODWORD(v25) = v38 + v25;
    v8 -= v38;
    v10 = v96;
    v91 += v38;
    if ( (int)v25 >= v15 )
      goto LABEL_87;
  }
  v99[0] = 0;
LABEL_189:
  v97 = v91;
end_of_stream:
  free(v6);
  *v88 = v97;
  if ( v97 )
    return ptr;
  free(ptr);
  return 0LL;
}
