void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v5; // $v0
  char *v6; // $s1
  void *v7; // $v0
  unsigned int v8; // $s5
  int v9; // $fp
  char *v10; // $s0
  int v11; // $s6
  unsigned int v12; // $a3
  int v13; // $s4
  int v14; // $v0
  signed int v15; // $s7
  char *v16; // $fp
  int v17; // $s4
  int v18; // $fp
  int v19; // $v0
  int v20; // $a0
  int v21; // $v1
  int v22; // $v1
  int v23; // $v1
  int v24; // $v1
  signed int v25; // $a1
  signed int v26; // $s6
  signed int v27; // $fp
  char *v28; // $a0
  int v29; // $t0
  unsigned int v30; // $s6
  signed int v31; // $v1
  const unsigned __int16 **v32; // $v0
  const unsigned __int16 *v33; // $v0
  int v34; // $v1
  char *v35; // $at
  signed int v36; // $t1
  char *v37; // $v0
  int v38; // $a1
  int v39; // $at
  int v40; // $v1
  int v41; // $at
  int v42; // $v1
  size_t v43; // $v0
  unsigned int v44; // $v0
  size_t v45; // $a1
  char *v46; // $v0
  int v47; // $a3
  size_t v48; // $t0
  int v49; // $s7
  int v50; // $v1
  int v51; // $v0
  int v52; // $fp
  int v53; // $a0
  int v54; // $a0
  int v55; // $v1
  const char *v56; // $s7
  int *v57; // $v0
  int v58; // $s6
  char *v59; // $s2
  unsigned int v60; // $s0
  int v61; // $s5
  int v62; // $v0
  int *v63; // $s3
  int v64; // $v0
  int v65; // $v0
  int v66; // $at
  int v67; // $v0
  int v68; // $t0
  int v69; // $fp
  int v70; // $v1
  int v71; // $v0
  int v72; // $s7
  int v73; // $a0
  int v74; // $a0
  int v75; // $v1
  const char *v76; // $s6
  int v77; // $v0
  int v78; // $v0
  int v79; // $at
  int v80; // $v0
  int v81; // $a0
  signed int v82; // $v1
  int v83; // $s6
  char *v84; // $v0
  char *v85; // $fp
  void *result; // $v0
  bool v87; // dc
  char *v88; // [sp+1Ch] [-864h]
  size_t v89; // [sp+20h] [-860h]
  size_t v90; // [sp+20h] [-860h]
  char *v91; // [sp+28h] [-858h]
  char *v92; // [sp+2Ch] [-854h]
  unsigned int v93; // [sp+30h] [-850h]
  int *v94; // [sp+34h] [-84Ch]
  int v95; // [sp+38h] [-848h]
  size_t v96; // [sp+3Ch] [-844h]
  int *v97; // [sp+40h] [-840h]
  size_t n; // [sp+44h] [-83Ch]
  int v99; // [sp+48h] [-838h]
  unsigned int v100; // [sp+4Ch] [-834h]
  void *ptr; // [sp+50h] [-830h]
  int v102; // [sp+54h] [-82Ch]
  int v103; // [sp+58h] [-828h]
  int v104; // [sp+5Ch] [-824h]
  char v105[32]; // [sp+60h] [-820h] BYREF
  char v106[2048]; // [sp+80h] [-800h] BYREF

  if ( status_code )
    *status_code = -1;
  v97 = status_code;
  v5 = (char *)malloc(0x800u);
  if ( v5 )
  {
    v6 = v5;
    v8 = 2048;
    v7 = malloc(0x800u);
    if ( v7 )
    {
      v94 = size;
      v9 = -1;
      v10 = v106;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      ptr = v7;
      v105[0] = 0;
      v95 = 0;
      v92 = "content-length";
      v91 = "transfer-encoding";
      n = 0;
      v93 = 2048;
      v102 = 0;
LABEL_6:
      while ( 1 )
      {
        v100 = v12;
        v14 = receivedata(s, v10, 2048, 5000);
        if ( v14 <= 0 )
          break;
        v104 = v9;
        v15 = v14;
        v16 = v6;
        while ( 1 )
        {
          if ( v13 )
          {
            v12 = v100;
            v103 = v11;
            v25 = v104;
            v26 = n;
            v6 = v16;
            if ( !v95 )
              goto LABEL_169;
LABEL_40:
            v104 = v25;
            if ( v15 <= 0 )
              goto LABEL_180;
            v27 = 0;
            while ( 1 )
            {
              v28 = (char *)ptr;
              v29 = v102;
              v99 = v102;
LABEL_43:
              if ( !v26 )
                break;
LABEL_74:
              v43 = v15 - v27;
              v100 = v12;
              if ( v26 < v15 - v27 )
                v43 = v26;
              n = v43;
              v44 = v43 + v29;
              v102 = v44;
              if ( v93 >= v44 )
              {
                v46 = v28;
              }
              else
              {
                v45 = v104;
                if ( v104 < (int)v44 )
                  v45 = v44;
                v93 = v45;
                v46 = (char *)realloc(v28, v45);
                v29 = v99;
                if ( !v46 )
                  goto LABEL_177;
              }
              ptr = v46;
              memcpy(&v46[v29], &v10[v27], n);
              v12 = v100;
              v27 += n;
              v26 -= n;
              if ( v27 >= v15 )
                goto LABEL_180;
            }
            if ( v12 )
            {
              v30 = v12;
              if ( v27 >= v15 )
              {
LABEL_49:
                v31 = v27;
                v12 = v30;
LABEL_58:
                v36 = v15;
                v37 = v105;
                if ( v15 < v31 )
                  v36 = v31;
                do
                {
                  if ( v36 == v31 )
                  {
                    ptr = v28;
                    v102 = v29;
                    n = 0;
                    v11 = v103;
                    v9 = v104;
                    if ( v104 > 0 )
                      goto LABEL_181;
                    goto LABEL_6;
                  }
                  v38 = (unsigned __int8)v10[v31++];
                }
                while ( v38 != 13 && v38 != 10 );
                v27 = v31 - 1;
                if ( v38 == 0xD )
                  v27 = v31;
                if ( v27 < v15 )
                {
                  v26 = 0;
                  if ( v10[v27] != 10 )
                    goto LABEL_43;
                  if ( v12 )
                  {
                    v26 = 0;
                    do
                    {
                      v39 = *v37++;
                      --v12;
                      v40 = v39 | 0x20;
                      v41 = v39 - 48;
                      v42 = v40 - 87;
                      if ( (unsigned __int8)v41 < 0xAu )
                        v42 = v41;
                      v26 = v42 + 16 * v26;
                    }
                    while ( v12 );
                    v105[0] = 0;
                    if ( v26 )
                    {
                      v12 = 0;
                      ++v27;
                      goto LABEL_74;
                    }
                    ptr = v28;
                    v102 = v29;
                  }
                  else
                  {
                    v105[0] = 0;
                    ptr = v28;
                    v102 = v29;
                  }
                  goto end_of_stream;
                }
                ptr = v28;
                v102 = v29;
                n = 0;
                v11 = v103;
                v9 = v104;
                if ( v104 > 0 )
                  goto LABEL_181;
                goto LABEL_6;
              }
            }
            else
            {
              v27 += v10[v27] == 0xD;
              if ( v27 >= v15 )
              {
                v30 = 0;
                if ( v27 >= v15 )
                  goto LABEL_49;
              }
              else
              {
                v27 += v10[v27] == 0xA;
                v30 = 0;
                if ( v27 >= v15 )
                  goto LABEL_49;
              }
            }
            v32 = _ctype_b_loc();
            v28 = (char *)ptr;
            v29 = v99;
            v33 = *v32;
            v12 = v30;
            while ( 1 )
            {
              if ( v12 >= 0x1F )
              {
                v31 = v27;
                goto LABEL_58;
              }
              v34 = v10[v27];
              if ( (v33[v34] & 0x10) == 0 )
                break;
              ++v27;
              v35 = &v105[v12++];
              v35[1] = 0;
              *v35 = v34;
              if ( v15 == v27 )
              {
                v31 = v15;
                goto LABEL_58;
              }
            }
            v31 = v27;
            goto LABEL_58;
          }
          v17 = v15 + v11;
          if ( v8 >= v15 + v11 )
          {
            v6 = v16;
          }
          else
          {
            v6 = (char *)realloc(v16, v15 + v11);
            v8 = v15 + v11;
            if ( !v6 )
            {
              free(v16);
              free(ptr);
              *v94 = -1;
              return 0;
            }
          }
          memcpy(&v6[v11], v10, v15);
          v18 = v15 + v11;
          if ( v17 >= 2 )
            break;
LABEL_9:
          v11 += v15;
          v15 = receivedata(s, v106, 2048, 5000);
          v13 = 0;
          v16 = v6;
          if ( v15 <= 0 )
            goto end_of_stream;
        }
        v19 = v17 - 1;
        v20 = 0;
        while ( 1 )
        {
          v21 = (unsigned __int8)v6[v20];
          if ( v21 == 10 )
            break;
          if ( v21 == 13 )
          {
            v22 = v20 + 1;
            v13 = 0;
            if ( v6[v20 + 1] != 10 )
              goto LABEL_34;
            v22 = v20 + 2;
            if ( v20 + 2 >= v18 )
            {
              v13 = 0;
LABEL_34:
              v20 = v22 + 1;
              if ( v22 + 1 >= v19 )
                goto LABEL_8;
              goto LABEL_35;
            }
            v13 = 0;
            if ( v6[v22] != 13 )
              goto LABEL_34;
            v23 = v20 + 3;
            if ( v20 + 3 >= v18 )
            {
              v20 += 4;
              v13 = 0;
              if ( v23 + 1 >= v19 )
                goto LABEL_8;
            }
            else
            {
              v13 = v20 + 4;
              if ( v6[v23] != 0xA )
                v13 = 0;
              v20 += 4;
              if ( v23 + 1 >= v19 )
                goto LABEL_8;
            }
          }
          else
          {
            ++v20;
            v13 = 0;
            if ( v20 >= v19 )
              goto LABEL_8;
          }
LABEL_35:
          if ( v13 )
            goto LABEL_8;
        }
        v24 = v20 + 1;
        v13 = v20 + 2;
        if ( v6[v20 + 1] != 0xA )
          v13 = 0;
        v20 += 2;
        if ( v24 + 1 < v19 )
          goto LABEL_35;
LABEL_8:
        if ( !v13 )
          goto LABEL_9;
        v103 = v15 + v11;
        if ( v13 >= 2 )
        {
          v47 = v13 - 1;
          v99 = v13 - 1;
          if ( v97 )
          {
            v48 = v15 + v11;
            v49 = 0;
            v50 = 0;
            v51 = 0;
            v52 = 0;
            v96 = v48;
            while ( 1 )
            {
              v54 = (unsigned __int8)v6[v52];
              if ( v54 == 58 && v51 > 0 && v51 >= v50 )
              {
                v49 = v52 + 1;
                if ( v52 >= v47 )
                {
                  v53 = v52;
                  v50 = v52;
                }
                else
                {
                  v49 = v52 + 1;
                  do
                  {
                    v55 = (unsigned __int8)v6[v49];
                    if ( v55 != 9 && v55 != 32 )
                    {
                      v53 = v49 - 1;
                      v50 = v52;
                      goto LABEL_90;
                    }
                    ++v49;
                  }
                  while ( v13 != v49 );
                  v53 = v47;
                  v50 = v52;
                  v49 = v13;
                }
              }
              else if ( v54 == 13 || v54 == 10 )
              {
                if ( v51 )
                {
                  if ( v51 >= v50 || v50 >= v49 )
                  {
LABEL_123:
                    v49 = 0;
                    if ( v52 < v103 )
                      goto LABEL_130;
                  }
                  else
                  {
                    v88 = &v6[v51];
                    v89 = v50 - v51;
                    if ( strncasecmp(&v6[v51], "content-length", v50 - v51) )
                    {
                      if ( strncasecmp(v88, "transfer-encoding", v89) )
                      {
                        v47 = v99;
                        v48 = v96;
                        v49 = 0;
                        if ( v52 < v103 )
                          goto LABEL_130;
                      }
                      else
                      {
                        v65 = strncasecmp(&v6[v49], "chunked", 7u);
                        v66 = v95;
                        v47 = v99;
                        v48 = v96;
                        if ( !v65 )
                          v66 = 1;
                        v95 = v66;
                        v49 = 0;
                        if ( v52 < v103 )
                        {
                          do
                          {
LABEL_130:
                            v67 = (unsigned __int8)v6[v52];
                            if ( v67 != 13 && v67 != 10 )
                            {
                              v53 = v52;
                              v51 = v52;
                              v50 = v52;
                              goto LABEL_90;
                            }
                            ++v52;
                          }
                          while ( v48 != v52 );
                          v50 = v103;
                          v53 = v103;
                          v51 = v103;
                          goto LABEL_90;
                        }
                      }
                    }
                    else
                    {
                      v64 = strtol(&v6[v49], 0u, 10);
                      v47 = v99;
                      v48 = v96;
                      v104 = v64;
                      v49 = 0;
                      if ( v52 < v103 )
                        goto LABEL_130;
                    }
                  }
                }
                else
                {
                  v56 = v6 + 1;
                  v57 = v97;
                  v58 = v52;
                  if ( v52 > 0 )
                  {
                    do
                    {
                      if ( *(v56 - 1) == 32 )
                      {
                        v59 = v10;
                        v60 = v8;
                        v61 = s;
                        if ( *v57 >= 0 )
                        {
                          v8 = v60;
                          v10 = v59;
                          goto LABEL_123;
                        }
                        v63 = v57;
                        v62 = strtol(v56, 0u, 10);
                        v48 = v96;
                        v47 = v99;
                        *v63 = v62;
                        v57 = v63;
                        s = v61;
                        v8 = v60;
                        v10 = v59;
                      }
                      --v58;
                      ++v56;
                    }
                    while ( v58 );
                    v49 = 0;
                    if ( v52 < v103 )
                      goto LABEL_130;
                  }
                  else
                  {
                    v49 = 0;
                    if ( v52 < v103 )
                      goto LABEL_130;
                  }
                }
                v53 = v52;
                v51 = v52;
                v50 = v52;
              }
              else
              {
                v53 = v52;
              }
LABEL_90:
              v52 = v53 + 1;
              if ( v53 + 1 >= v47 )
                goto LABEL_168;
            }
          }
          v68 = v15 + v11;
          v69 = 0;
          v70 = 0;
          v71 = 0;
          v72 = 0;
          v90 = v68;
          while ( 2 )
          {
            v74 = (unsigned __int8)v6[v72];
            if ( v74 == 58 && v71 > 0 && v71 >= v70 )
            {
              v69 = v72 + 1;
              if ( v72 >= v47 )
              {
                v73 = v72;
                v70 = v72;
              }
              else
              {
                v69 = v72 + 1;
                do
                {
                  v75 = (unsigned __int8)v6[v69];
                  if ( v75 != 32 && v75 != 9 )
                  {
                    v73 = v69 - 1;
                    v70 = v72;
                    goto LABEL_136;
                  }
                  ++v69;
                }
                while ( v13 != v69 );
                v73 = v47;
                v70 = v72;
                v69 = v13;
              }
              goto LABEL_136;
            }
            if ( v74 != 13 && v74 != 10 )
            {
              v73 = v72;
              goto LABEL_136;
            }
            if ( v71 < v70 && v70 < v69 )
            {
              v76 = &v6[v71];
              v96 = v70 - v71;
              if ( strncasecmp(&v6[v71], v92, v70 - v71) )
              {
                if ( strncasecmp(v76, v91, v96) )
                {
                  v47 = v99;
                  v68 = v90;
                  v69 = 0;
                  if ( v72 < v103 )
                    goto LABEL_164;
                }
                else
                {
                  v78 = strncasecmp(&v6[v69], "chunked", 7u);
                  v79 = v95;
                  v47 = v99;
                  v68 = v90;
                  if ( !v78 )
                    v79 = 1;
                  v95 = v79;
                  v69 = 0;
                  if ( v72 < v103 )
                  {
                    do
                    {
LABEL_164:
                      v80 = (unsigned __int8)v6[v72];
                      if ( v80 != 13 && v80 != 10 )
                      {
                        v73 = v72;
                        v71 = v72;
                        v70 = v72;
                        goto LABEL_136;
                      }
                      ++v72;
                    }
                    while ( v68 != v72 );
                    v70 = v103;
                    v73 = v103;
                    v71 = v103;
LABEL_136:
                    v72 = v73 + 1;
                    if ( v73 + 1 >= v47 )
                      goto LABEL_168;
                    continue;
                  }
                }
LABEL_158:
                v73 = v72;
                v71 = v72;
                v70 = v72;
                goto LABEL_136;
              }
              v77 = strtol(&v6[v69], 0u, 10);
              v47 = v99;
              v68 = v90;
              v104 = v77;
            }
            break;
          }
          v69 = 0;
          if ( v72 < v103 )
            goto LABEL_164;
          goto LABEL_158;
        }
LABEL_168:
        v15 = v103 - v13;
        memcpy(v106, &v6[v13], v103 - v13);
        v12 = v100;
        v25 = v104;
        v26 = n;
        if ( v95 )
          goto LABEL_40;
LABEL_169:
        v81 = v102;
        v82 = v15;
        if ( v25 < v15 + v102 )
          v82 = v25 - v102;
        if ( v25 >= 1 )
          v15 = v82;
        v83 = v15 + v102;
        if ( v93 >= v15 + v102 )
        {
          v85 = (char *)ptr;
        }
        else
        {
          if ( v25 < v83 )
            v25 = v15 + v102;
          v93 = v25;
          v84 = (char *)realloc(ptr, v25);
          v81 = v102;
          v85 = v84;
          if ( !v84 )
          {
LABEL_177:
            free(ptr);
            free(v6);
            *v94 = -1;
            return 0;
          }
        }
        memcpy(&v85[v81], v106, v15);
        v102 = v83;
        v12 = v100;
        v26 = n;
        ptr = v85;
LABEL_180:
        n = v26;
        v11 = v103;
        v9 = v104;
        if ( v104 > 0 )
        {
LABEL_181:
          if ( v102 >= v9 )
            break;
        }
      }
end_of_stream:
      free(v6);
      v87 = v102 == 0;
      *v94 = v102;
      if ( v87 )
      {
        free(ptr);
        return 0;
      }
      else
      {
        return ptr;
      }
    }
    else
    {
      free(v6);
      result = 0;
      *size = -1;
    }
  }
  else
  {
    result = 0;
    *size = -1;
  }
  return result;
}
