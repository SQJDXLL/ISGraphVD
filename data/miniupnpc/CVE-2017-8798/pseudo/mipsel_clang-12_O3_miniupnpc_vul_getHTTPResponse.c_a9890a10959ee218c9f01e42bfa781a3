void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // $v0
  char *v5; // $s1
  void *v6; // $v0
  char *v7; // $a1
  int v8; // $a2
  int v9; // $a0
  int v10; // $s6
  unsigned int v11; // $s3
  int v12; // $s4
  int v13; // $v0
  signed int v14; // $s7
  int v15; // $s0
  char *v16; // $fp
  char *v17; // $v0
  void *v18; // $a1
  int v19; // $a0
  int v20; // $v1
  int v21; // $v1
  int v22; // $fp
  signed int v23; // $s0
  const unsigned __int16 **v24; // $v0
  const unsigned __int16 *v25; // $v0
  int v26; // $v1
  _BYTE *v27; // $at
  int v28; // $v0
  char *v29; // $v0
  int v30; // $v1
  size_t v31; // $fp
  size_t v32; // $a1
  char *v33; // $v0
  int v34; // $t0
  int v35; // $s0
  const char *v36; // $s7
  int v37; // $fp
  int v38; // $t1
  int v39; // $v1
  int v40; // $v0
  int v41; // $s3
  int v42; // $a0
  int v43; // $a1
  int v44; // $v1
  const char *v45; // $s7
  int *v46; // $v0
  int v47; // $s0
  int v48; // $v0
  int *v49; // $fp
  int v50; // $s5
  int v51; // $v0
  int v52; // $v0
  int v53; // $at
  int v54; // $v0
  int v55; // $s3
  int v56; // $t1
  int v57; // $v1
  int v58; // $v0
  int v59; // $s0
  int v60; // $a0
  int v61; // $a1
  int v62; // $v1
  int v63; // $v0
  int v64; // $v0
  int v65; // $at
  int v66; // $v0
  int v67; // $a0
  signed int v68; // $v1
  int v69; // $s0
  void *v70; // $s3
  size_t v71; // $a1
  char *v72; // $v0
  char *v73; // $fp
  void *result; // $v0
  bool v75; // dc
  int v76; // [sp+18h] [-878h]
  int v77; // [sp+1Ch] [-874h]
  int v78; // [sp+1Ch] [-874h]
  size_t n; // [sp+20h] [-870h]
  const char *na; // [sp+20h] [-870h]
  size_t v81; // [sp+24h] [-86Ch]
  unsigned int v82; // [sp+38h] [-858h]
  unsigned int v83; // [sp+3Ch] [-854h]
  _BYTE *v84; // [sp+40h] [-850h]
  int *v85; // [sp+44h] [-84Ch]
  int v86; // [sp+48h] [-848h]
  int *v87; // [sp+4Ch] [-844h]
  int v88; // [sp+50h] [-840h]
  int v89; // [sp+54h] [-83Ch]
  void *ptr; // [sp+58h] [-838h]
  int v91; // [sp+5Ch] [-834h]
  int v92; // [sp+60h] [-830h]
  void *src; // [sp+64h] [-82Ch]
  int v94; // [sp+68h] [-828h]
  unsigned int v95; // [sp+6Ch] [-824h]
  char v96; // [sp+70h] [-820h] BYREF
  _BYTE v97[3]; // [sp+71h] [-81Fh] BYREF
  char v98[2048]; // [sp+90h] [-800h] BYREF

  v94 = s;
  if ( status_code )
    *status_code = -1;
  v87 = status_code;
  v4 = (char *)malloc(0x800u);
  if ( v4 )
  {
    v5 = v4;
    v95 = 2048;
    v6 = malloc(0x800u);
    if ( v6 )
    {
      ptr = v6;
      v7 = v98;
      v8 = -1;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v85 = size;
      v96 = 0;
      v86 = 0;
      src = v98;
      v84 = v97;
      v83 = 2048;
      v91 = 0;
LABEL_6:
      while ( 1 )
      {
        v92 = v8;
        v89 = v9;
        v13 = receivedata(v94, v7, 2048, 5000);
        if ( v13 <= 0 )
          break;
        v14 = v13;
        v15 = v10;
        v16 = v5;
        while ( !v12 )
        {
          v10 = v14 + v15;
          if ( v95 >= v14 + v15 )
          {
            v18 = src;
            v5 = v16;
          }
          else
          {
            v17 = (char *)realloc(v16, v14 + v15);
            v18 = src;
            v5 = v17;
            v95 = v14 + v15;
            if ( !v17 )
            {
              free(v16);
              free(ptr);
              *v85 = -1;
              return 0;
            }
          }
          memcpy(&v5[v15], v18, v14);
          if ( v10 >= 2 )
          {
            v19 = 0;
            do
            {
              v20 = (unsigned __int8)v5[v19];
              if ( v20 == 10 )
              {
                v21 = v19 + 1;
                v12 = v19 + 2;
                if ( v5[v19 + 1] != 0xA )
                  v12 = 0;
              }
              else if ( v20 == 13 )
              {
                v21 = v19 + 1;
                v12 = 0;
                if ( v5[v19 + 1] == 10 )
                {
                  v21 = v19 + 2;
                  if ( v19 + 2 >= v10 )
                  {
                    v12 = 0;
                  }
                  else
                  {
                    v12 = 0;
                    if ( v5[v21] == 13 )
                    {
                      v21 = v19 + 3;
                      if ( v19 + 3 >= v10 )
                      {
                        v12 = 0;
                      }
                      else
                      {
                        v12 = v19 + 4;
                        if ( v5[v21] != 0xA )
                          v12 = 0;
                      }
                    }
                  }
                }
              }
              else
              {
                v21 = v19;
                v12 = 0;
              }
              v19 = v21 + 1;
            }
            while ( v21 + 1 < v10 - 1 && !v12 );
            if ( v12 )
            {
              v82 = v11;
              if ( v12 >= 2 )
              {
                v34 = v12 - 1;
                v88 = v12 - 1;
                if ( v87 )
                {
                  v35 = v14 + v15;
                  v36 = v5 + 1;
                  v37 = v12 - 1;
                  v38 = 0;
                  v39 = 0;
                  v40 = 0;
                  v41 = 0;
                  v76 = v35;
                  while ( 1 )
                  {
                    v43 = (unsigned __int8)v5[v41];
                    if ( v40 > 0 && v40 >= v39 && v43 == 58 )
                    {
                      v42 = v41;
                      if ( v41 < v34 )
                      {
                        while ( 1 )
                        {
                          v44 = (unsigned __int8)v36[v42];
                          if ( v44 != 32 && v44 != 9 )
                            break;
                          if ( v37 == ++v42 )
                          {
                            v42 = v34;
                            break;
                          }
                        }
                      }
                      v38 = v42 + 1;
                      v39 = v41;
                    }
                    else if ( v43 == 13 || v43 == 10 )
                    {
                      if ( v40 )
                      {
                        if ( v40 >= v39 || v39 >= v38 )
                          goto LABEL_111;
                        v45 = &v5[v40];
                        v77 = v38;
                        n = v39 - v40;
                        if ( !strncasecmp(&v5[v40], "content-length", v39 - v40) )
                        {
                          v51 = strtol(&v5[v77], 0u, 10);
                          v34 = v88;
                          v36 = v5 + 1;
                          v92 = v51;
LABEL_111:
                          v38 = 0;
                          if ( v41 < v10 )
                            goto LABEL_118;
                          goto LABEL_112;
                        }
                        if ( !strncasecmp(v45, "transfer-encoding", n) )
                        {
                          v52 = strncasecmp(&v5[v77], "chunked", 7u);
                          v53 = v86;
                          v34 = v88;
                          v36 = v5 + 1;
                          if ( !v52 )
                            v53 = 1;
                          v86 = v53;
                          v38 = 0;
                          if ( v41 >= v10 )
                            goto LABEL_112;
                          do
                          {
LABEL_118:
                            v54 = (unsigned __int8)v5[v41];
                            if ( v54 != 13 && v54 != 10 )
                            {
                              v42 = v41;
                              v40 = v41;
                              v39 = v41;
                              goto LABEL_79;
                            }
                            ++v41;
                          }
                          while ( v35 != v41 );
                          v42 = v10;
                          v40 = v10;
                          v39 = v10;
                          goto LABEL_79;
                        }
                        v34 = v88;
                        v36 = v5 + 1;
                        v38 = 0;
                        if ( v41 < v10 )
                          goto LABEL_118;
                      }
                      else
                      {
                        v46 = v87;
                        v47 = v41;
                        if ( v41 > 0 )
                        {
                          while ( 1 )
                          {
                            if ( *(v36 - 1) == 32 )
                            {
                              v50 = v37;
                              if ( *v46 >= 0 )
                              {
                                v35 = v76;
                                v36 = v5 + 1;
                                v38 = 0;
                                if ( v41 < v10 )
                                  goto LABEL_118;
                                goto LABEL_112;
                              }
                              v49 = v46;
                              v48 = strtol(v36, 0u, 10);
                              v34 = v88;
                              *v49 = v48;
                              v46 = v49;
                              v37 = v50;
                            }
                            --v47;
                            ++v36;
                            if ( !v47 )
                            {
                              v35 = v76;
                              v36 = v5 + 1;
                              v38 = 0;
                              if ( v41 < v10 )
                                goto LABEL_118;
                              goto LABEL_112;
                            }
                          }
                        }
                        v35 = v76;
                        v36 = v5 + 1;
                        v38 = 0;
                        if ( v41 < v10 )
                          goto LABEL_118;
                      }
LABEL_112:
                      v42 = v41;
                      v40 = v41;
                      v39 = v41;
                    }
                    else
                    {
                      v42 = v41;
                    }
LABEL_79:
                    v41 = v42 + 1;
                    if ( v42 + 1 >= v34 )
                      goto LABEL_160;
                  }
                }
                v55 = v14 + v15;
                v56 = 0;
                v57 = 0;
                v58 = 0;
                v59 = 0;
                while ( 2 )
                {
                  v61 = (unsigned __int8)v5[v59];
                  if ( v58 > 0 && v58 >= v57 && v61 == 58 )
                  {
                    v60 = v59;
                    if ( v59 < v34 )
                    {
                      v60 = v59;
                      while ( 1 )
                      {
                        v62 = (unsigned __int8)v5[v60 + 1];
                        if ( v62 != 32 && v62 != 9 )
                          break;
                        if ( v12 - 1 == ++v60 )
                        {
                          v60 = v34;
                          break;
                        }
                      }
                    }
                    v56 = v60 + 1;
                    v57 = v59;
                    goto LABEL_129;
                  }
                  if ( v61 != 13 && v61 != 10 )
                  {
                    v60 = v59;
                    goto LABEL_129;
                  }
                  if ( v58 < v57 && v57 < v56 )
                  {
                    v78 = v56;
                    na = &v5[v58];
                    v81 = v57 - v58;
                    if ( strncasecmp(&v5[v58], "content-length", v57 - v58) )
                    {
                      if ( !strncasecmp(na, "transfer-encoding", v81) )
                      {
                        v64 = strncasecmp(&v5[v78], "chunked", 7u);
                        v65 = v86;
                        v34 = v88;
                        if ( !v64 )
                          v65 = 1;
                        v86 = v65;
                        v56 = 0;
                        if ( v59 < v10 )
                        {
                          do
                          {
LABEL_156:
                            v66 = (unsigned __int8)v5[v59];
                            if ( v66 != 13 && v66 != 10 )
                            {
                              v60 = v59;
                              v58 = v59;
                              v57 = v59;
                              goto LABEL_129;
                            }
                            ++v59;
                          }
                          while ( v55 != v59 );
                          v60 = v10;
                          v58 = v10;
                          v57 = v10;
LABEL_129:
                          v59 = v60 + 1;
                          if ( v60 + 1 >= v34 )
                            goto LABEL_160;
                          continue;
                        }
                      }
                      else
                      {
                        v34 = v88;
                        v56 = 0;
                        if ( v59 < v10 )
                          goto LABEL_156;
                      }
LABEL_150:
                      v60 = v59;
                      v58 = v59;
                      v57 = v59;
                      goto LABEL_129;
                    }
                    v63 = strtol(&v5[v78], 0u, 10);
                    v34 = v88;
                    v92 = v63;
                  }
                  break;
                }
                v56 = 0;
                if ( v59 < v10 )
                  goto LABEL_156;
                goto LABEL_150;
              }
LABEL_160:
              v14 = v10 - v12;
              memcpy(v98, &v5[v12], v10 - v12);
              v7 = (char *)src;
              v8 = v92;
              v11 = v82;
              v9 = v89;
              v22 = (int)v84;
              if ( !v86 )
                goto LABEL_161;
LABEL_36:
              if ( v14 > 0 )
              {
                v23 = 0;
                v92 = v8;
                while ( 2 )
                {
                  v88 = v91;
                  while ( !v9 )
                  {
                    if ( !v11 )
                    {
                      v23 += v7[v23] == 0xD;
                      if ( v23 < v14 )
                        v23 += v7[v23] == 0xA;
                    }
                    if ( v23 < v14 )
                    {
                      v24 = _ctype_b_loc();
                      v8 = v92;
                      v7 = (char *)src;
                      v25 = *v24;
                      while ( v11 < 0x1F )
                      {
                        v26 = v7[v23];
                        if ( (v25[v26] & 0x1000) == 0 )
                          break;
                        v27 = (_BYTE *)(v22 + v11);
                        ++v23;
                        ++v11;
                        *v27 = 0;
                        *(v27 - 1) = v26;
                        if ( v14 == v23 )
                        {
                          v9 = 0;
                          v91 = v88;
                          if ( v8 > 0 )
                            goto LABEL_173;
                          goto LABEL_6;
                        }
                      }
                    }
                    if ( v23 < v14 )
                    {
                      do
                      {
                        v28 = (unsigned __int8)v7[v23];
                        if ( v28 == 10 || v28 == 13 )
                        {
                          v23 += v28 == 0xD;
                          goto LABEL_55;
                        }
                        ++v23;
                      }
                      while ( v14 != v23 );
                      v9 = 0;
                      v91 = v88;
                      if ( v8 > 0 )
                        goto LABEL_173;
                      goto LABEL_6;
                    }
LABEL_55:
                    if ( v23 >= v14 )
                    {
                      v9 = 0;
                      v91 = v88;
                      if ( v8 > 0 )
                        goto LABEL_173;
                      goto LABEL_6;
                    }
                    v9 = 0;
                    if ( v7[v23] == 10 )
                    {
                      if ( !v11 )
                      {
                        v96 = 0;
                        v91 = v88;
                        goto end_of_stream;
                      }
                      v29 = &v96;
                      v9 = 0;
                      do
                      {
                        while ( 1 )
                        {
                          v30 = (unsigned __int8)*v29;
                          if ( (unsigned __int8)(v30 - 0x30) < 0xAu )
                            break;
                          v9 = 16 * v9 - 0x57 + (char)(v30 | 0x20);
                          --v11;
                          ++v29;
                          if ( !v11 )
                            goto LABEL_62;
                        }
                        v9 = 16 * v9 - 0x30 + v30;
                        --v11;
                        ++v29;
                      }
                      while ( v11 );
LABEL_62:
                      v96 = 0;
                      if ( !v9 )
                      {
                        v91 = v88;
                        goto end_of_stream;
                      }
                      v11 = 0;
                      ++v23;
                      break;
                    }
                  }
                  v31 = v14 - v23;
                  v89 = v9;
                  if ( v9 < v14 - v23 )
                    v31 = v9;
                  v91 = v31 + v88;
                  if ( v83 >= v31 + v88 )
                  {
                    v33 = (char *)ptr;
                  }
                  else
                  {
                    v32 = v8;
                    if ( v8 < (int)(v31 + v88) )
                      v32 = v31 + v88;
                    v83 = v32;
                    v33 = (char *)realloc(ptr, v32);
                    if ( !v33 )
                    {
                      free(ptr);
                      free(v5);
                      *v85 = -1;
                      return 0;
                    }
                  }
                  ptr = v33;
                  memcpy(&v33[v88], (char *)src + v23, v31);
                  v23 += v31;
                  v7 = (char *)src;
                  v8 = v92;
                  v9 = v89 - v31;
                  v22 = (int)v84;
                  if ( v23 < v14 )
                    continue;
                  break;
                }
              }
              goto LABEL_172;
            }
          }
          v14 = receivedata(v94, v98, 2048, 5000);
          v12 = 0;
          v15 = v10;
          v16 = v5;
          if ( v14 <= 0 )
            goto end_of_stream;
        }
        v7 = (char *)src;
        v8 = v92;
        v9 = v89;
        v5 = v16;
        v22 = (int)v84;
        v10 = v15;
        if ( v86 )
          goto LABEL_36;
LABEL_161:
        v67 = v91;
        v68 = v14;
        v82 = v11;
        v92 = v8;
        if ( v8 < v14 + v91 )
          v68 = v8 - v91;
        if ( v8 >= 1 )
          v14 = v68;
        v69 = v14 + v91;
        if ( v83 >= v14 + v91 )
        {
          v73 = (char *)ptr;
        }
        else
        {
          v70 = ptr;
          v71 = v8;
          if ( v8 < v69 )
            v71 = v14 + v91;
          v83 = v71;
          v72 = (char *)realloc(ptr, v71);
          v67 = v91;
          v73 = v72;
          if ( !v72 )
          {
            free(v70);
            free(v5);
            *v85 = -1;
            return 0;
          }
        }
        memcpy(&v73[v67], v98, v14);
        v7 = (char *)src;
        v8 = v92;
        v11 = v82;
        v9 = v89;
        ptr = v73;
        v91 = v69;
LABEL_172:
        if ( v8 > 0 )
        {
LABEL_173:
          if ( v91 >= v8 )
            break;
        }
      }
end_of_stream:
      free(v5);
      v75 = v91 == 0;
      *v85 = v91;
      if ( v75 )
      {
        free(ptr);
        return 0;
      }
      else
      {
        return ptr;
      }
    }
    else
    {
      free(v5);
      result = 0;
      *size = -1;
    }
  }
  else
  {
    result = 0;
    *size = -1;
  }
  return result;
}
