void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // r9
  int *v5; // r5
  int v6; // r7
  signed int v7; // r6
  unsigned int v8; // r10
  int v9; // r0
  char *v10; // r8
  int v11; // r11
  char *v12; // r0
  signed int v13; // r2
  int v14; // r12
  bool v15; // r3
  int v17; // r3
  char *v18; // r11
  char *v19; // r1
  char *v20; // r4
  _BOOL4 v21; // r3
  _DWORD *v22; // r4
  int *v23; // r10
  int v24; // r2
  int v25; // r1
  int v26; // r4
  int v27; // r6
  int v28; // r5
  bool v29; // zf
  bool v30; // cc
  int v31; // r0
  const char *v32; // r8
  int v33; // r7
  bool v34; // zf
  _BOOL4 v35; // r0
  const char *v36; // r6
  int v37; // t1
  char *v38; // r2
  int v39; // r6
  int v40; // t1
  bool v41; // zf
  unsigned int v42; // r11
  char *v43; // r9
  int v44; // r4
  size_t v45; // r10
  unsigned int v46; // r3
  char *v47; // r0
  const void *v48; // r1
  int *v49; // lr
  const unsigned __int16 *v50; // r6
  int v51; // r0
  _BYTE *v52; // r1
  char v53; // r2
  int v54; // t1
  int v55; // r2
  int v56; // r3
  int v57; // t1
  bool v58; // zf
  int v59; // r3
  unsigned __int8 *v60; // r3
  unsigned __int8 *v61; // r5
  int v62; // r2
  int v63; // t1
  int v64; // r6
  int v65; // r6
  void *v67; // r0
  bool v68; // cc
  const char *v69; // r8
  int v70; // r0
  int v71; // r3
  int v72; // r2
  int v73; // r3
  int v74; // t1
  int v75; // r6
  bool v76; // zf
  void *v77; // r0
  int *v78; // r4
  int *v79; // r4
  int v80[2]; // [sp+0h] [bp-898h] BYREF
  int content_length; // [sp+Ch] [bp-88Ch]
  unsigned int content_buf_len; // [sp+10h] [bp-888h]
  char *header_buf; // [sp+14h] [bp-884h]
  unsigned int content_buf_used; // [sp+18h] [bp-880h]
  char *v85; // [sp+1Ch] [bp-87Ch]
  int endofheaders; // [sp+20h] [bp-878h]
  int sa; // [sp+24h] [bp-874h]
  unsigned int header_buf_len; // [sp+28h] [bp-870h]
  unsigned int chunksize; // [sp+2Ch] [bp-86Ch]
  unsigned int chunksize_buf_index; // [sp+30h] [bp-868h]
  int v91; // [sp+34h] [bp-864h]
  int *status_codea; // [sp+38h] [bp-860h]
  int *sizea; // [sp+3Ch] [bp-85Ch]
  int *v94; // [sp+40h] [bp-858h]
  int *v95; // [sp+44h] [bp-854h]
  char chunksize_buf[32]; // [sp+4Ch] [bp-84Ch] BYREF
  char buf[2048]; // [sp+6Ch] [bp-82Ch] BYREF

  chunksize = s;
  v94 = status_code;
  if ( status_code )
    *status_code = -1;
  v4 = (char *)malloc(0x800u);
  if ( !v4 )
    goto LABEL_165;
  content_buf_len = (unsigned int)malloc(0x800u);
  if ( !content_buf_len )
  {
    free(v4);
LABEL_165:
    *size = -1;
    return 0;
  }
  content_buf_used = 2048;
  chunksize_buf_index = 2048;
  v5 = 0;
  header_buf = (char *)-1;
  content_length = (int)buf;
  v6 = 0;
  v7 = 0;
  v8 = 0;
  chunksize_buf[0] = 0;
  endofheaders = 0;
  v85 = 0;
  sa = (int)chunksize_buf;
  v95 = size;
  while ( 1 )
  {
    while ( 1 )
    {
      v9 = receivedata(chunksize, content_length, 2048, 5000, 0);
      v10 = (char *)v9;
      if ( v9 <= 0 )
      {
        v22 = v95;
        v18 = (char *)v6;
end_of_stream:
        free(v4);
        *v22 = v18;
        if ( !v6 )
        {
          free((void *)content_buf_len);
          return 0;
        }
        return (void *)content_buf_len;
      }
      if ( v8 )
      {
        if ( v85 )
          goto LABEL_77;
LABEL_25:
        v18 = &v10[v6];
        v19 = &v10[v6];
        if ( (int)header_buf <= 0 )
        {
          if ( content_buf_used < (unsigned int)v18 )
          {
            if ( (int)header_buf < (int)v18 )
            {
              v20 = &v10[v6];
              goto LABEL_122;
            }
LABEL_132:
            v20 = &v10[v6];
            v19 = header_buf;
            goto LABEL_122;
          }
        }
        else
        {
          if ( (int)header_buf < (int)v18 )
          {
            v18 = header_buf;
            v20 = header_buf;
            v10 = &header_buf[-v6];
            if ( (unsigned int)header_buf <= content_buf_used )
            {
LABEL_28:
              memcpy((void *)(content_buf_len + v6), (const void *)content_length, (size_t)v10);
              v6 = (int)v20;
              v85 = 0;
              goto LABEL_29;
            }
            v20 = header_buf;
            v19 = header_buf;
LABEL_122:
            content_buf_used = (unsigned int)v19;
            v67 = realloc((void *)content_buf_len, (size_t)v19);
            if ( !v67 )
            {
              v78 = v95;
              v77 = (void *)content_buf_len;
              goto LABEL_163;
            }
            v18 = v20;
            content_buf_len = (unsigned int)v67;
            goto LABEL_28;
          }
          if ( content_buf_used < (unsigned int)v18 )
            goto LABEL_132;
        }
        v20 = &v10[v6];
        goto LABEL_28;
      }
      v11 = v9 + endofheaders;
      if ( v9 + endofheaders > chunksize_buf_index )
      {
        v12 = (char *)realloc(v4, v9 + endofheaders);
        if ( !v12 )
        {
          v79 = v95;
          free(v4);
          free((void *)content_buf_len);
          *v79 = -1;
          return 0;
        }
        v4 = v12;
        chunksize_buf_index = v11;
      }
      memcpy(&v4[endofheaders], (const void *)content_length, (size_t)v10);
      if ( v11 > 1 )
        break;
LABEL_117:
      endofheaders = v11;
    }
    v13 = 0;
    do
    {
      v17 = (unsigned __int8)v4[v13];
      v14 = v13 + 1;
      if ( v17 == 13 )
      {
        if ( v4[v14] != 10 )
          goto LABEL_21;
        if ( v13 + 2 < v11 && v4[v13 + 2] == 13 )
        {
          v14 = v13 + 3;
          if ( v13 + 3 < v11 && v4[v14] == 10 )
          {
            v13 += 4;
            v15 = v13 == 0;
            v8 = v13;
          }
          else
          {
            v13 += 4;
            v8 = 0;
            v14 = -1;
            v15 = 1;
          }
        }
        else
        {
          v13 += 3;
          v8 = 0;
          v14 = -1;
          v15 = 1;
        }
      }
      else
      {
        if ( v17 != 10 )
        {
          ++v13;
          v8 = 0;
          v14 = -1;
          v15 = 1;
          goto LABEL_15;
        }
        if ( v4[v14] != 10 )
        {
LABEL_21:
          v13 += 2;
          v8 = 0;
          v14 = -1;
          v15 = 1;
          goto LABEL_15;
        }
        v13 += 2;
        v15 = v13 == 0;
        v8 = v13;
      }
LABEL_15:
      ;
    }
    while ( v11 - 1 > v13 && v15 );
    if ( !v8 )
      goto LABEL_117;
    if ( v14 <= 0 )
      goto LABEL_74;
    header_buf_len = v8;
    v91 = v7;
    status_codea = v5;
    v23 = v94;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = v14;
    endofheaders = v6;
    while ( 2 )
    {
      while ( 2 )
      {
        v30 = v25 <= v24;
        if ( v25 >= v24 )
          v30 = v25 <= 0;
        v31 = (unsigned __int8)v4[v26];
        v32 = &v4[v26];
        v33 = v26 + 1;
        if ( !v30 )
        {
          if ( v31 != 58 )
          {
            v29 = v31 == 13;
            if ( v31 != 13 )
              v29 = v31 == 10;
            if ( !v29 )
              goto LABEL_43;
            goto LABEL_62;
          }
          if ( v26 >= v28 )
          {
            v27 = v26 + 1;
            v24 = v26++;
          }
          else
          {
            v72 = v26;
            do
            {
              v74 = *(unsigned __int8 *)++v32;
              v73 = v74;
              v75 = v72;
              v76 = v74 == 9;
              if ( v74 != 9 )
                v76 = v73 == 32;
              ++v72;
              if ( !v76 )
              {
                v27 = v75 + 1;
                v24 = v26;
                v26 = v27;
                goto LABEL_44;
              }
            }
            while ( v28 != v72 );
            v27 = v28 + 1;
            v24 = v26;
            v26 = v28 + 1;
          }
LABEL_44:
          if ( v28 <= v26 )
            goto LABEL_73;
          continue;
        }
        break;
      }
      v34 = v31 == 10;
      if ( v31 != 10 )
        v34 = v31 == 13;
      if ( !v34 )
      {
LABEL_43:
        ++v26;
        goto LABEL_44;
      }
      v35 = v25 == 0;
      if ( !v23 )
        v35 = 0;
      if ( v35 )
      {
        if ( v26 <= 0 )
          goto LABEL_63;
        v36 = v4;
        do
        {
          while ( 1 )
          {
            v37 = *(unsigned __int8 *)v36++;
            if ( v37 == 32 )
              break;
            if ( v32 == v36 )
              goto LABEL_62;
          }
          if ( *v23 >= 0 )
            break;
          *v23 = strtol(v36, 0u, 10);
        }
        while ( v32 != v36 );
        goto LABEL_62;
      }
      v68 = v25 < v24;
      if ( v25 < v24 )
        v68 = v24 < v27;
      if ( !v68 )
        goto LABEL_62;
      v69 = &v4[v25];
      sizea = (int *)(v24 - v25);
      if ( !strncasecmp(&v4[v25], "content-length", v24 - v25) )
      {
        header_buf = (char *)strtol(&v4[v27], 0u, 10);
        goto LABEL_62;
      }
      if ( strncasecmp(v69, "transfer-encoding", (size_t)sizea) )
      {
LABEL_62:
        if ( v11 > v26 )
          goto LABEL_63;
        goto LABEL_142;
      }
      v70 = strncasecmp(&v4[v27], "chunked", 7u);
      v71 = (int)v85;
      if ( !v70 )
        v71 = 1;
      v85 = (char *)v71;
      if ( v11 <= v26 )
      {
LABEL_142:
        v24 = v26;
        v25 = v26;
        v27 = 0;
        ++v26;
        goto LABEL_44;
      }
LABEL_63:
      v38 = &v4[v26 - 1];
      while ( 1 )
      {
        v40 = (unsigned __int8)*++v38;
        v39 = v40;
        v25 = v26;
        v41 = v40 == 10;
        if ( v40 != 10 )
          v41 = v39 == 13;
        v27 = v41;
        v26 = v33;
        if ( !v41 )
          break;
        if ( v11 == v33 )
        {
          v26 = v25 + 2;
          v27 = 0;
          v24 = v11;
          v25 = v11;
          goto LABEL_44;
        }
        ++v33;
      }
      v24 = v25;
      if ( v28 > v33 )
        continue;
      break;
    }
LABEL_73:
    v6 = endofheaders;
    v8 = header_buf_len;
    v7 = v91;
    v5 = status_codea;
LABEL_74:
    v10 = (char *)(v11 - v8);
    memcpy((void *)content_length, &v4[v8], v11 - v8);
    endofheaders = v11;
    if ( !v85 )
      goto LABEL_25;
    if ( (int)v10 <= 0 )
    {
      v18 = (char *)v6;
      goto LABEL_29;
    }
LABEL_77:
    v85 = v4;
    v42 = content_buf_used;
    v43 = (char *)content_buf_len;
    v44 = 0;
    header_buf_len = v8;
LABEL_87:
    if ( v7 )
      goto LABEL_78;
    content_buf_len = 0;
    while ( 2 )
    {
      if ( !v5 )
      {
        if ( *((_BYTE *)&v80[0x1B] + v44) == 13 )
          ++v44;
        if ( v44 >= (int)v10 )
          goto LABEL_126;
        if ( *((_BYTE *)&v80[0x1B] + v44) != 10 )
          goto LABEL_94;
        ++v44;
      }
      if ( v44 >= (int)v10 )
        goto LABEL_126;
LABEL_94:
      v49 = (int *)((char *)v5 + (_DWORD)v10 - v44);
      v50 = *_ctype_b_loc();
      v51 = content_length + v44 - 1;
      v52 = (char *)v5 + sa;
      do
      {
        v54 = *(unsigned __int8 *)++v51;
        v53 = v54;
        if ( (((unsigned int)v5 <= 0x1E) & (v50[v54] >> 0xC)) == 0 )
          break;
        v5 = (int *)((char *)v5 + 1);
        *v52 = v53;
        ++v44;
        *++v52 = 0;
      }
      while ( v5 != v49 );
      if ( v44 >= (int)v10 )
        goto LABEL_126;
      v55 = content_length + v44 - 1;
      while ( 1 )
      {
        v57 = *(unsigned __int8 *)++v55;
        v56 = v57;
        v58 = v57 == 13;
        if ( v57 != 13 )
          v58 = v56 == 10;
        if ( v58 )
          break;
        if ( (char *)++v44 == v10 )
          goto LABEL_126;
      }
      if ( v44 >= (int)v10 )
      {
LABEL_126:
        v8 = header_buf_len;
        v7 = content_buf_len;
        goto LABEL_127;
      }
      v59 = *((unsigned __int8 *)&v80[0x1B] + v44);
      if ( v59 == 13 )
      {
        if ( ++v44 >= (int)v10 )
          goto LABEL_126;
        v59 = *((unsigned __int8 *)&v80[0x1B] + v44);
      }
      if ( v59 != 10 )
        continue;
      break;
    }
    if ( !v5 )
      goto LABEL_114;
    v60 = (unsigned __int8 *)sa;
    v7 = 0;
    v61 = (unsigned __int8 *)v5 + sa;
    do
    {
      v63 = *v60++;
      v62 = v63;
      v64 = 16 * v7;
      if ( (unsigned int)(v63 - 0x30) > 9 )
      {
        v65 = v64 - 0x57;
        v62 |= 0x20u;
      }
      else
      {
        v65 = v64 - 0x30;
      }
      v7 = v65 + v62;
    }
    while ( v60 != v61 );
    v5 = 0;
    ++v44;
    chunksize_buf[0] = 0;
    if ( !v7 )
    {
LABEL_114:
      content_buf_len = (unsigned int)v43;
      v22 = v95;
      v4 = v85;
      v18 = (char *)v6;
      goto end_of_stream;
    }
LABEL_78:
    v45 = (size_t)&v10[-v44];
    if ( (int)&v10[-v44] >= v7 )
      v45 = v7;
    v46 = v6;
    v6 += v45;
    if ( v6 > v42 )
      break;
LABEL_86:
    v48 = (const void *)(content_length + v44);
    v44 += v45;
    memcpy(&v43[v46], v48, v45);
    v7 -= v45;
    if ( v44 < (int)v10 )
      goto LABEL_87;
    v8 = header_buf_len;
LABEL_127:
    content_buf_used = v42;
    content_buf_len = (unsigned int)v43;
    v18 = (char *)v6;
    v4 = v85;
    v85 = (_BYTE *)(getHTTPResponse + 1);
LABEL_29:
    v21 = (int)header_buf > 0;
    if ( (int)header_buf > (int)v18 )
      v21 = 0;
    if ( v21 )
    {
      v22 = v95;
      goto end_of_stream;
    }
  }
  content_buf_len = v46;
  if ( (int)header_buf < v6 )
    v42 = v6;
  else
    v42 = (unsigned int)header_buf;
  v47 = (char *)realloc(v43, v42);
  v46 = content_buf_len;
  if ( v47 )
  {
    v43 = v47;
    goto LABEL_86;
  }
  v77 = v43;
  v78 = v95;
  v4 = v85;
LABEL_163:
  free(v77);
  free(v4);
  *v78 = -1;
  return 0;
}
