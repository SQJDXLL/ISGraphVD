void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // r0
  void *v5; // r4
  unsigned int v6; // r11
  unsigned int v7; // r9
  char *v8; // r8
  char *v9; // r10
  int v10; // r0
  char *v11; // r6
  void *v12; // r0
  char *v13; // r3
  char *v14; // r2
  signed int i; // r5
  int v16; // r3
  int v17; // r6
  int v18; // r3
  size_t v19; // r7
  signed int v20; // r6
  int v21; // r5
  int v22; // r4
  _BOOL4 v23; // r3
  int v24; // r5
  char *v25; // r9
  int v26; // r10
  int *v27; // r11
  const char *v28; // r6
  char *v29; // r2
  char *v30; // r1
  int v31; // r4
  int v32; // r5
  int v33; // r5
  bool v34; // zf
  _BOOL4 v35; // r0
  const char *v36; // r8
  int v37; // r0
  char *v38; // r7
  bool v39; // zf
  _BOOL4 v40; // r0
  const char *v41; // r5
  int v42; // t1
  const char *v43; // r2
  int v44; // r5
  int v45; // t1
  bool v46; // zf
  unsigned int v47; // r5
  int v48; // r4
  char *v49; // r2
  int v50; // r7
  int v51; // r3
  char *v52; // r0
  const void *v53; // r1
  int v54; // r3
  const unsigned __int16 *v55; // lr
  unsigned int v56; // r0
  _BYTE *v57; // r1
  int v58; // r3
  int v59; // t1
  unsigned int v60; // r2
  int v61; // t1
  bool v62; // zf
  unsigned __int8 *v63; // r3
  unsigned __int8 *v64; // r11
  int v65; // r2
  int v66; // t1
  int v67; // r8
  int v68; // r8
  int v69; // r3
  int v70; // t1
  int v71; // r2
  bool v72; // zf
  char *v73; // r0
  _BOOL4 v74; // r0
  const char *v75; // r8
  int v76; // r0
  int v77; // r3
  int v79; // [sp+0h] [bp-8A8h] BYREF
  unsigned int header_buf_used_0; // [sp+8h] [bp-8A0h]
  int content_length; // [sp+Ch] [bp-89Ch]
  char *header_buf; // [sp+10h] [bp-898h]
  int chunked; // [sp+14h] [bp-894h]
  void *ptr; // [sp+18h] [bp-890h]
  unsigned int header_buf_used; // [sp+1Ch] [bp-88Ch]
  unsigned int content_buf_used; // [sp+20h] [bp-888h]
  unsigned int header_buf_len; // [sp+24h] [bp-884h]
  unsigned int chunksize; // [sp+28h] [bp-880h]
  unsigned int chunksize_buf_index; // [sp+2Ch] [bp-87Ch]
  char *content_buf; // [sp+30h] [bp-878h]
  unsigned int v91; // [sp+34h] [bp-874h]
  char *v92; // [sp+38h] [bp-870h]
  int *status_codea; // [sp+3Ch] [bp-86Ch]
  char *s2; // [sp+40h] [bp-868h]
  int *sizea; // [sp+44h] [bp-864h]
  size_t v96; // [sp+48h] [bp-860h]
  int *v97; // [sp+4Ch] [bp-85Ch]
  char chunksize_buf[32]; // [sp+54h] [bp-854h] BYREF
  char buf[2048]; // [sp+74h] [bp-834h] BYREF

  sizea = status_code;
  v97 = size;
  if ( status_code )
    *status_code = -1;
  ptr = malloc(0x800u);
  if ( !ptr )
  {
    v5 = 0;
    *v97 = -1;
    return v5;
  }
  v4 = (char *)malloc(0x800u);
  v5 = v4;
  if ( !v4 )
  {
    free(ptr);
    *v97 = -1;
    return v5;
  }
  v6 = 0;
  chunksize_buf[0] = 0;
  content_length = 2048;
  chunksize_buf_index = 2048;
  chunked = -1;
  header_buf_used_0 = (unsigned int)buf;
  v7 = 0;
  v8 = 0;
  v9 = v4;
  header_buf_len = 0;
  header_buf_used = 0;
  chunksize = 0;
  content_buf_used = (unsigned int)chunksize_buf;
  do
  {
    while ( 1 )
    {
      v10 = receivedata(s, header_buf_used_0, 2048, 5000, 0);
      v11 = (char *)v10;
      if ( v10 <= 0 )
      {
LABEL_154:
        v5 = v9;
        v24 = v7;
        goto end_of_stream;
      }
      if ( chunksize )
      {
        if ( header_buf_used )
          goto LABEL_80;
        v19 = v10;
LABEL_29:
        v20 = (signed int)&v11[v7];
        v21 = v20;
        if ( chunked <= 0 )
        {
          if ( content_length < (unsigned int)v20 )
          {
            if ( chunked < v20 )
            {
              v22 = v20;
              goto LABEL_132;
            }
LABEL_136:
            v22 = v20;
            v21 = chunked;
            goto LABEL_132;
          }
        }
        else
        {
          if ( chunked < v20 )
          {
            v20 = chunked;
            v22 = chunked;
            v19 = chunked - v7;
            if ( chunked <= (unsigned int)content_length )
              goto LABEL_32;
            v22 = chunked;
            v21 = chunked;
LABEL_132:
            v73 = (char *)realloc(v9, v21);
            if ( !v73 )
            {
              free(v9);
              free(ptr);
              v5 = 0;
              *v97 = -1;
              return v5;
            }
            v9 = v73;
            v20 = v22;
            content_length = v21;
LABEL_32:
            memcpy(&v9[v7], (const void *)header_buf_used_0, v19);
            v7 = v22;
            header_buf_used = 0;
            goto LABEL_33;
          }
          if ( content_length < (unsigned int)v20 )
            goto LABEL_136;
        }
        v22 = v20;
        goto LABEL_32;
      }
      header_buf = (char *)(v10 + header_buf_len);
      if ( v10 + header_buf_len > chunksize_buf_index )
      {
        v12 = realloc(ptr, v10 + header_buf_len);
        if ( !v12 )
        {
          free(ptr);
          free(v9);
          v5 = (void *)chunksize;
          *v97 = -1;
          return v5;
        }
        ptr = v12;
        chunksize_buf_index = (unsigned int)header_buf;
      }
      memcpy((char *)ptr + header_buf_len, (const void *)header_buf_used_0, (size_t)v11);
      v13 = header_buf;
      v14 = header_buf + -0x1;
      if ( (int)(header_buf + -0x1) <= 0 )
      {
LABEL_25:
        header_buf_len = (unsigned int)v13;
        continue;
      }
      for ( i = 0; ; i += 2 )
      {
LABEL_14:
        v16 = *((unsigned __int8 *)ptr + i);
        v17 = i + 1;
        if ( v16 != 13 )
        {
LABEL_15:
          if ( v16 != 10 )
          {
            if ( (int)v14 <= v17 )
              goto LABEL_24;
            goto LABEL_17;
          }
          i += 2;
          goto LABEL_22;
        }
LABEL_18:
        v18 = i + 2;
        if ( *((_BYTE *)ptr + v17) == 10 )
          break;
        if ( (int)v14 <= v18 )
          goto LABEL_24;
      }
      v17 = i + 3;
      if ( (int)header_buf > v18 && *((_BYTE *)ptr + v18) == 13 )
        break;
      if ( (int)v14 > v17 )
      {
LABEL_17:
        i = v17;
        v16 = *((unsigned __int8 *)ptr + v17++);
        if ( v16 != 13 )
          goto LABEL_15;
        goto LABEL_18;
      }
      header_buf_len = (unsigned int)header_buf;
    }
    v13 = header_buf;
    i += 4;
    if ( (int)header_buf <= v17 )
    {
      if ( (int)v14 <= i )
        goto LABEL_25;
      goto LABEL_14;
    }
LABEL_22:
    if ( *((_BYTE *)ptr + v17) != 10 )
    {
      if ( (int)v14 <= i )
      {
LABEL_24:
        v13 = header_buf;
        goto LABEL_25;
      }
      goto LABEL_14;
    }
    status_codea = (int *)"transfer-encoding";
    header_buf_len = i;
    s2 = "chunked";
    chunksize = v7;
    v91 = v6;
    v92 = v9;
    v25 = header_buf;
    v26 = v17;
    v27 = sizea;
    v28 = (const char *)ptr;
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v32 = 0;
    content_buf = v8;
    while ( 1 )
    {
LABEL_49:
      v35 = (int)v30 > 0;
      if ( (int)v29 > (int)v30 )
        v35 = 0;
      v34 = !v35;
      v36 = &v28[v31];
      v37 = (unsigned __int8)v28[v31];
      v38 = (char *)(v31 + 1);
      if ( v34 )
        break;
      if ( v37 == 58 )
      {
        v33 = v31;
        do
        {
          v70 = *(unsigned __int8 *)++v36;
          v69 = v70;
          v71 = v33;
          v72 = v70 == 9;
          if ( v70 != 9 )
            v72 = v69 == 32;
          ++v33;
          if ( !v72 )
          {
            v32 = v71 + 1;
            v29 = (char *)v31;
            v31 = v32;
            goto LABEL_48;
          }
        }
        while ( v26 > v33 );
        v32 = v33 + 1;
        v29 = (char *)v31;
        v31 = v32;
        goto LABEL_48;
      }
      v34 = v37 == 10;
      if ( v37 != 10 )
        v34 = v37 == 13;
      if ( v34 )
        goto LABEL_66;
LABEL_47:
      ++v31;
LABEL_48:
      if ( v26 <= v31 )
        goto LABEL_77;
    }
    v39 = v37 == 10;
    if ( v37 != 10 )
      v39 = v37 == 13;
    if ( !v39 )
      goto LABEL_47;
    v40 = v30 == 0;
    if ( !v27 )
      v40 = 0;
    if ( v40 )
    {
      if ( v31 > 0 )
      {
        v41 = v28;
        do
        {
          while ( 1 )
          {
            v42 = *(unsigned __int8 *)v41++;
            if ( v42 == 32 )
              break;
            if ( v36 == v41 )
              goto LABEL_66;
          }
          if ( *v27 >= 0 )
            break;
          *v27 = strtol(v41, 0u, 10);
        }
        while ( v36 != v41 );
      }
      goto LABEL_66;
    }
    v74 = (int)v29 > (int)v30;
    if ( (int)v29 >= v32 )
      v74 = 0;
    if ( !v74 )
      goto LABEL_66;
    v75 = &v30[(_DWORD)v28];
    v96 = v29 - v30;
    if ( !strncasecmp(&v30[(_DWORD)v28], "content-length", v29 - v30) )
    {
      chunked = strtol(&v28[v32], 0u, 10);
LABEL_66:
      if ( (int)v25 > v31 )
        goto LABEL_67;
      goto LABEL_145;
    }
    if ( strncasecmp(v75, (const char *)status_codea, v96) )
      goto LABEL_66;
    v76 = strncasecmp(&v28[v32], s2, 7u);
    v77 = header_buf_used;
    if ( !v76 )
      v77 = 1;
    header_buf_used = v77;
    if ( (int)v25 <= v31 )
    {
LABEL_145:
      v29 = (char *)v31;
      v30 = (char *)v31;
      v32 = 0;
      ++v31;
      goto LABEL_48;
    }
LABEL_67:
    v43 = &v28[v31 - 1];
    while ( 1 )
    {
      v45 = *(unsigned __int8 *)++v43;
      v44 = v45;
      v30 = (char *)v31;
      v46 = v45 == 10;
      if ( v45 != 10 )
        v46 = v44 == 13;
      v32 = v46;
      v31 = (int)v38;
      if ( !v46 )
        break;
      if ( v25 == v38 )
      {
        v31 = (int)(v30 + 2);
        v32 = 0;
        v29 = v25;
        v30 = v25;
        goto LABEL_48;
      }
      ++v38;
    }
    v29 = v30;
    if ( v26 > (int)v38 )
      goto LABEL_49;
LABEL_77:
    v47 = header_buf_len;
    v11 = &header_buf[-header_buf_len];
    v7 = chunksize;
    v8 = content_buf;
    v6 = v91;
    v9 = v92;
    memcpy((void *)header_buf_used_0, (char *)ptr + header_buf_len, (size_t)&header_buf[-header_buf_len]);
    v19 = (size_t)v11;
    chunksize = v47;
    header_buf_len = (unsigned int)header_buf;
    if ( !header_buf_used )
      goto LABEL_29;
    if ( (int)v11 <= 0 )
    {
      v20 = v7;
      goto LABEL_33;
    }
LABEL_80:
    v48 = 0;
    while ( 2 )
    {
      if ( !v8 )
      {
        if ( v6 )
        {
LABEL_94:
          if ( v48 >= (int)v11 )
            goto LABEL_127;
        }
        else
        {
          v54 = *((unsigned __int8 *)&v79 + v48 + 116);
          if ( v54 != 13 )
          {
            if ( v54 != 10 )
              goto LABEL_94;
LABEL_148:
            ++v48;
            goto LABEL_94;
          }
          if ( ++v48 >= (int)v11 )
            goto LABEL_127;
          if ( *((_BYTE *)&v79 + v48 + 116) == 10 )
            goto LABEL_148;
        }
        v55 = *_ctype_b_loc();
        v56 = header_buf_used_0 + v48 - 1;
        v57 = (_BYTE *)(content_buf_used + v6);
        while ( 1 )
        {
          v59 = *(unsigned __int8 *)++v56;
          v58 = v59;
          if ( ((v6 <= 0x1E) & (v55[v59] >> 0xC)) == 0 )
            break;
          ++v48;
          *v57 = v58;
          ++v6;
          *++v57 = 0;
          if ( v48 >= (int)v11 )
            goto LABEL_127;
        }
        if ( v48 >= (int)v11 )
          goto LABEL_127;
        v60 = header_buf_used_0 + v48;
        while ( 1 )
        {
          v62 = v58 == 10;
          if ( v58 != 10 )
            v62 = v58 == 13;
          if ( v62 )
            break;
          if ( (char *)++v48 == v11 )
            goto LABEL_127;
          v61 = *(unsigned __int8 *)++v60;
          v58 = v61;
        }
        if ( v48 >= (int)v11 )
        {
LABEL_127:
          v20 = v7;
          header_buf_used = 1;
          goto LABEL_33;
        }
        if ( v58 == 13 )
        {
          if ( ++v48 >= (int)v11 )
            goto LABEL_127;
          v58 = *((unsigned __int8 *)&v79 + v48 + 116);
        }
        if ( v58 != 10 )
        {
          v50 = v7;
LABEL_89:
          v7 = v50;
          continue;
        }
        if ( !v6 )
          goto LABEL_154;
        v63 = (unsigned __int8 *)content_buf_used;
        v8 = 0;
        v64 = (unsigned __int8 *)(content_buf_used + v6);
        do
        {
          v66 = *v63++;
          v65 = v66;
          v67 = 16 * (_DWORD)v8;
          if ( (unsigned int)(v66 - 0x30) > 9 )
          {
            v68 = v67 - 0x57;
            v65 |= 0x20u;
          }
          else
          {
            v68 = v67 - 0x30;
          }
          v8 = (char *)(v68 + v65);
        }
        while ( v63 != v64 );
        ++v48;
        chunksize_buf[0] = 0;
        if ( !v8 )
          goto LABEL_154;
        v6 = 0;
      }
      break;
    }
    v49 = &v11[-v48];
    if ( (int)&v11[-v48] >= (int)v8 )
      v49 = v8;
    v50 = (int)&v49[v7];
    if ( (unsigned int)&v49[v7] > content_length )
    {
      v51 = chunked;
      if ( chunked < v50 )
        v51 = (int)&v49[v7];
      header_buf = v49;
      content_length = v51;
      v52 = (char *)realloc(v9, v51);
      v49 = header_buf;
      if ( !v52 )
      {
        header_buf_used_0 = 0;
        free(v9);
        free(ptr);
        v5 = (void *)header_buf_used_0;
        *v97 = -1;
        return v5;
      }
      v9 = v52;
    }
    v53 = (const void *)(header_buf_used_0 + v48);
    v48 += (int)v49;
    v8 -= (int)v49;
    memcpy(&v9[v7], v53, (size_t)v49);
    if ( v48 < (int)v11 )
      goto LABEL_89;
    v7 = v50;
    v20 = v50;
    header_buf_used = 1;
LABEL_33:
    v23 = chunked > 0;
    if ( chunked > v20 )
      v23 = 0;
  }
  while ( !v23 );
  v24 = v20;
  v5 = v9;
end_of_stream:
  free(ptr);
  *v97 = v24;
  if ( !v7 )
  {
    free(v5);
    return 0;
  }
  return v5;
}
