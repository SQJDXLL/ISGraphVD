void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // r0
  char *v5; // r9
  char *v6; // r0
  int v7; // r5
  signed int v8; // r4
  int v9; // r11
  unsigned int v10; // r7
  int v11; // r6
  int v12; // r0
  unsigned int v13; // r4
  signed int v14; // r8
  int v15; // r10
  char *v16; // r5
  int v17; // r0
  int v18; // r1
  int v19; // r2
  int v20; // r2
  int v21; // r2
  int v22; // r2
  signed int v23; // r5
  int v24; // lr
  const unsigned __int16 *v25; // r0
  int v26; // r1
  signed int v27; // r0
  int v28; // r1
  bool v29; // zf
  char *v30; // r3
  char *v31; // r0
  int v32; // t1
  int v33; // r2
  int v34; // r1
  size_t v35; // r0
  int v36; // r2
  char *v37; // r4
  size_t v38; // r1
  int *v39; // r12
  int v40; // lr
  size_t v41; // r3
  int v42; // r5
  int v43; // r1
  int v44; // r4
  int v45; // r8
  int v46; // r2
  int v47; // r2
  int v48; // r1
  bool v49; // zf
  bool v50; // zf
  bool v51; // cc
  const char *v52; // r5
  int v53; // r4
  int v54; // r0
  size_t v55; // r10
  int v56; // r0
  int v57; // r0
  bool v58; // zf
  int v59; // r2
  size_t v60; // r1
  size_t v61; // r5
  char *v62; // r0
  char *v63; // r8
  bool v64; // cc
  int v65; // r5
  int v66; // r1
  int v67; // r4
  int v68; // r8
  int v69; // r2
  int v70; // r2
  int v71; // r1
  bool v72; // zf
  bool v73; // zf
  bool v74; // cc
  size_t v75; // r2
  const char *v76; // r4
  size_t v77; // r10
  int v78; // r0
  int v79; // r0
  bool v80; // zf
  char *v82; // r0
  unsigned int v83; // [sp+18h] [bp-870h]
  int *v84; // [sp+1Ch] [bp-86Ch]
  int v85; // [sp+20h] [bp-868h]
  size_t v86; // [sp+24h] [bp-864h]
  size_t v87; // [sp+24h] [bp-864h]
  size_t v88; // [sp+24h] [bp-864h]
  signed int v89; // [sp+28h] [bp-860h]
  signed int v90; // [sp+28h] [bp-860h]
  int v91; // [sp+2Ch] [bp-85Ch]
  char *ptr; // [sp+30h] [bp-858h]
  int v93; // [sp+34h] [bp-854h]
  int v94; // [sp+38h] [bp-850h]
  char v97[32]; // [sp+44h] [bp-844h] BYREF
  char src[2084]; // [sp+64h] [bp-824h] BYREF

  if ( status_code )
    *status_code = -1;
  v4 = (char *)malloc(0x800u);
  if ( !v4 )
    goto LABEL_188;
  v5 = v4;
  v94 = 2048;
  v6 = (char *)malloc(0x800u);
  if ( !v6 )
  {
    free(v5);
LABEL_188:
    *size = -1;
    return 0;
  }
  ptr = v6;
  v84 = size;
  v7 = -1;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v97[0] = 0;
  v85 = 0;
  v83 = 2048;
  v93 = 0;
  do
  {
    v89 = v8;
    v12 = receivedata(s, src, 2048, 5000, 0);
    if ( v12 < 1 )
      break;
    v13 = v94;
    v91 = v7;
    v14 = v12;
    v15 = v9;
    v16 = v5;
    while ( !v11 )
    {
      v9 = v14 + v15;
      if ( v14 + v15 <= v13 )
      {
        v5 = v16;
      }
      else
      {
        v5 = (char *)realloc(v16, v14 + v15);
        v13 = v14 + v15;
        if ( !v5 )
        {
          free(v16);
          v82 = ptr;
LABEL_190:
          free(v82);
          *v84 = -1;
          return 0;
        }
      }
      memcpy(&v5[v15], src, v14);
      if ( v9 >= 2 )
      {
        v17 = v9 - 1;
        v18 = 0;
        while ( 1 )
        {
          v19 = (unsigned __int8)v5[v18];
          if ( v19 == 10 )
            break;
          if ( v19 == 13 )
          {
            v20 = v18 + 1;
            v11 = 0;
            if ( v5[v18 + 1] != 10 )
              goto LABEL_34;
            v20 = v18 + 2;
            if ( v18 + 2 >= v9 )
            {
              v11 = 0;
LABEL_34:
              v18 = v20 + 1;
              if ( v20 + 1 >= v17 )
                goto LABEL_8;
              goto LABEL_35;
            }
            v11 = 0;
            if ( v5[v20] != 13 )
              goto LABEL_34;
            v21 = v18 + 3;
            if ( v18 + 3 >= v9 )
            {
              v11 = 0;
              v18 += 4;
              if ( v21 + 1 >= v17 )
                goto LABEL_8;
            }
            else
            {
              v11 = 0;
              if ( v5[v21] == 10 )
                v11 = v18 + 4;
              v18 += 4;
              if ( v21 + 1 >= v17 )
                goto LABEL_8;
            }
          }
          else
          {
            v11 = 0;
            if ( ++v18 >= v17 )
              goto LABEL_8;
          }
LABEL_35:
          if ( v11 )
            goto LABEL_8;
        }
        v22 = v18 + 1;
        v11 = 0;
        if ( v5[v18 + 1] == 10 )
          v11 = v18 + 2;
        v18 += 2;
        if ( v22 + 1 < v17 )
          goto LABEL_35;
LABEL_8:
        if ( !v11 )
          goto LABEL_9;
        v94 = v13;
        if ( v11 >= 2 )
        {
          v39 = status_code;
          v40 = v11 - 1;
          v41 = v14 + v15;
          if ( status_code )
          {
            v42 = 0;
            v43 = 0;
            v44 = 0;
            v45 = 0;
            v87 = v41;
            while ( 1 )
            {
              v47 = (unsigned __int8)v5[v45];
              if ( v47 == 58 && v44 >= 1 && v43 <= v44 )
              {
                v42 = v45 + 1;
                if ( v45 < v40 )
                {
                  do
                  {
                    v48 = (unsigned __int8)v5[v42];
                    v49 = v48 == 9;
                    if ( v48 != 9 )
                      v49 = v48 == 32;
                    if ( !v49 )
                    {
                      v46 = v42 - 1;
                      goto LABEL_88;
                    }
                    ++v42;
                  }
                  while ( v11 != v42 );
                  v46 = v40;
                  v43 = v45;
                  v42 = v11;
                  goto LABEL_89;
                }
                v46 = v45;
              }
              else
              {
                v50 = v47 == 13;
                if ( v47 != 13 )
                  v50 = v47 == 10;
                if ( !v50 )
                {
                  v46 = v45;
                  goto LABEL_89;
                }
                if ( v44 )
                {
                  v51 = v43 <= v44;
                  if ( v43 > v44 )
                    v51 = v42 <= v43;
                  if ( v51 )
                  {
                    v42 = 0;
                    if ( v45 < v9 )
                      goto LABEL_127;
                  }
                  else
                  {
                    v55 = v43 - v44;
                    if ( !strncasecmp(&v5[v44], "content-length", v43 - v44) )
                    {
                      v91 = strtol(&v5[v42], 0u, 10);
                    }
                    else if ( !strncasecmp(&v5[v44], "transfer-encoding", v55) )
                    {
                      v29 = strncasecmp(&v5[v42], "chunked", 7u) == 0;
                      v56 = v85;
                      if ( v29 )
                        v56 = 1;
                      v85 = v56;
                    }
                    v39 = status_code;
                    v41 = v87;
                    v40 = v11 - 1;
                    v42 = 0;
                    if ( v45 < v9 )
                    {
                      while ( 1 )
                      {
LABEL_127:
                        v57 = (unsigned __int8)v5[v45];
                        v58 = v57 == 13;
                        if ( v57 != 13 )
                          v58 = v57 == 10;
                        if ( !v58 )
                          break;
                        if ( v41 == ++v45 )
                        {
                          v46 = v9;
                          v44 = v9;
                          v43 = v9;
                          goto LABEL_89;
                        }
                      }
                    }
                  }
                }
                else
                {
                  v52 = v5 + 1;
                  v53 = v45;
                  if ( v45 >= 1 )
                  {
                    do
                    {
                      if ( *(v52 - 1) == 32 )
                      {
                        if ( *v39 >= 0 )
                          break;
                        v54 = strtol(v52, 0u, 10);
                        v39 = status_code;
                        v41 = v87;
                        *status_code = v54;
                      }
                      ++v52;
                      --v53;
                    }
                    while ( v53 );
                  }
                  v42 = 0;
                  if ( v45 < v9 )
                    goto LABEL_127;
                }
                v46 = v45;
                v44 = v45;
              }
LABEL_88:
              v43 = v45;
LABEL_89:
              v45 = v46 + 1;
              if ( v46 + 1 >= v40 )
                goto LABEL_133;
            }
          }
          v65 = 0;
          v66 = 0;
          v67 = 0;
          v68 = 0;
          v88 = v41;
          while ( 2 )
          {
            v70 = (unsigned __int8)v5[v68];
            if ( v70 == 58 && v67 >= 1 && v66 <= v67 )
            {
              v65 = v68 + 1;
              if ( v68 < v40 )
              {
                do
                {
                  v71 = (unsigned __int8)v5[v65];
                  v72 = v71 == 32;
                  if ( v71 != 32 )
                    v72 = v71 == 9;
                  if ( !v72 )
                  {
                    v69 = v65 - 1;
                    goto LABEL_151;
                  }
                  ++v65;
                }
                while ( v11 != v65 );
                v69 = v40;
                v66 = v68;
                v65 = v11;
LABEL_152:
                v68 = v69 + 1;
                if ( v69 + 1 >= v40 )
                  goto LABEL_133;
                continue;
              }
              v69 = v68;
            }
            else
            {
              v73 = v70 == 13;
              if ( v70 != 13 )
                v73 = v70 == 10;
              if ( !v73 )
              {
                v69 = v68;
                goto LABEL_152;
              }
              v74 = v66 <= v67;
              if ( v66 > v67 )
                v74 = v65 <= v66;
              if ( v74 )
              {
                v65 = 0;
                if ( v68 < v9 )
                  goto LABEL_181;
              }
              else
              {
                v75 = v66 - v67;
                v76 = &v5[v67];
                v77 = v75;
                if ( !strncasecmp(v76, "content-length", v75) )
                {
                  v91 = strtol(&v5[v65], 0u, 10);
                }
                else if ( !strncasecmp(v76, "transfer-encoding", v77) )
                {
                  v29 = strncasecmp(&v5[v65], "chunked", 7u) == 0;
                  v78 = v85;
                  if ( v29 )
                    v78 = 1;
                  v85 = v78;
                }
                v41 = v88;
                v40 = v11 - 1;
                v65 = 0;
                if ( v68 < v9 )
                {
                  while ( 1 )
                  {
LABEL_181:
                    v79 = (unsigned __int8)v5[v68];
                    v80 = v79 == 13;
                    if ( v79 != 13 )
                      v80 = v79 == 10;
                    if ( !v80 )
                      break;
                    if ( v41 == ++v68 )
                    {
                      v69 = v9;
                      v67 = v9;
                      v66 = v9;
                      goto LABEL_152;
                    }
                  }
                }
              }
              v69 = v68;
              v67 = v68;
            }
            break;
          }
LABEL_151:
          v66 = v68;
          goto LABEL_152;
        }
LABEL_133:
        v14 = v9 - v11;
        memcpy(src, &v5[v11], v9 - v11);
        v8 = v89;
        if ( !v85 )
          goto LABEL_134;
LABEL_40:
        if ( v14 >= 1 )
        {
          v23 = 0;
          while ( 1 )
          {
            v24 = v93;
LABEL_43:
            if ( !v8 )
              break;
            v30 = ptr;
LABEL_75:
            v35 = v14 - v23;
            v90 = v8;
            if ( v8 < v14 - v23 )
              v35 = v8;
            v36 = v35 + v93;
            v86 = v35;
            v93 = v36;
            if ( v36 > v83 )
            {
              v37 = v30;
              v38 = v91;
              if ( v91 < v36 )
                v38 = v36;
              v83 = v38;
              v30 = (char *)realloc(v30, v38);
              if ( !v30 )
                goto LABEL_191;
            }
            ptr = v30;
            memcpy(&v30[v24], &src[v23], v86);
            v23 += v86;
            v8 = v90 - v86;
            if ( v23 >= v14 )
              goto LABEL_145;
          }
          if ( !v10 )
          {
            if ( src[v23] == 13 )
              ++v23;
            if ( v23 < v14 && src[v23] == 10 )
              ++v23;
          }
          if ( v23 < v14 )
          {
            v25 = *_ctype_b_loc();
            while ( v10 <= 0x1E )
            {
              v26 = (unsigned __int8)src[v23];
              if ( (v25[v26] & 0x1000) == 0 )
                break;
              ++v23;
              v97[v10 + 1] = 0;
              v97[v10++] = v26;
              if ( v14 == v23 )
              {
                v23 = v14;
                break;
              }
            }
          }
          v27 = v14;
          if ( v23 > v14 )
            v27 = v23;
          while ( 1 )
          {
            v8 = 0;
            if ( v27 == v23 )
              break;
            v28 = (unsigned __int8)src[v23++];
            v29 = v28 == 13;
            if ( v28 != 13 )
              v29 = v28 == 10;
            if ( v29 )
            {
              if ( v28 != 13 )
                --v23;
              if ( v23 >= v14 )
                goto LABEL_145;
              v8 = 0;
              if ( src[v23] != 10 )
                goto LABEL_43;
              if ( v10 )
              {
                v30 = ptr;
                v8 = 0;
                v31 = v97;
                do
                {
                  v32 = (unsigned __int8)*v31++;
                  v33 = v32 - 0x30;
                  v34 = v32 | 0x20;
                  if ( (unsigned int)(v32 - 0x30) >= 0xA )
                    v33 = v34 - 0x57;
                  --v10;
                  v8 = v33 + 16 * v8;
                }
                while ( v10 );
                v10 = 0;
                v97[0] = 0;
                if ( v8 )
                {
                  ++v23;
                  goto LABEL_75;
                }
              }
              else
              {
                v97[0] = 0;
              }
              goto end_of_stream;
            }
          }
        }
        goto LABEL_145;
      }
LABEL_9:
      v11 = 0;
      v14 = receivedata(s, src, 2048, 5000, 0);
      v15 = v9;
      v16 = v5;
      if ( v14 <= 0 )
        goto end_of_stream;
    }
    v9 = v15;
    v94 = v13;
    v5 = v16;
    v8 = v89;
    if ( v85 )
      goto LABEL_40;
LABEL_134:
    v59 = v93;
    v60 = v91;
    v61 = v14;
    if ( v14 + v93 > v91 )
      v61 = v91 - v93;
    if ( v91 <= 0 )
      v61 = v14;
    if ( v61 + v93 <= v83 )
    {
      v63 = ptr;
    }
    else
    {
      v37 = ptr;
      if ( v91 < (int)(v61 + v93) )
        v60 = v61 + v93;
      v83 = v60;
      v62 = (char *)realloc(ptr, v60);
      v59 = v93;
      v63 = v62;
      if ( !v62 )
      {
LABEL_191:
        free(v37);
        v82 = v5;
        goto LABEL_190;
      }
    }
    memcpy(&v63[v59], src, v61);
    v8 = v89;
    ptr = v63;
    v93 += v61;
LABEL_145:
    v7 = v91;
    v64 = v91 < 1;
    if ( v91 >= 1 )
      v64 = v93 < v91;
  }
  while ( v64 );
end_of_stream:
  free(v5);
  *v84 = v93;
  if ( !v93 )
  {
    free(ptr);
    return 0;
  }
  return ptr;
}
