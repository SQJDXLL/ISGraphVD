void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v5; // x0
  char *v6; // x21
  char *v7; // x27
  int v8; // w22
  int v9; // w19
  int v10; // w20
  __int64 v11; // x9
  __int64 v12; // x10
  int v13; // w25
  bool v14; // w10
  unsigned int v15; // w23
  int v16; // w0
  int v17; // w26
  unsigned int v18; // w8
  char *v19; // x0
  int v20; // w9
  int v21; // w11
  __int64 v22; // x11
  __int64 v23; // x10
  int v24; // w11
  int v25; // w9
  __int64 v26; // x25
  int v27; // w13
  int v28; // w8
  int v29; // w11
  int v30; // w9
  int v31; // w8
  int v32; // w23
  int v33; // w10
  int v34; // w27
  __int64 v35; // x9
  int v36; // w12
  int v37; // w10
  const char *v38; // x26
  size_t v39; // x25
  int v40; // w0
  int v41; // w8
  int *v42; // x9
  const char *v43; // x26
  __int64 v44; // x25
  int v45; // w0
  char *v46; // x8
  __int64 v47; // x9
  int v48; // w10
  int v49; // w9
  __int64 v50; // x25
  bool v51; // cc
  int v52; // w8
  int v53; // w25
  unsigned int v54; // w9
  int v55; // w23
  size_t v56; // x1
  char *v57; // x0
  char *v58; // x28
  unsigned int v59; // w22
  const unsigned __int16 *v60; // x10
  __int64 v61; // x8
  __int64 v62; // x14
  char *v63; // x15
  int v64; // w8
  __int64 v65; // x8
  char *v66; // x9
  int v67; // t1
  int v68; // w11
  int v69; // w10
  unsigned int v70; // w27
  int v71; // w9
  size_t v72; // x1
  char *v73; // x0
  int v74; // w27
  int v75; // w10
  int v76; // w28
  __int64 v77; // x9
  int v78; // w12
  int v79; // w10
  const char *v80; // x25
  size_t v81; // x26
  int v82; // w0
  int v83; // w8
  char *v84; // x8
  __int64 v85; // x9
  int v86; // w10
  char *v87; // x0
  void *v89; // x0
  int v90; // [xsp+4h] [xbp-89Ch]
  int v91; // [xsp+4h] [xbp-89Ch]
  char *v92; // [xsp+8h] [xbp-898h]
  int *v93; // [xsp+20h] [xbp-880h]
  int v94; // [xsp+34h] [xbp-86Ch]
  __int64 v95; // [xsp+38h] [xbp-868h]
  unsigned int v96; // [xsp+38h] [xbp-868h]
  int v97; // [xsp+44h] [xbp-85Ch]
  unsigned int v98; // [xsp+44h] [xbp-85Ch]
  __int64 v100; // [xsp+58h] [xbp-848h]
  __int64 v101; // [xsp+58h] [xbp-848h]
  __int64 v102; // [xsp+58h] [xbp-848h]
  __int64 v103; // [xsp+58h] [xbp-848h]
  int v104; // [xsp+64h] [xbp-83Ch]
  __int64 v105; // [xsp+68h] [xbp-838h]
  __int64 v106; // [xsp+68h] [xbp-838h]
  unsigned int v107; // [xsp+70h] [xbp-830h]
  unsigned int v108; // [xsp+74h] [xbp-82Ch]
  char v109[32]; // [xsp+78h] [xbp-828h] BYREF
  char src[2056]; // [xsp+98h] [xbp-808h] BYREF

  if ( status_code )
    *status_code = -1;
  v5 = (char *)malloc(0x800uLL);
  if ( !v5 )
  {
    v7 = 0LL;
LABEL_182:
    *size = -1;
    return v7;
  }
  v6 = v5;
  v7 = (char *)malloc(0x800uLL);
  if ( !v7 )
  {
    free(v6);
    goto LABEL_182;
  }
  v93 = size;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v107 = 0;
  v108 = 2048;
  v11 = 0xFFFFFFFFLL;
  v12 = 2048LL;
  v94 = 0;
  v97 = 0;
  v109[0] = 0;
  v104 = s;
  while ( 1 )
  {
    v13 = v10;
    v105 = v12;
    v100 = v11;
    do
    {
      v15 = v9;
      v16 = receivedata((unsigned int)s, src, 2048LL, 5000LL, 0LL);
      if ( v16 < 1 )
        goto end_of_stream;
      v17 = v16;
      if ( v13 )
      {
        v10 = v13;
        v26 = v100;
        goto LABEL_82;
      }
      v18 = v108;
      v9 += v16;
      if ( v16 + v15 <= v108 )
      {
        v19 = v6;
      }
      else
      {
        v19 = (char *)realloc(v6, (unsigned int)v9);
        v18 = v9;
        if ( !v19 )
        {
          free(v6);
          v87 = v7;
          goto LABEL_183;
        }
      }
      v6 = v19;
      v108 = v18;
      memcpy(&v19[v15], src, (unsigned int)v17);
      if ( v9 >= 2 )
      {
        v20 = 0;
        while ( 1 )
        {
          v21 = (unsigned __int8)v6[v20];
          if ( v21 == 10 )
            break;
          if ( v21 == 13 )
          {
            LODWORD(v22) = v20 + 1;
            if ( v6[v20 + 1] == 10 )
            {
              v22 = v20 + 2LL;
              if ( v20 + 2 < v9 && v6[v22] == 13 )
              {
                v23 = v20 + 3LL;
                if ( (int)v23 >= v9 )
                {
                  v10 = 0;
                }
                else
                {
                  v24 = (unsigned __int8)v6[v23];
                  v25 = v20 + 4;
LABEL_25:
                  if ( v24 == 10 )
                    v10 = v25;
                  else
                    v10 = 0;
                }
                v20 = v23;
                goto LABEL_31;
              }
            }
            v10 = 0;
            v20 = v22;
          }
          else
          {
            v10 = 0;
          }
LABEL_31:
          ++v20;
          v14 = v10 == 0;
          if ( v20 >= v9 - 1 || v10 )
            goto LABEL_8;
        }
        v23 = v20 + 1LL;
        v24 = (unsigned __int8)v6[v23];
        v25 = v20 + 2;
        goto LABEL_25;
      }
      v10 = 0;
      v14 = 1;
LABEL_8:
      v13 = 0;
    }
    while ( v14 );
    v92 = v7;
    if ( v10 >= 2 )
    {
      v27 = v10 - 1;
      v95 = v10 - 1;
      v28 = (int)status_code;
      v26 = v100;
      v29 = 0;
      v30 = 0;
      if ( status_code )
      {
        v31 = 0;
        v32 = 0;
        while ( 1 )
        {
          v33 = (unsigned __int8)v6[v32];
          v34 = v32;
          if ( v33 == 58 && v31 >= 1 && v30 <= v31 )
            break;
          if ( v33 == 13 || v33 == 10 )
          {
            if ( v31 )
            {
              v37 = v30 - v31;
              if ( v30 > v31 && v29 > v30 )
              {
                v101 = v26;
                v38 = &v6[v31];
                v39 = v37;
                v90 = v29;
                if ( !strncasecmp(v38, "content-length", v37) )
                {
                  v26 = strtol(&v6[v90], 0uLL, 10);
                }
                else
                {
                  if ( !strncasecmp(v38, "transfer-encoding", v39) )
                  {
                    v40 = strncasecmp(&v6[v90], "chunked", 7uLL);
                    v41 = v94;
                    if ( !v40 )
                      v41 = 1;
                    v94 = v41;
                  }
LABEL_60:
                  v26 = v101;
                }
                v27 = v10 - 1;
              }
            }
            else
            {
              v42 = status_code;
              if ( v32 >= 1 )
              {
                v43 = v6 + 1;
                v101 = v26;
                v44 = (unsigned int)v32;
                while ( 1 )
                {
                  if ( *(v43 - 1) == 32 )
                  {
                    if ( (*v42 & 0x80000000) == 0 )
                      goto LABEL_60;
                    v45 = strtol(v43, 0uLL, 10);
                    v42 = status_code;
                    *status_code = v45;
                  }
                  --v44;
                  ++v43;
                  if ( !v44 )
                    goto LABEL_60;
                }
              }
            }
            if ( v32 < v9 )
            {
              v46 = &v6[v32];
              v47 = v9 - (__int64)v32;
              s = v104;
              do
              {
                v48 = (unsigned __int8)*v46;
                if ( v48 != 13 && v48 != 10 )
                {
                  v29 = 0;
                  v31 = v32;
                  v30 = v32;
                  goto LABEL_40;
                }
                ++v32;
                --v47;
                ++v46;
              }
              while ( v47 );
              v29 = 0;
              v32 = v9;
              v31 = v9;
              v30 = v9;
              goto LABEL_40;
            }
            v29 = 0;
            v31 = v32;
LABEL_78:
            s = v104;
            v30 = v32;
            goto LABEL_40;
          }
          s = v104;
LABEL_40:
          if ( ++v32 >= v27 )
            goto LABEL_81;
        }
        if ( v32 < v27 )
        {
          v35 = 0LL;
          s = v104;
          do
          {
            v36 = (unsigned __int8)v6[v32 + 1 + v35];
            if ( v36 != 9 && v36 != 32 )
            {
              v32 += v35;
              v29 = v32 + 1;
              v30 = v34;
              goto LABEL_40;
            }
            ++v35;
          }
          while ( v95 - v32 != v35 );
          v32 = v27;
          v30 = v34;
          v29 = v10;
          goto LABEL_40;
        }
        v29 = v32 + 1;
        goto LABEL_78;
      }
      v74 = 0;
      while ( 2 )
      {
        v75 = (unsigned __int8)v6[v74];
        v76 = v74;
        if ( v75 == 58 && v28 >= 1 && v30 <= v28 )
        {
          if ( v74 >= v27 )
          {
LABEL_147:
            v30 = v76;
            s = v104;
            v29 = v74 + 1;
          }
          else
          {
            v77 = 0LL;
            do
            {
              v78 = (unsigned __int8)v6[v74 + 1 + v77];
              if ( v78 != 32 && v78 != 9 )
              {
                v74 += v77;
                goto LABEL_147;
              }
              ++v77;
            }
            while ( v95 - v74 != v77 );
            v74 = v27;
            v30 = v76;
            v29 = v10;
LABEL_169:
            s = v104;
          }
        }
        else
        {
          if ( v75 != 13 && v75 != 10 )
            goto LABEL_169;
          v79 = v30 - v28;
          if ( v30 > v28 && v29 > v30 )
          {
            v103 = v26;
            v80 = &v6[v28];
            v81 = v79;
            v91 = v29;
            if ( !strncasecmp(v80, "content-length", v79) )
            {
              v26 = strtol(&v6[v91], 0uLL, 10);
            }
            else
            {
              if ( !strncasecmp(v80, "transfer-encoding", v81) )
              {
                v82 = strncasecmp(&v6[v91], "chunked", 7uLL);
                v83 = v94;
                if ( !v82 )
                  v83 = 1;
                v94 = v83;
              }
              v26 = v103;
            }
            v27 = v10 - 1;
          }
          if ( v74 >= v9 )
          {
            v30 = v74;
            s = v104;
            v29 = 0;
            v28 = v74;
          }
          else
          {
            s = v104;
            v84 = &v6[v74];
            v85 = v9 - (__int64)v74;
            do
            {
              v86 = (unsigned __int8)*v84;
              if ( v86 != 13 && v86 != 10 )
              {
                v29 = 0;
                v28 = v74;
                v30 = v74;
                goto LABEL_148;
              }
              ++v74;
              --v85;
              ++v84;
            }
            while ( v85 );
            v29 = 0;
            v74 = v9;
            v28 = v9;
            v30 = v9;
          }
        }
LABEL_148:
        if ( ++v74 >= v27 )
          goto LABEL_81;
        continue;
      }
    }
    v26 = v100;
LABEL_81:
    v17 = v9 - v10;
    memcpy(src, &v6[v10], v9 - v10);
    v7 = v92;
LABEL_82:
    v12 = v105;
    v49 = v97;
    v102 = v26;
    if ( v94 )
    {
      if ( v17 >= 1 )
      {
        LODWORD(v50) = 0;
        v96 = v97;
        while ( 2 )
        {
          v106 = v12;
          do
          {
            if ( v8 )
            {
              v58 = v7;
              goto LABEL_133;
            }
            v59 = v107;
            if ( !v107 )
            {
              v50 = src[(int)v50] == 13 ? (int)v50 + 1LL : (int)v50;
              if ( (int)v50 < v17 && src[v50] == 10 )
                LODWORD(v50) = v50 + 1;
            }
            if ( (int)v50 < v17 )
            {
              v59 = v17 + v107 - v50;
              v60 = *_ctype_b_loc();
              v61 = 0LL;
              while ( (unsigned __int64)v107 + v61 <= 0x1E )
              {
                v62 = (unsigned __int8)src[(int)v50 + v61];
                if ( (v60[v62] & 0x1000) == 0 )
                  break;
                v63 = &v109[v107 + 1 + v61++];
                *(v63 - 1) = v62;
                *v63 = 0;
                if ( (unsigned int)v17 - (__int64)(int)v50 == v61 )
                {
                  LODWORD(v50) = v17;
                  goto LABEL_116;
                }
              }
              LODWORD(v50) = v50 + v61;
              v59 = v107 + v61;
LABEL_116:
              v12 = v106;
            }
            v50 = (int)v50;
            while ( v50 < (unsigned int)v17 )
            {
              v64 = (unsigned __int8)src[v50++];
              if ( v64 == 13 || v64 == 10 )
              {
                if ( v64 != 13 )
                  LODWORD(v50) = v50 - 1;
                break;
              }
            }
            v107 = v59;
            if ( v17 <= (int)v50 )
            {
              v49 = v96;
              v8 = 0;
              goto LABEL_143;
            }
            v8 = 0;
          }
          while ( src[(int)v50] != 10 );
          if ( v107 )
          {
            v8 = 0;
            v65 = v107;
            v66 = v109;
            do
            {
              v67 = (unsigned __int8)*v66++;
              v68 = v67 - 0x30;
              v69 = (v67 | 0x20) - 0x57;
              if ( (unsigned int)(v67 - 0x30) < 0xA )
                v69 = v68;
              --v65;
              v8 = v69 + 16 * v8;
            }
            while ( v65 );
            v109[0] = 0;
            if ( v8 )
            {
              LODWORD(v12) = v106;
              v58 = v7;
              LODWORD(v50) = v50 + 1;
              v107 = 0;
LABEL_133:
              if ( v8 >= v17 - (int)v50 )
                v70 = v17 - v50;
              else
                v70 = v8;
              v71 = v70 + v96;
              v98 = v70 + v96;
              if ( v70 + v96 > (unsigned int)v12 )
              {
                if ( (int)v102 >= v71 )
                  v72 = (unsigned int)v102;
                else
                  v72 = (unsigned int)v71;
                v106 = v72;
                v73 = (char *)realloc(v58, v72);
                if ( !v73 )
                {
                  v89 = v58;
                  goto LABEL_190;
                }
                v58 = v73;
              }
              memcpy(&v58[v96], &src[(int)v50], v70);
              LODWORD(v50) = v70 + v50;
              v8 -= v70;
              v49 = v70 + v96;
              v7 = v58;
              s = v104;
              v12 = v106;
              v96 = v98;
              if ( (int)v50 >= v17 )
                goto LABEL_143;
              continue;
            }
          }
          else
          {
            v109[0] = 0;
          }
          break;
        }
        v97 = v96;
end_of_stream:
        free(v6);
        *v93 = v97;
        if ( !v97 )
        {
          free(v7);
          return 0LL;
        }
        return v7;
      }
      goto LABEL_143;
    }
    v51 = v17 + v97 <= (int)v26 || (int)v26 <= 0;
    v52 = v26;
    if ( v51 )
      v53 = v17;
    else
      v53 = v26 - v97;
    v54 = v97;
    v55 = v53 + v97;
    if ( v53 + v97 <= (unsigned int)v105 )
      goto LABEL_97;
    v56 = v52 >= v55 ? (unsigned int)v52 : (unsigned int)v55;
    v105 = v56;
    v57 = (char *)realloc(v7, v56);
    if ( !v57 )
      break;
    v54 = v97;
    v7 = v57;
LABEL_97:
    memcpy(&v7[v54], src, v53);
    v12 = v105;
    v49 = v53 + v97;
LABEL_143:
    v97 = v49;
    v11 = v102;
    if ( (int)v102 >= 1 && v97 >= (int)v102 )
      goto end_of_stream;
  }
  v89 = v7;
LABEL_190:
  free(v89);
  v87 = v6;
LABEL_183:
  free(v87);
  v7 = 0LL;
  *v93 = -1;
  return v7;
}
