void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // $v0
  char *v5; // $fp
  void *v6; // $v0
  unsigned int v7; // $s5
  unsigned int v8; // $s1
  int v9; // $s6
  unsigned int v10; // $a3
  int v11; // $s4
  int v12; // $v0
  signed int v13; // $s7
  char *v14; // $s1
  int v15; // $s4
  int v16; // $s1
  int v17; // $v0
  int v18; // $a0
  int v19; // $v1
  int v20; // $v1
  int v21; // $v1
  int v22; // $v1
  size_t v23; // $a1
  unsigned int v24; // $s6
  signed int v25; // $s1
  int v26; // $t0
  char *v27; // $a0
  unsigned int v28; // $s6
  signed int v29; // $v1
  const unsigned __int16 **v30; // $v0
  char *v31; // $s3
  const unsigned __int16 *v32; // $v0
  int v33; // $v1
  char *v34; // $at
  signed int v35; // $t1
  char *v36; // $v0
  int v37; // $a1
  int v38; // $at
  int v39; // $v1
  int v40; // $at
  int v41; // $v1
  size_t v42; // $s3
  size_t v43; // $a1
  char *v44; // $v0
  int v45; // $a3
  int v46; // $t0
  int v47; // $s1
  int v48; // $v1
  int v49; // $v0
  int v50; // $s7
  int v51; // $a0
  int v52; // $a0
  int v53; // $v1
  size_t v54; // $s3
  const char *v55; // $s1
  int *v56; // $s3
  int v57; // $s6
  int v58; // $v0
  int v59; // $v0
  int v60; // $v0
  int v61; // $at
  int v62; // $v0
  int v63; // $t0
  int v64; // $s7
  int v65; // $v1
  int v66; // $v0
  int v67; // $s1
  int v68; // $a0
  int v69; // $a0
  int v70; // $v1
  const char *v71; // $s6
  size_t v72; // $s3
  int v73; // $v0
  int v74; // $v0
  int v75; // $at
  int v76; // $v0
  unsigned int v77; // $a0
  size_t v78; // $v1
  unsigned int v79; // $s6
  void *v80; // $s3
  int v81; // $v0
  char *v82; // $v0
  char *v83; // $s1
  void *result; // $v0
  bool v85; // dc
  char *v86; // [sp+1Ch] [-864h]
  char *v87; // [sp+28h] [-858h]
  unsigned int v88; // [sp+2Ch] [-854h]
  int *v89; // [sp+30h] [-850h]
  int v90; // [sp+34h] [-84Ch]
  int v91; // [sp+38h] [-848h]
  int *v92; // [sp+3Ch] [-844h]
  unsigned int v93; // [sp+40h] [-840h]
  unsigned int v94; // [sp+44h] [-83Ch]
  unsigned int v95; // [sp+48h] [-838h]
  void *ptr; // [sp+4Ch] [-834h]
  unsigned int v97; // [sp+50h] [-830h]
  int v98; // [sp+54h] [-82Ch]
  int v99; // [sp+58h] [-828h]
  int v100; // [sp+5Ch] [-824h]
  char v101[32]; // [sp+60h] [-820h] BYREF
  char v102[2048]; // [sp+80h] [-800h] BYREF

  v100 = s;
  if ( status_code )
    *status_code = -1;
  v92 = status_code;
  v4 = (char *)malloc(0x800u);
  if ( v4 )
  {
    v5 = v4;
    v7 = 2048;
    v6 = malloc(0x800u);
    if ( v6 )
    {
      v89 = size;
      v8 = -1;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      ptr = v6;
      v101[0] = 0;
      v90 = 0;
      v87 = "content-length";
      v93 = 0;
      v88 = 2048;
      v97 = 0;
LABEL_6:
      while ( 1 )
      {
        v95 = v10;
        v12 = receivedata(v100, v102, 2048, 5000);
        if ( v12 <= 0 )
          break;
        v99 = v8;
        v13 = v12;
        v14 = v5;
        while ( 1 )
        {
          if ( v11 )
          {
            v10 = v95;
            v98 = v9;
            v23 = v99;
            v24 = v93;
            v5 = v14;
            if ( !v90 )
              goto LABEL_170;
LABEL_40:
            v99 = v23;
            if ( v13 <= 0 )
              goto LABEL_183;
            v25 = 0;
            while ( 1 )
            {
              v26 = v97;
              v27 = (char *)ptr;
              v94 = v97;
LABEL_43:
              if ( !v24 )
                break;
LABEL_74:
              v42 = v13 - v25;
              v95 = v10;
              if ( v24 < v13 - v25 )
                v42 = v24;
              v97 = v42 + v26;
              if ( v88 >= v42 + v26 )
              {
                v44 = v27;
              }
              else
              {
                ptr = v27;
                v43 = v99;
                if ( v99 < v42 + v26 )
                  v43 = v42 + v26;
                if ( v99 < 0 )
                  v43 = v42 + v26;
                v88 = v43;
                v44 = (char *)realloc(v27, v43);
                v26 = v94;
                if ( !v44 )
                {
                  free(ptr);
                  free(v5);
                  *v89 = -1;
                  return 0;
                }
              }
              ptr = v44;
              memcpy(&v44[v26], &v102[v25], v42);
              v25 += v42;
              v10 = v95;
              v24 -= v42;
              if ( v25 >= v13 )
                goto LABEL_183;
            }
            if ( v10 )
            {
              v28 = v10;
              if ( v25 >= v13 )
              {
LABEL_49:
                v29 = v25;
                v10 = v28;
LABEL_58:
                v35 = v13;
                v36 = v101;
                if ( v13 < v29 )
                  v35 = v29;
                do
                {
                  if ( v35 == v29 )
                  {
                    ptr = v27;
                    v97 = v26;
                    v93 = 0;
                    v9 = v98;
                    v8 = v99;
                    if ( v99 > 0 )
                      goto LABEL_184;
                    goto LABEL_6;
                  }
                  v37 = (unsigned __int8)v102[v29++];
                }
                while ( v37 != 13 && v37 != 10 );
                v25 = v29 - 1;
                if ( v37 == 0xD )
                  v25 = v29;
                if ( v25 < v13 )
                {
                  v24 = 0;
                  if ( v102[v25] != 10 )
                    goto LABEL_43;
                  if ( v10 )
                  {
                    v24 = 0;
                    do
                    {
                      v38 = *v36++;
                      --v10;
                      v39 = v38 | 0x20;
                      v40 = v38 - 48;
                      v41 = v39 - 87;
                      if ( (unsigned __int8)v40 < 0xAu )
                        v41 = v40;
                      v24 = v41 + 16 * v24;
                    }
                    while ( v10 );
                    v101[0] = 0;
                    if ( v24 )
                    {
                      v10 = 0;
                      ++v25;
                      goto LABEL_74;
                    }
                    ptr = v27;
                    v97 = v26;
                  }
                  else
                  {
                    v101[0] = 0;
                    ptr = v27;
                    v97 = v26;
                  }
                  goto end_of_stream;
                }
                ptr = v27;
                v97 = v26;
                v93 = 0;
                v9 = v98;
                v8 = v99;
                if ( v99 > 0 )
                  goto LABEL_184;
                goto LABEL_6;
              }
            }
            else
            {
              v25 += v102[v25] == 0xD;
              if ( v25 >= v13 )
              {
                v28 = 0;
                if ( v25 >= v13 )
                  goto LABEL_49;
              }
              else
              {
                v25 += v102[v25] == 0xA;
                v28 = 0;
                if ( v25 >= v13 )
                  goto LABEL_49;
              }
            }
            v31 = v27;
            v30 = _ctype_b_loc();
            v26 = v94;
            v32 = *v30;
            v27 = v31;
            v10 = v28;
            while ( 1 )
            {
              if ( v10 >= 0x1F )
              {
                v29 = v25;
                goto LABEL_58;
              }
              v33 = v102[v25];
              if ( (v32[v33] & 0x1000) == 0 )
                break;
              ++v25;
              v34 = &v101[v10++];
              v34[1] = 0;
              *v34 = v33;
              if ( v13 == v25 )
              {
                v29 = v13;
                goto LABEL_58;
              }
            }
            v29 = v25;
            goto LABEL_58;
          }
          v15 = v13 + v9;
          if ( v7 >= v13 + v9 )
          {
            v5 = v14;
          }
          else
          {
            v5 = (char *)realloc(v14, v13 + v9);
            v7 = v13 + v9;
            if ( !v5 )
            {
              free(v14);
              free(ptr);
              *v89 = -1;
              return 0;
            }
          }
          memcpy(&v5[v9], v102, v13);
          v16 = v13 + v9;
          if ( v15 >= 2 )
            break;
LABEL_9:
          v9 += v13;
          v13 = receivedata(v100, v102, 2048, 5000);
          v11 = 0;
          v14 = v5;
          if ( v13 <= 0 )
            goto end_of_stream;
        }
        v17 = v15 - 1;
        v18 = 0;
        while ( 1 )
        {
          v19 = (unsigned __int8)v5[v18];
          if ( v19 == 10 )
            break;
          if ( v19 == 13 )
          {
            v20 = v18 + 1;
            v11 = 0;
            if ( v5[v18 + 1] != 10 )
              goto LABEL_34;
            v20 = v18 + 2;
            if ( v18 + 2 >= v16 )
            {
              v11 = 0;
LABEL_34:
              v18 = v20 + 1;
              if ( v20 + 1 >= v17 )
                goto LABEL_8;
              goto LABEL_35;
            }
            v11 = 0;
            if ( v5[v20] != 13 )
              goto LABEL_34;
            v21 = v18 + 3;
            if ( v18 + 3 >= v16 )
            {
              v18 += 4;
              v11 = 0;
              if ( v21 + 1 >= v17 )
                goto LABEL_8;
            }
            else
            {
              v11 = v18 + 4;
              if ( v5[v21] != 0xA )
                v11 = 0;
              v18 += 4;
              if ( v21 + 1 >= v17 )
                goto LABEL_8;
            }
          }
          else
          {
            ++v18;
            v11 = 0;
            if ( v18 >= v17 )
              goto LABEL_8;
          }
LABEL_35:
          if ( v11 )
            goto LABEL_8;
        }
        v22 = v18 + 1;
        v11 = v18 + 2;
        if ( v5[v18 + 1] != 0xA )
          v11 = 0;
        v18 += 2;
        if ( v22 + 1 < v17 )
          goto LABEL_35;
LABEL_8:
        if ( !v11 )
          goto LABEL_9;
        v98 = v13 + v9;
        if ( v11 >= 2 )
        {
          v45 = v11 - 1;
          v94 = v11 - 1;
          if ( v92 )
          {
            v46 = v13 + v9;
            v47 = 0;
            v48 = 0;
            v49 = 0;
            v50 = 0;
            v91 = v46;
            while ( 1 )
            {
              v52 = (unsigned __int8)v5[v50];
              if ( v52 == 58 && v49 > 0 && v49 >= v48 )
              {
                v47 = v50 + 1;
                if ( v50 >= v45 )
                {
                  v51 = v50;
                  v48 = v50;
                }
                else
                {
                  v47 = v50 + 1;
                  do
                  {
                    v53 = (unsigned __int8)v5[v47];
                    if ( v53 != 9 && v53 != 32 )
                    {
                      v51 = v47 - 1;
                      v48 = v50;
                      goto LABEL_92;
                    }
                    ++v47;
                  }
                  while ( v11 != v47 );
                  v51 = v45;
                  v48 = v50;
                  v47 = v11;
                }
              }
              else if ( v52 == 13 || v52 == 10 )
              {
                if ( v49 )
                {
                  if ( v49 >= v48 || v48 >= v47 )
                  {
LABEL_124:
                    v47 = 0;
                    if ( v50 < v98 )
                      goto LABEL_131;
                  }
                  else
                  {
                    v54 = v48 - v49;
                    v86 = &v5[v49];
                    if ( !strncasecmp(&v5[v49], "content-length", v48 - v49) )
                    {
                      v59 = strtol(&v5[v47], 0u, 10);
                      v45 = v94;
                      v46 = v91;
                      v99 = v59;
                      v47 = 0;
                      if ( v50 < v98 )
                        goto LABEL_131;
                    }
                    else if ( !strncasecmp(v86, "transfer-encoding", v54) )
                    {
                      v60 = strncasecmp(&v5[v47], "chunked", 7u);
                      v61 = v90;
                      v45 = v94;
                      v46 = v91;
                      if ( !v60 )
                        v61 = 1;
                      v90 = v61;
                      v47 = 0;
                      if ( v50 < v98 )
                      {
                        do
                        {
LABEL_131:
                          v62 = (unsigned __int8)v5[v50];
                          if ( v62 != 13 && v62 != 10 )
                          {
                            v51 = v50;
                            v49 = v50;
                            v48 = v50;
                            goto LABEL_92;
                          }
                          ++v50;
                        }
                        while ( v46 != v50 );
                        v48 = v98;
                        v51 = v98;
                        v49 = v98;
                        goto LABEL_92;
                      }
                    }
                    else
                    {
                      v45 = v94;
                      v46 = v91;
                      v47 = 0;
                      if ( v50 < v98 )
                        goto LABEL_131;
                    }
                  }
                }
                else
                {
                  v55 = v5 + 1;
                  v56 = v92;
                  v57 = v50;
                  if ( v50 > 0 )
                  {
                    do
                    {
                      if ( *(v55 - 1) == 32 )
                      {
                        if ( *v56 >= 0 )
                          goto LABEL_124;
                        v58 = strtol(v55, 0u, 10);
                        v46 = v91;
                        v45 = v94;
                        *v56 = v58;
                      }
                      --v57;
                      ++v55;
                    }
                    while ( v57 );
                    v47 = 0;
                    if ( v50 < v98 )
                      goto LABEL_131;
                  }
                  else
                  {
                    v47 = 0;
                    if ( v50 < v98 )
                      goto LABEL_131;
                  }
                }
                v51 = v50;
                v49 = v50;
                v48 = v50;
              }
              else
              {
                v51 = v50;
              }
LABEL_92:
              v50 = v51 + 1;
              if ( v51 + 1 >= v45 )
                goto LABEL_169;
            }
          }
          v63 = v13 + v9;
          v64 = 0;
          v65 = 0;
          v66 = 0;
          v67 = 0;
          v91 = v63;
          while ( 2 )
          {
            v69 = (unsigned __int8)v5[v67];
            if ( v69 == 58 && v66 > 0 && v66 >= v65 )
            {
              v64 = v67 + 1;
              if ( v67 >= v45 )
              {
                v68 = v67;
                v65 = v67;
              }
              else
              {
                v64 = v67 + 1;
                do
                {
                  v70 = (unsigned __int8)v5[v64];
                  if ( v70 != 32 && v70 != 9 )
                  {
                    v68 = v64 - 1;
                    v65 = v67;
                    goto LABEL_137;
                  }
                  ++v64;
                }
                while ( v11 != v64 );
                v68 = v45;
                v65 = v67;
                v64 = v11;
              }
              goto LABEL_137;
            }
            if ( v69 != 13 && v69 != 10 )
            {
              v68 = v67;
              goto LABEL_137;
            }
            if ( v66 < v65 && v65 < v64 )
            {
              v71 = &v5[v66];
              v72 = v65 - v66;
              if ( strncasecmp(&v5[v66], v87, v65 - v66) )
              {
                if ( !strncasecmp(v71, "transfer-encoding", v72) )
                {
                  v74 = strncasecmp(&v5[v64], "chunked", 7u);
                  v75 = v90;
                  v45 = v94;
                  v63 = v91;
                  if ( !v74 )
                    v75 = 1;
                  v90 = v75;
                  v64 = 0;
                  if ( v67 < v98 )
                  {
                    do
                    {
LABEL_165:
                      v76 = (unsigned __int8)v5[v67];
                      if ( v76 != 13 && v76 != 10 )
                      {
                        v68 = v67;
                        v66 = v67;
                        v65 = v67;
                        goto LABEL_137;
                      }
                      ++v67;
                    }
                    while ( v63 != v67 );
                    v65 = v98;
                    v68 = v98;
                    v66 = v98;
LABEL_137:
                    v67 = v68 + 1;
                    if ( v68 + 1 >= v45 )
                      goto LABEL_169;
                    continue;
                  }
                }
                else
                {
                  v45 = v94;
                  v63 = v91;
                  v64 = 0;
                  if ( v67 < v98 )
                    goto LABEL_165;
                }
LABEL_159:
                v68 = v67;
                v66 = v67;
                v65 = v67;
                goto LABEL_137;
              }
              v73 = strtol(&v5[v64], 0u, 10);
              v45 = v94;
              v63 = v91;
              v99 = v73;
            }
            break;
          }
          v64 = 0;
          if ( v67 < v98 )
            goto LABEL_165;
          goto LABEL_159;
        }
LABEL_169:
        v13 = v98 - v11;
        memcpy(v102, &v5[v11], v98 - v11);
        v10 = v95;
        v23 = v99;
        v24 = v93;
        if ( v90 )
          goto LABEL_40;
LABEL_170:
        v77 = v97;
        v78 = v13;
        if ( v23 < v13 + v97 )
          v78 = v23 - v97;
        if ( (int)v23 >= 1 )
          v13 = v78;
        v79 = v13 + v97;
        if ( v88 >= v13 + v97 )
        {
          v83 = (char *)ptr;
        }
        else
        {
          v80 = ptr;
          v81 = v23;
          if ( v23 < v79 )
            v23 = v13 + v97;
          if ( v81 < 0 )
            v23 = v13 + v97;
          v88 = v23;
          v82 = (char *)realloc(ptr, v23);
          v77 = v97;
          v83 = v82;
          if ( !v82 )
          {
            free(v80);
            free(v5);
            *v89 = -1;
            return 0;
          }
        }
        memcpy(&v83[v77], v102, v13);
        v97 = v79;
        v10 = v95;
        v24 = v93;
        ptr = v83;
LABEL_183:
        v93 = v24;
        v9 = v98;
        v8 = v99;
        if ( v99 > 0 )
        {
LABEL_184:
          if ( v97 >= v8 )
            break;
        }
      }
end_of_stream:
      free(v5);
      v85 = v97 == 0;
      *v89 = v97;
      if ( v85 )
      {
        free(ptr);
        return 0;
      }
      else
      {
        return ptr;
      }
    }
    else
    {
      free(v5);
      result = 0;
      *size = -1;
    }
  }
  else
  {
    result = 0;
    *size = -1;
  }
  return result;
}
