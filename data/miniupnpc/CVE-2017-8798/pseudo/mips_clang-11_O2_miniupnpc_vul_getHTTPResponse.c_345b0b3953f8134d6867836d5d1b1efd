void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // $v0
  char *v5; // $s5
  unsigned int v6; // $s3
  void *v7; // $v0
  int v8; // $v0
  char *v9; // $s7
  int v10; // $a3
  int v11; // $s0
  unsigned int v12; // $a2
  int v13; // $s4
  int v14; // $v0
  signed int v15; // $fp
  int v16; // $s7
  char *v17; // $s1
  int v18; // $a0
  int v19; // $v1
  int v20; // $v1
  signed int v21; // $s1
  char *v22; // $a0
  int v23; // $t0
  const unsigned __int16 **v24; // $v0
  const unsigned __int16 *v25; // $v0
  int v26; // $v1
  char *v27; // $at
  signed int v28; // $v1
  char *v29; // $v0
  signed int v30; // $t1
  int v31; // $a1
  int v32; // $at
  int v33; // $v1
  int v34; // $at
  int v35; // $v0
  size_t v36; // $a1
  char *v37; // $v0
  void *v38; // $a3
  int v39; // $s1
  int v40; // $v1
  int v41; // $v0
  int v42; // $fp
  int *v43; // $a1
  int v44; // $a0
  int v45; // $a0
  int v46; // $v1
  const char *v47; // $s1
  int v48; // $s7
  int v49; // $v0
  int v50; // $v0
  int v51; // $at
  int v52; // $v0
  int v53; // $a1
  signed int v54; // $v1
  int v55; // $s7
  size_t v56; // $a1
  char *v57; // $v0
  char *v58; // $s1
  bool v60; // dc
  char *v61; // [sp+1Ch] [-86Ch]
  size_t v62; // [sp+20h] [-868h]
  size_t n; // [sp+24h] [-864h]
  char *v64; // [sp+30h] [-858h]
  unsigned int v65; // [sp+34h] [-854h]
  int *v66; // [sp+38h] [-850h]
  int v67; // [sp+3Ch] [-84Ch]
  int v68; // [sp+40h] [-848h]
  int v69; // [sp+44h] [-844h]
  void *v70; // [sp+48h] [-840h]
  int v71; // [sp+4Ch] [-83Ch]
  unsigned int v72; // [sp+50h] [-838h]
  void *ptr; // [sp+54h] [-834h]
  int v74; // [sp+58h] [-830h]
  int *v75; // [sp+5Ch] [-82Ch]
  void *src; // [sp+60h] [-828h]
  int v77; // [sp+64h] [-824h]
  char v78[32]; // [sp+68h] [-820h] BYREF
  char v79[2048]; // [sp+88h] [-800h] BYREF

  v77 = s;
  if ( status_code )
    *status_code = -1;
  v75 = status_code;
  v4 = (char *)malloc(0x800u);
  if ( v4 )
  {
    v5 = v4;
    v6 = 2048;
    v7 = malloc(0x800u);
    if ( v7 )
    {
      v70 = v7;
      v66 = size;
      v67 = 0;
      v78[0] = 0;
      v8 = -1;
      v9 = v79;
      v64 = "content-length";
      v10 = 0;
      v11 = 0;
      v65 = 2048;
      v71 = 0;
      v12 = 0;
      v13 = 0;
      src = v79;
      do
      {
LABEL_6:
        v68 = v10;
        v72 = v12;
        v69 = v8;
        v14 = receivedata(v77, v9, 2048, 5000);
        if ( v14 <= 0 )
          break;
        v15 = v14;
        v16 = v11;
        v17 = v5;
        while ( !v13 )
        {
          v11 = v15 + v16;
          if ( v6 >= v15 + v16 )
          {
            v5 = v17;
          }
          else
          {
            v5 = (char *)realloc(v17, v15 + v16);
            v6 = v15 + v16;
            if ( !v5 )
            {
              free(v17);
              free(v70);
              *v66 = -1;
              return 0;
            }
          }
          memcpy(&v5[v16], src, v15);
          if ( v11 >= 2 )
          {
            v18 = 0;
            do
            {
              v19 = (unsigned __int8)v5[v18];
              if ( v19 == 10 )
              {
                v20 = v18 + 1;
                v13 = v18 + 2;
                if ( v5[v18 + 1] != 0xA )
                  v13 = 0;
              }
              else if ( v19 == 13 )
              {
                v20 = v18 + 1;
                v13 = 0;
                if ( v5[v18 + 1] == 10 )
                {
                  v20 = v18 + 2;
                  if ( v18 + 2 >= v11 )
                  {
                    v13 = 0;
                  }
                  else
                  {
                    v13 = 0;
                    if ( v5[v20] == 13 )
                    {
                      v20 = v18 + 3;
                      if ( v18 + 3 >= v11 )
                      {
                        v13 = 0;
                      }
                      else
                      {
                        v13 = v18 + 4;
                        if ( v5[v20] != 0xA )
                          v13 = 0;
                      }
                    }
                  }
                }
              }
              else
              {
                v20 = v18;
                v13 = 0;
              }
              v18 = v20 + 1;
            }
            while ( v20 + 1 < v11 - 1 && !v13 );
            if ( v13 )
            {
              if ( v13 < 2 )
              {
                v9 = (char *)src;
              }
              else
              {
                v74 = v13 - 1;
                v38 = (void *)(v15 + v16);
                v39 = 0;
                v40 = 0;
                v41 = 0;
                v42 = 0;
                v43 = v75;
                v9 = (char *)src;
                ptr = v38;
                do
                {
                  v45 = (unsigned __int8)v5[v42];
                  if ( v45 == 58 && v41 > 0 && v41 >= v40 )
                  {
                    v39 = v42 + 1;
                    if ( v42 >= v74 )
                    {
                      v44 = v42;
                      v40 = v42;
                    }
                    else
                    {
                      v39 = v42 + 1;
                      do
                      {
                        v46 = (unsigned __int8)v5[v39];
                        if ( v46 != 32 && v46 != 9 )
                        {
                          v44 = v39 - 1;
                          v40 = v42;
                          goto LABEL_83;
                        }
                        ++v39;
                      }
                      while ( v13 != v39 );
                      v44 = v74;
                      v40 = v42;
                      v39 = v13;
                    }
                  }
                  else if ( v45 == 13 || v45 == 10 )
                  {
                    if ( !v43 || v41 )
                    {
                      if ( v41 < v40 && v40 < v39 )
                      {
                        v61 = &v5[v41];
                        v62 = v40 - v41;
                        if ( strncasecmp(&v5[v41], v64, v40 - v41) )
                        {
                          if ( strncasecmp(v61, "transfer-encoding", v62) )
                          {
                            v43 = v75;
                            v38 = ptr;
                          }
                          else
                          {
                            v50 = strncasecmp(&v5[v39], "chunked", 7u);
                            v51 = v67;
                            if ( !v50 )
                              v51 = 1;
                            v67 = v51;
                            v43 = v75;
                            v38 = ptr;
                          }
                        }
                        else
                        {
                          v69 = strtol(&v5[v39], 0u, 10);
                          v43 = v75;
                          v38 = ptr;
                        }
                      }
                      goto LABEL_116;
                    }
                    if ( v42 > 0 )
                    {
                      v47 = v5 + 1;
                      v48 = v42;
                      while ( 1 )
                      {
                        if ( *(v47 - 1) == 32 )
                        {
                          if ( *v43 >= 0 )
                          {
                            v9 = (char *)src;
                            break;
                          }
                          v49 = strtol(v47, 0u, 10);
                          v38 = ptr;
                          v43 = v75;
                          *v75 = v49;
                        }
                        --v48;
                        ++v47;
                        if ( !v48 )
                        {
                          v9 = (char *)src;
                          break;
                        }
                      }
                    }
LABEL_116:
                    v39 = 0;
                    if ( v42 < v11 )
                    {
                      do
                      {
                        v52 = (unsigned __int8)v5[v42];
                        if ( v52 != 13 && v52 != 10 )
                        {
                          v44 = v42;
                          v41 = v42;
                          v40 = v42;
                          goto LABEL_83;
                        }
                        ++v42;
                      }
                      while ( v38 != (void *)v42 );
                      v44 = v11;
                      v41 = v11;
                      v40 = v11;
                    }
                    else
                    {
                      v44 = v42;
                      v41 = v42;
                      v40 = v42;
                    }
                  }
                  else
                  {
                    v44 = v42;
                  }
LABEL_83:
                  v42 = v44 + 1;
                }
                while ( v44 + 1 < v74 );
              }
              v15 = v11 - v13;
              memcpy(v79, &v5[v13], v11 - v13);
              v12 = v72;
              v10 = v68;
              if ( !v67 )
                goto LABEL_125;
              goto LABEL_36;
            }
          }
          v15 = receivedata(v77, v79, 2048, 5000);
          v13 = 0;
          v16 = v11;
          v17 = v5;
          if ( v15 <= 0 )
            goto end_of_stream;
        }
        v11 = v16;
        v9 = (char *)src;
        v12 = v72;
        v10 = v68;
        v5 = v17;
        if ( !v67 )
        {
LABEL_125:
          v53 = v71;
          v54 = v15;
          if ( v69 < v15 + v71 )
            v54 = v69 - v71;
          if ( v69 >= 1 )
            v15 = v54;
          v55 = v15 + v71;
          if ( v65 >= v15 + v71 )
          {
            v58 = (char *)v70;
          }
          else
          {
            v56 = v69;
            if ( v69 < v55 )
              v56 = v15 + v71;
            v65 = v56;
            v57 = (char *)realloc(v70, v56);
            v53 = v71;
            v58 = v57;
            if ( !v57 )
            {
              free(v70);
              free(v5);
              *v66 = -1;
              return 0;
            }
          }
          memcpy(&v58[v53], v79, v15);
          v70 = v58;
          v71 = v55;
          v9 = (char *)src;
          v12 = v72;
          v10 = v68;
          goto LABEL_136;
        }
LABEL_36:
        if ( v15 > 0 )
        {
          v21 = 0;
          while ( 1 )
          {
            v22 = (char *)v70;
            v23 = v71;
            v74 = v71;
            ptr = v70;
LABEL_39:
            if ( !v10 )
              break;
LABEL_68:
            v72 = v12;
            v35 = v15 - v21;
            v68 = v10;
            if ( v10 < v15 - v21 )
              v35 = v10;
            n = v35;
            v71 = v35 + v23;
            if ( v65 >= v35 + v23 )
            {
              v37 = v22;
            }
            else
            {
              v36 = v69;
              if ( v69 < v35 + v23 )
                v36 = v35 + v23;
              v65 = v36;
              v37 = (char *)realloc(v22, v36);
              v23 = v74;
              if ( !v37 )
              {
                free(ptr);
                free(v5);
                *v66 = -1;
                return 0;
              }
            }
            v70 = v37;
            memcpy(&v37[v23], &v9[v21], n);
            v10 = v68 - n;
            v21 += n;
            v12 = v72;
            if ( v21 >= v15 )
              goto LABEL_136;
          }
          v72 = v12;
          if ( !v12 )
          {
            v21 += v9[v21] == 0xD;
            if ( v21 < v15 )
              v21 += v9[v21] == 0xA;
          }
          if ( v21 >= v15 )
          {
            v12 = v72;
            v28 = v21;
          }
          else
          {
            v24 = _ctype_b_loc();
            v22 = (char *)ptr;
            v23 = v74;
            v25 = *v24;
            v12 = v72;
            while ( 1 )
            {
              if ( v12 >= 0x1F )
              {
                v28 = v21;
                goto LABEL_52;
              }
              v26 = v9[v21];
              if ( (v25[v26] & 0x10) == 0 )
                break;
              v27 = &v78[v12];
              v27[1] = 0;
              *v27 = v26;
              ++v21;
              ++v12;
              if ( v15 == v21 )
              {
                v28 = v15;
                goto LABEL_52;
              }
            }
            v28 = v21;
          }
LABEL_52:
          v29 = v78;
          v30 = v15;
          if ( v15 < v28 )
            v30 = v28;
          do
          {
            v10 = 0;
            if ( v30 == v28 )
            {
              v70 = v22;
              v71 = v23;
              v8 = v69;
              if ( v69 > 0 )
                goto LABEL_137;
              goto LABEL_6;
            }
            v31 = (unsigned __int8)v9[v28++];
          }
          while ( v31 != 13 && v31 != 10 );
          v21 = v28 - 1;
          if ( v31 == 0xD )
            v21 = v28;
          if ( v21 < v15 )
          {
            v10 = 0;
            if ( v9[v21] != 10 )
              goto LABEL_39;
            if ( v12 )
            {
              v10 = 0;
              do
              {
                v32 = *v29;
                v33 = (v32 | 0x20) - 87;
                v34 = v32 - 48;
                if ( (unsigned __int8)v34 < 0xAu )
                  v33 = v34;
                v10 = v33 + 16 * v10;
                --v12;
                ++v29;
              }
              while ( v12 );
              v78[0] = 0;
              if ( v10 )
              {
                v12 = 0;
                ++v21;
                goto LABEL_68;
              }
              v70 = v22;
              v71 = v23;
            }
            else
            {
              v78[0] = 0;
              v70 = v22;
              v71 = v23;
            }
            break;
          }
          v70 = v22;
          v71 = v23;
          v8 = v69;
          if ( v69 > 0 )
            continue;
          goto LABEL_6;
        }
LABEL_136:
        v8 = v69;
        if ( v69 <= 0 )
          goto LABEL_6;
LABEL_137:
        ;
      }
      while ( v71 < v8 );
end_of_stream:
      free(v5);
      v60 = v71 == 0;
      *v66 = v71;
      if ( v60 )
      {
        free(v70);
        return 0;
      }
      else
      {
        return v70;
      }
    }
    else
    {
      free(v5);
      *size = -1;
      return 0;
    }
  }
  else
  {
    *size = -1;
    return 0;
  }
}
