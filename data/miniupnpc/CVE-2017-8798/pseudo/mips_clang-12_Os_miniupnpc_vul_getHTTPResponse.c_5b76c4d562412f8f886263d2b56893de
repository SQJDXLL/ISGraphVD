char *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // $v0
  char *v5; // $s1
  char *v6; // $v0
  int v7; // $v0
  signed int v8; // $s0
  int v9; // $s7
  unsigned int v10; // $a2
  int v11; // $s4
  int v12; // $v0
  signed int v13; // $fp
  int v14; // $s0
  char *v15; // $s5
  int v16; // $a0
  int v17; // $v1
  int v18; // $v1
  void *v19; // $t0
  int v20; // $s5
  int v21; // $v1
  int v22; // $v0
  int v23; // $fp
  int *v24; // $a2
  int v25; // $a1
  int v26; // $a0
  int v27; // $v1
  const char *v28; // $s5
  int v29; // $s3
  int v30; // $v0
  size_t v31; // $s3
  int v32; // $v0
  int v33; // $at
  int v34; // $v0
  signed int v35; // $s5
  unsigned int v36; // $s0
  const unsigned __int16 *v37; // $v0
  int v38; // $v1
  char *v39; // $at
  int v40; // $v0
  char *v41; // $v0
  int v42; // $v1
  int v43; // $a0
  char *v44; // $a0
  size_t v45; // $v0
  int v46; // $v1
  size_t v47; // $a1
  char *v48; // $v0
  int v49; // $a1
  int v50; // $v1
  size_t v51; // $a1
  char *v52; // $v0
  char *v53; // $s5
  char *v55; // [sp+1Ch] [-874h]
  unsigned int v56; // [sp+38h] [-858h]
  int *v57; // [sp+3Ch] [-854h]
  int v58; // [sp+40h] [-850h]
  size_t n; // [sp+44h] [-84Ch]
  size_t na; // [sp+44h] [-84Ch]
  unsigned int v61; // [sp+48h] [-848h]
  unsigned int v62; // [sp+48h] [-848h]
  int v63; // [sp+4Ch] [-844h]
  char *v64; // [sp+50h] [-840h]
  int v65; // [sp+54h] [-83Ch]
  void *ptr; // [sp+58h] [-838h]
  int v67; // [sp+5Ch] [-834h]
  int v68; // [sp+5Ch] [-834h]
  unsigned int v71; // [sp+6Ch] [-824h]
  char v72[32]; // [sp+70h] [-820h] BYREF
  char v73[2048]; // [sp+90h] [-800h] BYREF

  if ( status_code )
    *status_code = -1;
  v4 = (char *)malloc(0x800u);
  if ( v4 )
  {
    v5 = v4;
    v71 = 2048;
    v6 = (char *)malloc(0x800u);
    if ( v6 )
    {
      v64 = v6;
      v58 = 0;
      v72[0] = 0;
      v7 = -1;
      v8 = 0;
      v9 = 0;
      v56 = 2048;
      v65 = 0;
      v10 = 0;
      v11 = 0;
      do
      {
        v61 = v10;
        v63 = v7;
        v12 = receivedata(s, v73, 2048, 5000);
        if ( v12 <= 0 )
          break;
        v13 = v12;
        n = v8;
        v14 = v9;
        v15 = v5;
        while ( 1 )
        {
          if ( v11 )
          {
            v9 = v14;
            v10 = v61;
            v5 = v15;
            goto LABEL_80;
          }
          v9 = v13 + v14;
          if ( v71 >= v13 + v14 )
          {
            v5 = v15;
          }
          else
          {
            v71 = v13 + v14;
            v5 = (char *)realloc(v15, v13 + v14);
            if ( !v5 )
            {
              free(v15);
              free(v64);
              *size = -1;
              return 0;
            }
          }
          memcpy(&v5[v14], v73, v13);
          if ( v9 >= 2 )
          {
            v16 = 0;
            do
            {
              v17 = (unsigned __int8)v5[v16];
              if ( v17 == 10 )
              {
                v18 = v16 + 1;
                v11 = v16 + 2;
                if ( v5[v16 + 1] != 0xA )
                  v11 = 0;
              }
              else if ( v17 == 13 )
              {
                v18 = v16 + 1;
                v11 = 0;
                if ( v5[v16 + 1] == 10 )
                {
                  v18 = v16 + 2;
                  if ( v16 + 2 >= v9 )
                  {
                    v11 = 0;
                  }
                  else
                  {
                    v11 = 0;
                    if ( v5[v18] == 13 )
                    {
                      v18 = v16 + 3;
                      if ( v16 + 3 >= v9 )
                      {
                        v11 = 0;
                      }
                      else
                      {
                        v11 = v16 + 4;
                        if ( v5[v18] != 0xA )
                          v11 = 0;
                      }
                    }
                  }
                }
              }
              else
              {
                v18 = v16;
                v11 = 0;
              }
              v16 = v18 + 1;
            }
            while ( v18 + 1 < v9 - 1 && !v11 );
            if ( v11 )
              break;
          }
          v13 = receivedata(s, v73, 2048, 5000);
          v11 = 0;
          v14 = v9;
          v15 = v5;
          if ( v13 <= 0 )
            goto end_of_stream;
        }
        if ( v11 >= 2 )
        {
          v67 = v11 - 1;
          v19 = (void *)(v13 + v14);
          v20 = 0;
          v21 = 0;
          v22 = 0;
          v23 = 0;
          v24 = status_code;
          ptr = v19;
          v57 = size;
          do
          {
            v25 = (unsigned __int8)v5[v23];
            if ( v22 > 0 && v22 >= v21 && v25 == 58 )
            {
              v26 = v23;
              if ( v23 < v67 )
              {
                v26 = v23;
                while ( 1 )
                {
                  v27 = (unsigned __int8)v5[v26 + 1];
                  if ( v27 != 32 && v27 != 9 )
                    break;
                  if ( v11 - 1 == ++v26 )
                  {
                    v26 = v11 - 1;
                    break;
                  }
                }
              }
              v20 = v26 + 1;
              v21 = v23;
            }
            else if ( v25 == 13 || v25 == 10 )
            {
              if ( !v24 || v22 )
              {
                if ( v22 < v21 && v21 < v20 )
                {
                  v55 = &v5[v22];
                  v31 = v21 - v22;
                  if ( strncasecmp(&v5[v22], "content-length", v21 - v22) )
                  {
                    if ( strncasecmp(v55, "transfer-encoding", v31) )
                    {
                      v24 = status_code;
                      v19 = ptr;
                      size = v57;
                    }
                    else
                    {
                      v32 = strncasecmp(&v5[v20], "chunked", 7u);
                      v33 = v58;
                      if ( !v32 )
                        v33 = 1;
                      v58 = v33;
                      v24 = status_code;
                      v19 = ptr;
                      size = v57;
                    }
                  }
                  else
                  {
                    v63 = atoi(&v5[v20]);
                    v24 = status_code;
                    v19 = ptr;
                    size = v57;
                  }
                }
                goto LABEL_71;
              }
              if ( v23 > 0 )
              {
                v28 = v5 + 1;
                v29 = v23;
                while ( 1 )
                {
                  if ( *(v28 - 1) == 32 )
                  {
                    if ( *v24 >= 0 )
                    {
                      size = v57;
                      break;
                    }
                    v30 = atoi(v28);
                    v19 = ptr;
                    v24 = status_code;
                    *status_code = v30;
                  }
                  --v29;
                  ++v28;
                  if ( !v29 )
                  {
                    size = v57;
                    break;
                  }
                }
              }
LABEL_71:
              v20 = 0;
              if ( v23 >= v9 )
              {
                v26 = v23;
                v22 = v23;
                v21 = v23;
              }
              else
              {
                while ( 1 )
                {
                  v34 = (unsigned __int8)v5[v23];
                  if ( v34 != 13 && v34 != 10 )
                    break;
                  if ( v19 == (void *)++v23 )
                  {
                    v26 = v9;
                    v22 = v9;
                    v21 = v9;
                    goto LABEL_78;
                  }
                }
                v26 = v23;
                v22 = v23;
                v21 = v23;
              }
            }
            else
            {
              v26 = v23;
            }
LABEL_78:
            v23 = v26 + 1;
          }
          while ( v26 + 1 < v67 );
        }
        v13 = v9 - v11;
        memcpy(v73, &v5[v11], v9 - v11);
        v10 = v61;
LABEL_80:
        v8 = n;
        if ( v58 )
        {
          if ( v13 > 0 )
          {
            v35 = 0;
LABEL_83:
            v68 = v65;
            do
            {
              if ( v8 )
              {
                v44 = v64;
                goto LABEL_113;
              }
              if ( v10 )
              {
                v36 = v10;
              }
              else
              {
                v35 += v73[v35] == 0xD;
                v36 = 0;
                if ( v35 < v13 )
                  v35 += v73[v35] == 0xA;
              }
              if ( v35 >= v13 )
              {
                v10 = v36;
              }
              else
              {
                v37 = *_ctype_b_loc();
                v10 = v36;
                while ( v10 < 0x1F )
                {
                  v38 = v73[v35];
                  if ( (v37[v38] & 0x10) == 0 )
                    break;
                  v39 = &v72[v10 + 1];
                  *v39 = 0;
                  *(v39 - 1) = v38;
                  ++v35;
                  ++v10;
                  if ( v13 == v35 )
                  {
                    v8 = 0;
                    goto LABEL_134;
                  }
                }
              }
              if ( v35 < v13 )
              {
                while ( 1 )
                {
                  v40 = (unsigned __int8)v73[v35];
                  if ( v40 == 10 || v40 == 13 )
                    break;
                  if ( v13 == ++v35 )
                  {
                    v8 = 0;
                    goto LABEL_134;
                  }
                }
                v35 += v40 == 0xD;
              }
              if ( v35 >= v13 )
              {
                v8 = 0;
                goto LABEL_134;
              }
              v8 = 0;
            }
            while ( v73[v35] != 10 );
            if ( !v10 )
            {
              v72[0] = 0;
              break;
            }
            v8 = 0;
            v41 = v72;
            do
            {
              v42 = (unsigned __int8)*v41;
              if ( (unsigned __int8)(v42 - 0x30) >= 0xAu )
              {
                v43 = 16 * v8 - 0x57;
                v42 = (char)(v42 | 0x20);
              }
              else
              {
                v43 = 16 * v8 - 0x30;
              }
              v8 = v43 + v42;
              --v10;
              ++v41;
            }
            while ( v10 );
            v72[0] = 0;
            if ( !v8 )
              break;
            v10 = 0;
            v44 = v64;
            ++v35;
LABEL_113:
            v62 = v10;
            v45 = v13 - v35;
            if ( v8 < v13 - v35 )
              v45 = v8;
            na = v45;
            v46 = v45 + v65;
            v65 += v45;
            if ( v56 >= v45 + v68 )
            {
              v48 = v44;
            }
            else
            {
              v47 = v63;
              if ( v63 < v46 )
                v47 = v46;
              v56 = v47;
              v48 = (char *)realloc(v44, v47);
              if ( !v48 )
                goto LABEL_131;
            }
            v64 = v48;
            memcpy(&v48[v68], &v73[v35], na);
            v8 -= na;
            v35 += na;
            v10 = v62;
            if ( v35 < v13 )
              goto LABEL_83;
          }
        }
        else
        {
          v49 = v65;
          v50 = v13;
          if ( v63 < v13 + v65 )
            v50 = v63 - v65;
          if ( v63 >= 1 )
            v13 = v50;
          if ( v56 >= v13 + v65 )
          {
            v53 = v64;
          }
          else
          {
            v51 = v63;
            if ( v63 < v13 + v65 )
              v51 = v13 + v65;
            v56 = v51;
            v52 = (char *)realloc(v64, v51);
            v49 = v65;
            v53 = v52;
            if ( !v52 )
            {
LABEL_131:
              free(v64);
              free(v5);
              *size = -1;
              return 0;
            }
          }
          memcpy(&v53[v49], v73, v13);
          v64 = v53;
          v65 += v13;
          v10 = v61;
          v8 = n;
        }
LABEL_134:
        v7 = v63;
      }
      while ( v63 <= 0 || v65 < v63 );
end_of_stream:
      free(v5);
      *size = v65;
      if ( v65 )
      {
        return v64;
      }
      else
      {
        free(v64);
        return 0;
      }
    }
    else
    {
      free(v5);
      *size = -1;
      return 0;
    }
  }
  else
  {
    *size = -1;
    return 0;
  }
}
