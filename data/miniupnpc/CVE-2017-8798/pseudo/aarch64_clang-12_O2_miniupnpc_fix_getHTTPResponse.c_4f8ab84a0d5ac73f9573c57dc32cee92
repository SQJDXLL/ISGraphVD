void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v6; // x0
  char *v7; // x25
  char *v8; // x24
  int v9; // w20
  int v10; // w19
  unsigned int v11; // w27
  __int64 v12; // x9
  int v13; // w0
  int v14; // w26
  unsigned int v15; // w21
  char *v16; // x22
  int v17; // w9
  int v18; // w11
  __int64 v19; // x11
  __int64 v20; // x10
  int v21; // w11
  int v22; // w9
  int *v23; // x26
  int v24; // w28
  int v25; // w23
  int v26; // w9
  int v27; // w8
  int v28; // w24
  const char *v29; // x22
  int v30; // w10
  int v31; // w10
  const char *v32; // x11
  __int64 v33; // x9
  int v34; // w12
  __int64 v35; // x23
  int v36; // w10
  const char *v37; // x22
  size_t v38; // x26
  int v39; // w0
  int v40; // w8
  char *v41; // x8
  __int64 v42; // x9
  int v43; // w10
  unsigned int v44; // w22
  __int64 v45; // x28
  unsigned int v46; // w8
  const unsigned __int16 *v47; // x9
  unsigned __int64 v48; // x12
  __int64 v49; // x10
  char *v50; // x11
  int v51; // w8
  __int64 v52; // x13
  __int64 v53; // x10
  int v54; // w8
  char *v55; // x9
  __int64 v56; // x10
  int v57; // w11
  int v58; // w15
  __int64 v59; // x8
  char *v60; // x9
  unsigned __int8 v61; // w10
  int v62; // t1
  bool v63; // cf
  unsigned __int8 v64; // w12
  int v65; // w11
  unsigned int v66; // w21
  unsigned int v67; // w9
  size_t v69; // x1
  char *v70; // x0
  unsigned int v71; // w11
  int v73; // w22
  unsigned int v74; // w21
  size_t v76; // x28
  char *v77; // x0
  char *v78; // x0
  char *v80; // x0
  int *v81; // [xsp+0h] [xbp-890h]
  int *v82; // [xsp+28h] [xbp-868h]
  unsigned int v83; // [xsp+30h] [xbp-860h]
  int v84; // [xsp+3Ch] [xbp-854h]
  __int64 v85; // [xsp+40h] [xbp-850h]
  unsigned int v86; // [xsp+40h] [xbp-850h]
  char *ptr; // [xsp+48h] [xbp-848h]
  char *ptra; // [xsp+48h] [xbp-848h]
  unsigned int v89; // [xsp+54h] [xbp-83Ch]
  __int64 v90; // [xsp+58h] [xbp-838h]
  unsigned int v91; // [xsp+64h] [xbp-82Ch]
  char v92[32]; // [xsp+68h] [xbp-828h] BYREF
  char src[2056]; // [xsp+88h] [xbp-808h] BYREF

  if ( status_code )
    *status_code = -1;
  v6 = (char *)malloc(0x800uLL);
  if ( !v6 )
    goto LABEL_158;
  v7 = v6;
  v8 = (char *)malloc(0x800uLL);
  if ( !v8 )
  {
    free(v7);
LABEL_159:
    *size = -1;
    return v8;
  }
  v82 = status_code;
  v9 = 0;
  v10 = 0;
  v11 = 2048;
  v12 = 0xFFFFFFFFLL;
  v85 = 0LL;
  v91 = 0;
  v89 = 0;
  v92[0] = 0;
  v83 = 2048;
  v84 = s;
  do
  {
    v90 = v12;
    v13 = receivedata((unsigned int)s, src, 2048LL, 5000LL, 0LL);
    if ( v13 < 1 )
      break;
    v14 = v13;
    v15 = v9;
    v16 = v7;
LABEL_10:
    if ( v10 )
    {
      v9 = v15;
      v7 = v16;
      goto LABEL_79;
    }
    v9 = v14 + v15;
    if ( v14 + v15 <= v11 )
    {
      v7 = v16;
    }
    else
    {
      v7 = (char *)realloc(v16, (unsigned int)v9);
      v11 = v14 + v15;
      if ( !v7 )
      {
        free(v16);
        v78 = v8;
LABEL_157:
        free(v78);
LABEL_158:
        v8 = 0LL;
        goto LABEL_159;
      }
    }
    memcpy(&v7[v15], src, (unsigned int)v14);
    if ( v9 <= 1 )
      goto LABEL_9;
    v17 = 0;
    do
    {
      v18 = (unsigned __int8)v7[v17];
      if ( v18 == 10 )
      {
        v20 = v17 + 1LL;
        v21 = (unsigned __int8)v7[v20];
        v22 = v17 + 2;
LABEL_25:
        if ( v21 == 10 )
          v10 = v22;
        else
          v10 = 0;
        goto LABEL_28;
      }
      if ( v18 != 13 )
      {
        v10 = 0;
        goto LABEL_31;
      }
      LODWORD(v19) = v17 + 1;
      if ( v7[v17 + 1] != 10 || (v19 = v17 + 2LL, v17 + 2 >= v9) || v7[v19] != 13 )
      {
        v10 = 0;
        v17 = v19;
        goto LABEL_31;
      }
      v20 = v17 + 3LL;
      if ( (int)v20 < v9 )
      {
        v21 = (unsigned __int8)v7[v20];
        v22 = v17 + 4;
        goto LABEL_25;
      }
      v10 = 0;
LABEL_28:
      v17 = v20;
LABEL_31:
      ++v17;
    }
    while ( v17 < v9 - 1 && !v10 );
    if ( !v10 )
    {
LABEL_9:
      v14 = receivedata((unsigned int)s, src, 2048LL, 5000LL, 0LL);
      v10 = 0;
      v15 = v9;
      v16 = v7;
      if ( v14 < 1 )
        break;
      goto LABEL_10;
    }
    ptr = v8;
    v81 = size;
    if ( v10 >= 2 )
    {
      v23 = v82;
      v24 = v10 - 1;
      v25 = 0;
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = v7 + 1;
      do
      {
        v31 = (unsigned __int8)v7[v28];
        if ( v27 >= 1 && v26 <= v27 && v31 == 58 )
        {
          v30 = v28;
          if ( v28 < v24 )
          {
            v32 = &v29[v28];
            v30 = v28;
            v33 = v10 - 1 - (__int64)v28;
            while ( 1 )
            {
              v34 = *(unsigned __int8 *)v32;
              if ( v34 != 32 && v34 != 9 )
                break;
              ++v30;
              --v33;
              ++v32;
              if ( !v33 )
              {
                v30 = v10 - 1;
                break;
              }
            }
          }
          v25 = v30 + 1;
        }
        else if ( v31 == 13 || v31 == 10 )
        {
          if ( !v23 || v27 )
          {
            v36 = v26 - v27;
            if ( v26 > v27 && v25 > v26 )
            {
              v37 = &v7[v27];
              v38 = v36;
              if ( !strncasecmp(v37, "content-length", v36) )
              {
                v90 = strtol(&v7[v25], 0uLL, 10);
              }
              else if ( !strncasecmp(v37, "transfer-encoding", v38) )
              {
                v39 = strncasecmp(&v7[v25], "chunked", 7uLL);
                v40 = HIDWORD(v85);
                if ( !v39 )
                  v40 = 1;
                HIDWORD(v85) = v40;
              }
              v23 = v82;
LABEL_70:
              v29 = v7 + 1;
            }
          }
          else if ( v28 >= 1 )
          {
            v35 = (unsigned int)v28;
            while ( 1 )
            {
              if ( *(v29 - 1) == 32 )
              {
                if ( (*v23 & 0x80000000) == 0 )
                  goto LABEL_70;
                *v23 = strtol(v29, 0uLL, 10);
              }
              --v35;
              ++v29;
              if ( !v35 )
                goto LABEL_70;
            }
          }
          if ( v28 < v9 )
          {
            v41 = &v7[v28];
            v42 = v9 - (__int64)v28;
            while ( 1 )
            {
              v43 = (unsigned __int8)*v41;
              if ( v43 != 13 && v43 != 10 )
                break;
              ++v28;
              --v42;
              ++v41;
              if ( !v42 )
              {
                v25 = 0;
                v30 = v9;
                v27 = v9;
                v28 = v9;
                goto LABEL_40;
              }
            }
          }
          v25 = 0;
          v30 = v28;
          v27 = v28;
        }
        else
        {
          v30 = v28;
          v28 = v26;
        }
LABEL_40:
        v26 = v28;
        v28 = v30 + 1;
      }
      while ( v30 + 1 < v24 );
    }
    v14 = v9 - v10;
    memcpy(src, &v7[v10], v9 - v10);
    size = v81;
    v8 = ptr;
LABEL_79:
    if ( !HIDWORD(v85) )
    {
      v71 = v91;
      if ( v14 + v91 <= (unsigned int)v90 || (int)v90 <= 0 )
        v73 = v14;
      else
        v73 = v90 - v91;
      v74 = v73 + v91;
      if ( v73 + v91 > v83 )
      {
        if ( (unsigned int)v90 < v74 || (int)v90 < 0 )
          v76 = v74;
        else
          v76 = (unsigned int)v90;
        v77 = (char *)realloc(v8, v76);
        if ( !v77 )
        {
          v80 = v8;
LABEL_162:
          free(v80);
          v78 = v7;
          goto LABEL_157;
        }
        v71 = v91;
        v8 = v77;
        v83 = v76;
      }
      ptra = v8;
      memcpy(&v8[v71], src, v73);
      v91 += v73;
      goto LABEL_152;
    }
    ptra = v8;
    if ( v14 < 1 )
      goto LABEL_152;
    v44 = v91;
    LODWORD(v45) = 0;
LABEL_82:
    v46 = v85;
LABEL_83:
    if ( !v46 )
    {
      if ( !v89 )
      {
        v45 = src[(int)v45] == 13 ? (int)v45 + 1LL : (int)v45;
        if ( (int)v45 < v14 && src[v45] == 10 )
          LODWORD(v45) = v45 + 1;
      }
      if ( (int)v45 >= v14 )
      {
        v51 = v45;
        if ( (int)v45 < v14 )
          goto LABEL_98;
LABEL_104:
        LODWORD(v45) = v51;
        if ( v51 >= v14 )
          goto LABEL_151;
      }
      else
      {
        v47 = *_ctype_b_loc();
        v48 = v89;
        v49 = (unsigned int)v14 - (__int64)(int)v45;
        v50 = &src[(int)v45];
        v51 = v45;
        while ( v48 <= 0x1E )
        {
          v52 = (unsigned __int8)*v50;
          if ( (v47[v52] & 0x1000) == 0 )
            break;
          v92[v48] = v52;
          v92[++v48] = 0;
          --v49;
          ++v51;
          ++v50;
          if ( !v49 )
          {
            LODWORD(v85) = 0;
            v91 = v44;
            v89 = v14 + v89 - v45;
            goto LABEL_152;
          }
        }
        v89 = v48;
        if ( v51 >= v14 )
          goto LABEL_104;
LABEL_98:
        v53 = v51;
        v54 = -v51;
        v55 = &src[v53];
        v56 = (unsigned int)v14 - v53;
        while ( 1 )
        {
          v57 = (unsigned __int8)*v55;
          if ( v57 == 10 || v57 == 13 )
            break;
          --v54;
          --v56;
          ++v55;
          if ( !v56 )
            goto LABEL_151;
        }
        LODWORD(v45) = (v57 == 13) - v54;
        if ( (int)v45 >= v14 )
        {
LABEL_151:
          LODWORD(v85) = 0;
          v91 = v44;
          goto LABEL_152;
        }
      }
      v46 = 0;
      if ( src[(int)v45] == 10 )
      {
        if ( v89 )
        {
          v58 = 0;
          v59 = v89;
          v60 = v92;
          do
          {
            v62 = (unsigned __int8)*v60++;
            v61 = v62;
            v63 = (unsigned int)(v62 - 0x30) >= 0xA;
            v64 = v62 | 0x20;
            if ( (unsigned int)(v62 - 0x30) >= 0xA )
              v65 = -87;
            else
              v65 = -48;
            if ( v63 )
              v61 = v64;
            --v59;
            v58 = v65 + 16 * v58 + v61;
          }
          while ( v59 );
          v92[0] = 0;
          if ( v58 )
          {
            LODWORD(v45) = v45 + 1;
            v86 = v58;
            v89 = 0;
            goto LABEL_120;
          }
        }
        else
        {
          v92[0] = 0;
        }
        v8 = ptra;
        v91 = v44;
        break;
      }
      goto LABEL_83;
    }
    v86 = v46;
LABEL_120:
    if ( v86 >= v14 - (int)v45 )
      v66 = v14 - v45;
    else
      v66 = v86;
    v67 = v66 + v44;
    v91 = v66 + v44;
    if ( v66 + v44 <= v83 )
    {
      v70 = ptra;
    }
    else
    {
      if ( (unsigned int)v90 < v67 || (int)v90 < 0 )
        v69 = v67;
      else
        v69 = (unsigned int)v90;
      v83 = v69;
      v70 = (char *)realloc(ptra, v69);
      if ( !v70 )
      {
        v80 = ptra;
        goto LABEL_162;
      }
    }
    ptra = v70;
    memcpy(&v70[v44], &src[(int)v45], v66);
    v44 += v66;
    LODWORD(v45) = v66 + v45;
    LODWORD(v85) = v86 - v66;
    if ( (int)v45 < v14 )
      goto LABEL_82;
LABEL_152:
    v12 = v90;
    v8 = ptra;
    s = v84;
  }
  while ( (int)v90 < 1 || v91 < (unsigned int)v90 );
  free(v7);
  *size = v91;
  if ( !v91 )
  {
    free(v8);
    return 0LL;
  }
  return v8;
}
