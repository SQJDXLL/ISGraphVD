void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  int *v4; // r4
  size_t v5; // r11
  int v6; // r8
  signed int v7; // r5
  int v8; // r0
  signed int v9; // r7
  signed int v10; // r10
  void *v11; // r0
  _BYTE *v12; // r6
  int v13; // r3
  int v14; // r9
  bool v15; // r2
  int v17; // r2
  int v18; // r0
  signed int v19; // r6
  unsigned int v20; // r10
  unsigned int v21; // r9
  _BOOL4 v22; // r3
  int *v23; // r10
  int v24; // r3
  const char *v25; // r9
  int *v26; // r11
  int v27; // r12
  int v28; // r1
  int v29; // r6
  int v30; // r5
  int v31; // r4
  bool v32; // zf
  bool v33; // cc
  int v34; // r0
  const char *v35; // r8
  int v36; // r7
  bool v37; // zf
  _BOOL4 v38; // r2
  const char *v39; // r5
  int v40; // t1
  const char *v41; // r2
  int v42; // r5
  int v43; // t1
  bool v44; // zf
  char *v45; // r10
  signed int v46; // r6
  char *v47; // r0
  char *v48; // r3
  char *v49; // r2
  char *v50; // r0
  const void *v51; // r1
  size_t v52; // r9
  char *v53; // r0
  char *v54; // r3
  int *v55; // lr
  const unsigned __int16 *v56; // r5
  int v57; // r0
  _BYTE *v58; // r1
  char v59; // r2
  int v60; // t1
  int v61; // r2
  int v62; // r3
  int v63; // t1
  bool v64; // zf
  int v65; // r3
  unsigned __int8 *v66; // r3
  unsigned __int8 *v67; // r4
  int v68; // r2
  int v69; // t1
  int v70; // r5
  int v71; // r5
  bool v73; // cc
  const char *v74; // r8
  int v75; // r0
  int v76; // r3
  int v77; // r2
  int v78; // r3
  int v79; // t1
  int v80; // r5
  bool v81; // zf
  char *v82; // r0
  int *v83; // r10
  int *v84; // r10
  int v85; // [sp+0h] [bp-898h] BYREF
  int content_length; // [sp+8h] [bp-890h]
  char *header_buf; // [sp+Ch] [bp-88Ch]
  unsigned int header_buf_used; // [sp+10h] [bp-888h]
  void *ptr; // [sp+14h] [bp-884h]
  unsigned int content_buf_used; // [sp+18h] [bp-880h]
  int chunked; // [sp+1Ch] [bp-87Ch]
  int sa; // [sp+20h] [bp-878h]
  unsigned int header_buf_len; // [sp+24h] [bp-874h]
  unsigned int content_buf_len; // [sp+28h] [bp-870h]
  unsigned int v95; // [sp+2Ch] [bp-86Ch]
  unsigned int chunksize_buf_index; // [sp+30h] [bp-868h]
  int v97; // [sp+34h] [bp-864h]
  int *status_codea; // [sp+38h] [bp-860h]
  int *sizea; // [sp+3Ch] [bp-85Ch]
  int *v100; // [sp+40h] [bp-858h]
  int *v101; // [sp+44h] [bp-854h]
  char chunksize_buf[32]; // [sp+4Ch] [bp-84Ch] BYREF
  char buf[2048]; // [sp+6Ch] [bp-82Ch] BYREF

  content_buf_len = s;
  v100 = status_code;
  if ( status_code )
    *status_code = -1;
  ptr = malloc(0x800u);
  if ( !ptr )
    goto LABEL_170;
  header_buf = (char *)malloc(0x800u);
  if ( !header_buf )
  {
    free(ptr);
LABEL_170:
    *size = -1;
    return 0;
  }
  v4 = 0;
  header_buf_used = -1;
  v5 = 2048;
  content_length = (int)buf;
  v6 = 0;
  v7 = 0;
  chunksize_buf[0] = 0;
  content_buf_used = 0;
  v95 = 2048;
  header_buf_len = 0;
  sa = 0;
  chunked = (int)chunksize_buf;
  v101 = size;
  while ( 1 )
  {
    v8 = receivedata(content_buf_len, content_length, 2048, 5000, 0);
    v9 = v8;
    if ( v8 <= 0 )
    {
      v23 = v101;
      v19 = v6;
end_of_stream:
      free(ptr);
      *v23 = v19;
      if ( !v6 )
      {
        free(header_buf);
        return 0;
      }
      return header_buf;
    }
    if ( sa )
      break;
    v10 = v8 + content_buf_used;
    if ( v8 + content_buf_used > v95 )
    {
      v11 = realloc(ptr, v8 + content_buf_used);
      if ( !v11 )
      {
        v84 = v101;
        free(ptr);
        free(header_buf);
        *v84 = -1;
        return 0;
      }
      ptr = v11;
      v95 = v10;
    }
    v12 = ptr;
    memcpy((char *)ptr + content_buf_used, (const void *)content_length, v9);
    if ( v10 <= 1 )
    {
      content_buf_used = v10;
    }
    else
    {
      v13 = 0;
      do
      {
        v17 = (unsigned __int8)v12[v13];
        v18 = v13 + 1;
        if ( v17 == 13 )
        {
          if ( v12[v18] != 10 )
            goto LABEL_22;
          if ( v13 + 2 < v10 && v12[v13 + 2] == 13 )
          {
            if ( v13 + 3 < v10 && v12[v13 + 3] == 10 )
            {
              v13 += 4;
              v15 = v13 == 0;
              v14 = v13;
            }
            else
            {
              v13 += 4;
              v14 = 0;
              v15 = 1;
            }
          }
          else
          {
            v13 += 3;
            v14 = 0;
            v15 = 1;
          }
        }
        else
        {
          if ( v17 != 10 )
          {
            ++v13;
            v14 = 0;
            v15 = 1;
            goto LABEL_16;
          }
          if ( v12[v18] != 10 )
          {
LABEL_22:
            v13 += 2;
            v14 = 0;
            v15 = 1;
            goto LABEL_16;
          }
          v13 += 2;
          v15 = v13 == 0;
          v14 = v13;
        }
LABEL_16:
        ;
      }
      while ( v10 - 1 > v13 && v15 );
      if ( v14 )
      {
        v24 = v14 - 1;
        if ( v14 - 1 <= 0 )
          goto LABEL_76;
        content_buf_used = v7;
        chunksize_buf_index = v5;
        v97 = v14;
        status_codea = v4;
        v25 = (const char *)ptr;
        v26 = v100;
        v27 = 0;
        v28 = 0;
        v29 = 0;
        v30 = 0;
        v31 = v24;
        sa = v6;
        while ( 1 )
        {
LABEL_47:
          v33 = v28 <= v27;
          if ( v28 >= v27 )
            v33 = v28 <= 0;
          v34 = (unsigned __int8)v25[v29];
          v35 = &v25[v29];
          v36 = v29 + 1;
          if ( v33 )
            break;
          if ( v34 == 58 )
          {
            if ( v31 <= v29 )
            {
              v30 = v29 + 1;
              v27 = v29++;
            }
            else
            {
              v77 = v29;
              do
              {
                v79 = *(unsigned __int8 *)++v35;
                v78 = v79;
                v80 = v77;
                v81 = v79 == 9;
                if ( v79 != 9 )
                  v81 = v78 == 32;
                ++v77;
                if ( !v81 )
                {
                  v30 = v80 + 1;
                  v27 = v29;
                  v29 = v30;
                  goto LABEL_46;
                }
              }
              while ( v31 != v77 );
              v30 = v31 + 1;
              v27 = v29;
              v29 = v31 + 1;
            }
            goto LABEL_46;
          }
          v32 = v34 == 13;
          if ( v34 != 13 )
            v32 = v34 == 10;
          if ( v32 )
            goto LABEL_64;
LABEL_45:
          ++v29;
LABEL_46:
          if ( v31 <= v29 )
            goto LABEL_75;
        }
        v37 = v34 == 10;
        if ( v34 != 10 )
          v37 = v34 == 13;
        if ( !v37 )
          goto LABEL_45;
        v38 = v28 == 0;
        if ( !v26 )
          v38 = 0;
        if ( v38 )
        {
          if ( v29 <= 0 )
            goto LABEL_65;
          v39 = v25;
          do
          {
            while ( 1 )
            {
              v40 = *(unsigned __int8 *)v39++;
              if ( v40 == 32 )
                break;
              if ( v35 == v39 )
                goto LABEL_64;
            }
            if ( *v26 >= 0 )
              break;
            *v26 = strtol(v39, 0u, 10);
          }
          while ( v35 != v39 );
          goto LABEL_64;
        }
        v73 = v28 < v27;
        if ( v28 < v27 )
          v73 = v27 < v30;
        if ( !v73 )
          goto LABEL_64;
        v74 = &v25[v28];
        sizea = (int *)(v27 - v28);
        if ( !strncasecmp(&v25[v28], "content-length", v27 - v28) )
        {
          header_buf_used = strtol(&v25[v30], 0u, 10);
          goto LABEL_64;
        }
        if ( strncasecmp(v74, "transfer-encoding", (size_t)sizea) )
        {
LABEL_64:
          if ( v10 > v29 )
            goto LABEL_65;
          goto LABEL_145;
        }
        v75 = strncasecmp(&v25[v30], "chunked", 7u);
        v76 = header_buf_len;
        if ( !v75 )
          v76 = 1;
        header_buf_len = v76;
        if ( v10 <= v29 )
        {
LABEL_145:
          v27 = v29;
          v28 = v29;
          v30 = 0;
          ++v29;
          goto LABEL_46;
        }
LABEL_65:
        v41 = &v25[v29 - 1];
        while ( 1 )
        {
          v43 = *(unsigned __int8 *)++v41;
          v42 = v43;
          v28 = v29;
          v44 = v43 == 10;
          if ( v43 != 10 )
            v44 = v42 == 13;
          v30 = v44;
          v29 = v36;
          if ( !v44 )
            break;
          if ( v10 == v36 )
          {
            v29 = v28 + 2;
            v30 = 0;
            v27 = v10;
            v28 = v10;
            goto LABEL_46;
          }
          ++v36;
        }
        v27 = v28;
        if ( v31 > v36 )
          goto LABEL_47;
LABEL_75:
        v7 = content_buf_used;
        v6 = sa;
        v5 = chunksize_buf_index;
        v14 = v97;
        v4 = status_codea;
LABEL_76:
        v9 = v10 - v14;
        memcpy((void *)content_length, (char *)ptr + v14, v10 - v14);
        content_buf_used = v10;
        sa = v14;
        if ( !header_buf_len )
          goto LABEL_26;
        if ( v9 > 0 )
          goto LABEL_78;
LABEL_99:
        v19 = v6;
LABEL_30:
        v22 = (int)header_buf_used > 0;
        if ( (int)header_buf_used > v19 )
          v22 = 0;
        if ( v22 )
        {
          v23 = v101;
          goto end_of_stream;
        }
      }
      else
      {
        content_buf_used = v10;
        sa = 0;
      }
    }
  }
  if ( !header_buf_len )
  {
LABEL_26:
    v19 = v6 + v9;
    v20 = v6 + v9;
    if ( (int)header_buf_used <= 0 )
    {
      if ( v5 < v19 )
      {
        if ( (int)header_buf_used < v19 )
        {
          v21 = v6 + v9;
          goto LABEL_93;
        }
LABEL_135:
        v21 = v6 + v9;
        v20 = header_buf_used;
        goto LABEL_93;
      }
    }
    else
    {
      if ( (int)header_buf_used < v19 )
      {
        v19 = header_buf_used;
        v21 = header_buf_used;
        v9 = header_buf_used - v6;
        if ( header_buf_used <= v5 )
        {
LABEL_29:
          memcpy(&header_buf[v6], (const void *)content_length, v9);
          v6 = v21;
          header_buf_len = 0;
          goto LABEL_30;
        }
        v21 = header_buf_used;
        v20 = header_buf_used;
LABEL_93:
        v53 = (char *)realloc(header_buf, v20);
        if ( !v53 )
        {
          v83 = v101;
          v82 = header_buf;
          goto LABEL_167;
        }
        v5 = v20;
        v19 = v21;
        header_buf = v53;
        goto LABEL_29;
      }
      if ( v5 < v19 )
        goto LABEL_135;
    }
    v21 = v6 + v9;
    goto LABEL_29;
  }
LABEL_78:
  v45 = header_buf;
  v46 = 0;
  while ( 2 )
  {
    if ( v7 )
      goto LABEL_85;
    header_buf = 0;
    while ( 2 )
    {
      if ( v4 )
      {
LABEL_96:
        if ( v46 >= v9 )
          goto LABEL_97;
        goto LABEL_105;
      }
      v54 = (char *)&v85 + v46 + 0x870;
      if ( *(v54 - 2052) == 13 )
      {
        if ( ++v46 >= v9 )
        {
LABEL_130:
          v7 = 0;
          header_buf = v45;
          goto LABEL_99;
        }
        v54 = (char *)&v85 + v46 + 0x870;
      }
      else if ( v9 <= v46 )
      {
        goto LABEL_130;
      }
      if ( *(v54 - 2052) == 10 )
      {
        ++v46;
        goto LABEL_96;
      }
LABEL_105:
      v55 = (int *)((char *)v4 + v9 - v46);
      v56 = *_ctype_b_loc();
      v57 = content_length + v46 - 1;
      v58 = (char *)v4 + chunked;
      do
      {
        v60 = *(unsigned __int8 *)++v57;
        v59 = v60;
        if ( (((unsigned int)v4 <= 0x1E) & (v56[v60] >> 0xC)) == 0 )
          break;
        v4 = (int *)((char *)v4 + 1);
        *v58 = v59;
        ++v46;
        *++v58 = 0;
      }
      while ( v4 != v55 );
      if ( v46 >= v9 )
        goto LABEL_97;
      v61 = content_length + v46 - 1;
      while ( 1 )
      {
        v63 = *(unsigned __int8 *)++v61;
        v62 = v63;
        v64 = v63 == 10;
        if ( v63 != 10 )
          v64 = v62 == 13;
        if ( v64 )
          break;
        if ( ++v46 == v9 )
          goto LABEL_97;
      }
      if ( v9 <= v46 )
      {
LABEL_97:
        v7 = (signed int)header_buf;
        goto LABEL_98;
      }
      v65 = *((unsigned __int8 *)&v85 + v46 + 0x6C);
      if ( v65 == 13 )
      {
        if ( ++v46 >= v9 )
          goto LABEL_97;
        v65 = *((unsigned __int8 *)&v85 + v46 + 0x6C);
      }
      if ( v65 != 10 )
        continue;
      break;
    }
    if ( !v4 )
      goto LABEL_125;
    v66 = (unsigned __int8 *)chunked;
    v7 = 0;
    v67 = (unsigned __int8 *)v4 + chunked;
    do
    {
      v69 = *v66++;
      v68 = v69;
      v70 = 16 * v7;
      if ( (unsigned int)(v69 - 0x30) > 9 )
      {
        v71 = v70 - 0x57;
        v68 |= 0x20u;
      }
      else
      {
        v71 = v70 - 0x30;
      }
      v7 = v71 + v68;
    }
    while ( v66 != v67 );
    v4 = 0;
    ++v46;
    chunksize_buf[0] = 0;
    if ( !v7 )
    {
LABEL_125:
      header_buf = v45;
      v23 = v101;
      v19 = v6;
      goto end_of_stream;
    }
LABEL_85:
    v52 = v9 - v46;
    if ( v9 - v46 >= v7 )
      v52 = v7;
    v48 = (char *)(v6 + v52);
    if ( v6 + v52 <= v5 )
    {
      v49 = v45;
      goto LABEL_83;
    }
    if ( (int)header_buf_used >= (int)v48 )
      v5 = header_buf_used;
    else
      v5 = v6 + v52;
    header_buf = (char *)(v6 + v52);
    v47 = (char *)realloc(v45, v5);
    v48 = header_buf;
    v49 = v47;
    if ( v47 )
    {
LABEL_83:
      v50 = &v49[v6];
      v6 = (int)v48;
      v45 = v49;
      v51 = (const void *)(content_length + v46);
      v46 += v52;
      memcpy(v50, v51, v52);
      v7 -= v52;
      if ( v46 >= v9 )
      {
LABEL_98:
        header_buf = v45;
        goto LABEL_99;
      }
      continue;
    }
    break;
  }
  v82 = v45;
  v83 = v101;
LABEL_167:
  free(v82);
  free(ptr);
  *v83 = -1;
  return 0;
}
