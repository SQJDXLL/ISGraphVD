void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v3; // r0
  void *v4; // r4
  unsigned int v5; // r8
  unsigned int v6; // r11
  signed int v7; // r10
  char *v8; // r9
  int v9; // r0
  signed int v10; // r5
  unsigned int v11; // r3
  void *v12; // r0
  unsigned int v13; // r3
  signed int v14; // r0
  int v15; // r6
  int v16; // r2
  signed int v17; // r1
  signed int v18; // r2
  size_t v19; // r7
  signed int v20; // r5
  int v21; // r6
  int v22; // r4
  _BOOL4 v23; // r3
  int v24; // r4
  unsigned int v25; // r11
  int *v26; // r9
  int v27; // r2
  int v28; // r1
  int v29; // r5
  int v30; // r10
  int v31; // r8
  int v32; // r4
  bool v33; // zf
  _BOOL4 v34; // r0
  const char *v35; // r7
  int v36; // r0
  int v37; // r6
  bool v38; // zf
  _BOOL4 v39; // r0
  const char *v40; // r4
  int v41; // t1
  unsigned int v42; // r2
  int v43; // r4
  int v44; // t1
  bool v45; // zf
  int v46; // r6
  signed int v47; // r4
  int v48; // r2
  int v49; // r7
  int v50; // r3
  char *v51; // r0
  const void *v52; // r1
  int v53; // r3
  const unsigned __int16 *v54; // lr
  unsigned int v55; // r0
  _BYTE *v56; // r1
  int v57; // r3
  int v58; // t1
  unsigned int v59; // r2
  int v60; // t1
  bool v61; // zf
  unsigned __int8 *v62; // r3
  unsigned __int8 *v63; // r8
  int v64; // r2
  int v65; // t1
  int v66; // r10
  int v67; // r10
  int v68; // r3
  int v69; // t1
  int v70; // r2
  bool v71; // zf
  char *v72; // r0
  _BOOL4 v73; // r0
  const char *v74; // r7
  int v75; // r0
  char *v76; // r3
  int v78[2]; // [sp+0h] [bp-8A8h] BYREF
  unsigned int bytestocopy; // [sp+Ch] [bp-89Ch]
  int content_length; // [sp+10h] [bp-898h]
  char *header_buf; // [sp+14h] [bp-894h]
  int v82; // [sp+18h] [bp-890h]
  unsigned int header_buf_used; // [sp+1Ch] [bp-88Ch]
  unsigned int content_buf_used; // [sp+20h] [bp-888h]
  int sa; // [sp+24h] [bp-884h]
  unsigned int header_buf_used_0; // [sp+28h] [bp-880h]
  unsigned int header_buf_len; // [sp+2Ch] [bp-87Ch]
  unsigned int chunksize_buf_index; // [sp+30h] [bp-878h]
  char *content_buf; // [sp+34h] [bp-874h]
  unsigned int v90; // [sp+38h] [bp-870h]
  char *v91; // [sp+3Ch] [bp-86Ch]
  int *status_codea; // [sp+40h] [bp-868h]
  char *v93; // [sp+44h] [bp-864h]
  int *v94; // [sp+48h] [bp-860h]
  int *sizea; // [sp+4Ch] [bp-85Ch]
  char *s2; // [sp+50h] [bp-858h]
  int *v97; // [sp+54h] [bp-854h]
  char chunksize_buf[32]; // [sp+5Ch] [bp-84Ch] BYREF
  char buf[2048]; // [sp+7Ch] [bp-82Ch] BYREF

  header_buf_len = s;
  v94 = status_code;
  v97 = size;
  if ( status_code )
    *status_code = -1;
  header_buf_used = (unsigned int)malloc(0x800u);
  if ( !header_buf_used )
  {
    v4 = 0;
    *v97 = -1;
    return v4;
  }
  v3 = (char *)malloc(0x800u);
  v4 = v3;
  if ( !v3 )
  {
    free((void *)header_buf_used);
    *v97 = -1;
    return v4;
  }
  v5 = 0;
  chunksize_buf[0] = 0;
  content_length = 2048;
  content_buf = (_BYTE *)&loc_800;
  v82 = -1;
  bytestocopy = (unsigned int)buf;
  v6 = 0;
  v7 = 0;
  v8 = v3;
  s2 = "content-length";
  sa = 0;
  header_buf = 0;
  header_buf_used_0 = 0;
  content_buf_used = (unsigned int)chunksize_buf;
  do
  {
    while ( 1 )
    {
      v9 = receivedata(header_buf_len, bytestocopy, 2048, 5000, 0);
      v10 = v9;
      if ( v9 <= 0 )
      {
LABEL_151:
        v4 = v8;
        v20 = v6;
        goto end_of_stream;
      }
      if ( header_buf_used_0 )
      {
        if ( !header_buf )
        {
          v19 = v9;
          goto LABEL_27;
        }
        goto LABEL_80;
      }
      v11 = v9 + sa;
      if ( v9 + sa > (unsigned int)content_buf )
      {
        chunksize_buf_index = v9 + sa;
        v12 = realloc((void *)header_buf_used, v9 + sa);
        v11 = chunksize_buf_index;
        if ( !v12 )
        {
          free((void *)header_buf_used);
          free(v8);
          v4 = (void *)header_buf_used_0;
          *v97 = -1;
          return v4;
        }
        header_buf_used = (unsigned int)v12;
        content_buf = (char *)chunksize_buf_index;
      }
      chunksize_buf_index = v11;
      memcpy((void *)(header_buf_used + sa), (const void *)bytestocopy, v10);
      v13 = chunksize_buf_index;
      v14 = chunksize_buf_index - 1;
      if ( (int)(chunksize_buf_index - 1) > 0 )
        break;
LABEL_23:
      sa = chunksize_buf_index;
    }
    v15 = 0;
    while ( 1 )
    {
LABEL_14:
      v16 = *(unsigned __int8 *)(header_buf_used + v15);
      v17 = v15 + 1;
      if ( v16 != 13 )
      {
LABEL_15:
        if ( v16 == 10 )
        {
          v15 += 2;
          if ( *(_BYTE *)(header_buf_used + v17) == 10 )
            break;
          goto LABEL_22;
        }
        goto LABEL_16;
      }
      while ( 1 )
      {
        v18 = v15 + 2;
        if ( *(_BYTE *)(header_buf_used + v17) != 10 )
        {
          if ( v14 <= v18 )
            goto LABEL_23;
          v15 += 2;
          goto LABEL_14;
        }
        v17 = v15 + 3;
        if ( (int)chunksize_buf_index > v18 && *(_BYTE *)(header_buf_used + v18) == 13 )
          break;
LABEL_16:
        if ( v14 <= v17 )
          goto LABEL_23;
        v15 = v17;
        v16 = *(unsigned __int8 *)(header_buf_used + v17++);
        if ( v16 != 13 )
          goto LABEL_15;
      }
      v15 += 4;
      if ( (int)chunksize_buf_index > v17 && *(_BYTE *)(header_buf_used + v17) == 10 )
        break;
LABEL_22:
      if ( v14 <= v15 )
        goto LABEL_23;
    }
    v24 = 0;
    status_codea = (int *)"transfer-encoding";
    v93 = "chunked";
    header_buf_used_0 = v6;
    chunksize_buf_index = v7;
    v90 = v5;
    v91 = v8;
    v25 = header_buf_used;
    v26 = v94;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = v13;
    v31 = v15 - 1;
    sa = v15;
    while ( 1 )
    {
LABEL_47:
      v34 = v28 > 0;
      if ( v27 > v28 )
        v34 = 0;
      v33 = !v34;
      v35 = (const char *)(v25 + v29);
      v36 = *(unsigned __int8 *)(v25 + v29);
      v37 = v29 + 1;
      if ( v33 )
        break;
      if ( v36 == 58 )
      {
        v32 = v29;
        do
        {
          v69 = *(unsigned __int8 *)++v35;
          v68 = v69;
          v70 = v32;
          v71 = v69 == 9;
          if ( v69 != 9 )
            v71 = v68 == 32;
          ++v32;
          if ( !v71 )
          {
            v24 = v70 + 1;
            v27 = v29;
            v29 = v24;
            goto LABEL_46;
          }
        }
        while ( v31 > v32 );
        v24 = v32 + 1;
        v27 = v29;
        v29 = v24;
        goto LABEL_46;
      }
      v33 = v36 == 10;
      if ( v36 != 10 )
        v33 = v36 == 13;
      if ( v33 )
        goto LABEL_64;
LABEL_45:
      ++v29;
LABEL_46:
      if ( v31 <= v29 )
        goto LABEL_75;
    }
    v38 = v36 == 10;
    if ( v36 != 10 )
      v38 = v36 == 13;
    if ( !v38 )
      goto LABEL_45;
    v39 = v28 == 0;
    if ( !v26 )
      v39 = 0;
    if ( v39 )
    {
      if ( v29 > 0 )
      {
        v40 = (const char *)v25;
        do
        {
          while ( 1 )
          {
            v41 = *(unsigned __int8 *)v40++;
            if ( v41 == 32 )
              break;
            if ( v35 == v40 )
              goto LABEL_64;
          }
          if ( *v26 >= 0 )
            break;
          *v26 = strtol(v40, 0u, 10);
        }
        while ( v35 != v40 );
      }
      goto LABEL_64;
    }
    v73 = v27 > v28;
    if ( v27 >= v24 )
      v73 = 0;
    if ( !v73 )
      goto LABEL_64;
    v74 = (const char *)(v25 + v28);
    sizea = (int *)(v27 - v28);
    if ( !strncasecmp((const char *)(v25 + v28), s2, v27 - v28) )
    {
      v82 = strtol((const char *)(v25 + v24), 0u, 10);
LABEL_64:
      if ( v30 > v29 )
        goto LABEL_65;
      goto LABEL_145;
    }
    if ( strncasecmp(v74, (const char *)status_codea, (size_t)sizea) )
      goto LABEL_64;
    v75 = strncasecmp((const char *)(v25 + v24), v93, 7u);
    v76 = header_buf;
    if ( !v75 )
      v76 = (_BYTE *)(getHTTPResponse + 1);
    header_buf = v76;
    if ( v30 <= v29 )
    {
LABEL_145:
      v27 = v29;
      v28 = v29;
      v24 = 0;
      ++v29;
      goto LABEL_46;
    }
LABEL_65:
    v42 = v25 + v29 - 1;
    while ( 1 )
    {
      v44 = *(unsigned __int8 *)++v42;
      v43 = v44;
      v28 = v29;
      v45 = v44 == 10;
      if ( v44 != 10 )
        v45 = v43 == 13;
      v24 = v45;
      v29 = v37;
      if ( !v45 )
        break;
      if ( v30 == v37 )
      {
        v29 = v28 + 2;
        v24 = 0;
        v27 = v30;
        v28 = v30;
        goto LABEL_46;
      }
      ++v37;
    }
    v27 = v28;
    if ( v31 > v37 )
      goto LABEL_47;
LABEL_75:
    v46 = sa;
    v10 = v30 - sa;
    sa = v30;
    v6 = header_buf_used_0;
    v7 = chunksize_buf_index;
    v5 = v90;
    v8 = v91;
    memcpy((void *)bytestocopy, (const void *)(header_buf_used + v46), v10);
    v19 = v10;
    if ( !header_buf )
    {
      header_buf_used_0 = v46;
LABEL_27:
      v20 = v6 + v10;
      v21 = v20;
      if ( v82 <= 0 )
      {
        if ( content_length < (unsigned int)v20 )
        {
          if ( v82 < v20 )
          {
            v22 = v20;
            goto LABEL_132;
          }
LABEL_136:
          v22 = v20;
          v21 = v82;
          goto LABEL_132;
        }
      }
      else
      {
        if ( v82 < v20 )
        {
          v20 = v82;
          v22 = v82;
          v19 = v82 - v6;
          if ( v82 <= (unsigned int)content_length )
            goto LABEL_30;
          v22 = v82;
          v21 = v82;
LABEL_132:
          v72 = (char *)realloc(v8, v21);
          if ( !v72 )
          {
            free(v8);
            free((void *)header_buf_used);
            v4 = 0;
            *v97 = -1;
            return v4;
          }
          v8 = v72;
          v20 = v22;
          content_length = v21;
LABEL_30:
          memcpy(&v8[v6], (const void *)bytestocopy, v19);
          v6 = v22;
          header_buf = 0;
          goto LABEL_31;
        }
        if ( content_length < (unsigned int)v20 )
          goto LABEL_136;
      }
      v22 = v20;
      goto LABEL_30;
    }
    if ( v10 <= 0 )
    {
      v20 = v6;
      header_buf_used_0 = v46;
      goto LABEL_31;
    }
    header_buf_used_0 = v46;
LABEL_80:
    v47 = 0;
    while ( 2 )
    {
      if ( !v7 )
      {
        if ( v5 )
        {
LABEL_94:
          if ( v47 >= v10 )
            goto LABEL_127;
        }
        else
        {
          v53 = *((unsigned __int8 *)&v78[0x1F] + v47);
          if ( v53 != 13 )
          {
            if ( v53 != 10 )
              goto LABEL_94;
LABEL_148:
            ++v47;
            goto LABEL_94;
          }
          if ( ++v47 >= v10 )
            goto LABEL_127;
          if ( *((_BYTE *)&v78[0x1F] + v47) == 10 )
            goto LABEL_148;
        }
        v54 = *_ctype_b_loc();
        v55 = bytestocopy + v47 - 1;
        v56 = (_BYTE *)(content_buf_used + v5);
        while ( 1 )
        {
          v58 = *(unsigned __int8 *)++v55;
          v57 = v58;
          if ( ((v5 <= 0x1E) & (v54[v58] >> 0xC)) == 0 )
            break;
          ++v47;
          *v56 = v57;
          ++v5;
          *++v56 = 0;
          if ( v47 >= v10 )
            goto LABEL_127;
        }
        if ( v47 >= v10 )
          goto LABEL_127;
        v59 = bytestocopy + v47;
        while ( 1 )
        {
          v61 = v57 == 10;
          if ( v57 != 10 )
            v61 = v57 == 13;
          if ( v61 )
            break;
          if ( ++v47 == v10 )
            goto LABEL_127;
          v60 = *(unsigned __int8 *)++v59;
          v57 = v60;
        }
        if ( v47 >= v10 )
        {
LABEL_127:
          v20 = v6;
          header_buf = (_BYTE *)(getHTTPResponse + 1);
          goto LABEL_31;
        }
        if ( v57 == 13 )
        {
          if ( ++v47 >= v10 )
            goto LABEL_127;
          v57 = *((unsigned __int8 *)&v78[0x1F] + v47);
        }
        if ( v57 != 10 )
        {
          v49 = v6;
LABEL_89:
          v6 = v49;
          continue;
        }
        if ( !v5 )
          goto LABEL_151;
        v62 = (unsigned __int8 *)content_buf_used;
        v7 = 0;
        v63 = (unsigned __int8 *)(content_buf_used + v5);
        do
        {
          v65 = *v62++;
          v64 = v65;
          v66 = 16 * v7;
          if ( (unsigned int)(v65 - 0x30) > 9 )
          {
            v64 |= 0x20u;
            v67 = v66 - 0x57;
          }
          else
          {
            v67 = v66 - 0x30;
          }
          v7 = v64 + v67;
        }
        while ( v63 != v62 );
        ++v47;
        chunksize_buf[0] = 0;
        if ( !v7 )
          goto LABEL_151;
        v5 = 0;
      }
      break;
    }
    v48 = v10 - v47;
    if ( v10 - v47 >= v7 )
      v48 = v7;
    v49 = v48 + v6;
    if ( v48 + v6 > content_length )
    {
      v50 = v82;
      if ( v82 < v49 )
        v50 = v48 + v6;
      header_buf = (char *)v48;
      content_length = v50;
      v51 = (char *)realloc(v8, v50);
      v48 = (int)header_buf;
      if ( !v51 )
      {
        bytestocopy = 0;
        free(v8);
        free((void *)header_buf_used);
        v4 = (void *)bytestocopy;
        *v97 = -1;
        return v4;
      }
      v8 = v51;
    }
    v52 = (const void *)(bytestocopy + v47);
    v47 += v48;
    v7 -= v48;
    memcpy(&v8[v6], v52, v48);
    if ( v47 < v10 )
      goto LABEL_89;
    v6 = v49;
    v20 = v49;
    header_buf = (_BYTE *)(getHTTPResponse + 1);
LABEL_31:
    v23 = v82 > 0;
    if ( v82 > v20 )
      v23 = 0;
  }
  while ( !v23 );
  v4 = v8;
end_of_stream:
  free((void *)header_buf_used);
  *v97 = v20;
  if ( !v6 )
  {
    free(v4);
    return 0;
  }
  return v4;
}
