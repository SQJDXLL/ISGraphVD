void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v5; // r0
  char *v6; // r6
  unsigned int v7; // r11
  char *v8; // r0
  int v9; // r3
  unsigned int v10; // lr
  int v11; // r10
  unsigned int v12; // r7
  int v13; // r4
  int v14; // r0
  signed int v15; // r8
  int v16; // r7
  char *v17; // r5
  int v18; // r1
  int v19; // r2
  int v20; // r2
  int *v21; // r3
  char *v22; // r5
  int v23; // r7
  int v24; // r12
  int v25; // r1
  int v26; // r0
  int v27; // r11
  int v28; // r2
  int v29; // r2
  int v30; // r1
  bool v31; // zf
  bool v32; // zf
  bool v33; // cc
  const char *v34; // r5
  int v35; // r7
  int v36; // r0
  int v37; // r0
  bool v38; // zf
  const char *v39; // r5
  int v40; // r0
  int v41; // r0
  int v42; // r0
  int v43; // r11
  int v44; // r7
  signed int v45; // r12
  int v46; // r1
  int v47; // r3
  int v48; // r9
  int v49; // r2
  int v50; // r2
  int v51; // r1
  bool v52; // zf
  bool v53; // zf
  bool v54; // cc
  size_t v55; // r7
  int v56; // r0
  int v57; // r0
  bool v58; // zf
  signed int v59; // r5
  const unsigned __int16 *v60; // r0
  int v61; // r1
  int v62; // r0
  int v63; // r1
  bool v64; // zf
  char *v65; // r0
  int v66; // r1
  int v67; // t1
  int v68; // r2
  unsigned int v69; // r0
  unsigned int v70; // r2
  size_t v71; // r1
  char *v72; // r3
  unsigned int v73; // r1
  int v74; // r11
  size_t v75; // r9
  size_t v76; // r1
  char *v77; // r0
  char *v78; // r5
  char *v80; // r0
  char *v81; // r0
  int v82; // [sp+Ch] [bp-884h]
  size_t v83; // [sp+10h] [bp-880h]
  size_t v84; // [sp+10h] [bp-880h]
  char *s1; // [sp+14h] [bp-87Ch]
  char *s1a; // [sp+14h] [bp-87Ch]
  size_t s1b; // [sp+14h] [bp-87Ch]
  unsigned int v88; // [sp+18h] [bp-878h]
  int v89; // [sp+1Ch] [bp-874h]
  int v90; // [sp+1Ch] [bp-874h]
  unsigned int v91; // [sp+24h] [bp-86Ch]
  int *v92; // [sp+28h] [bp-868h]
  int v93; // [sp+2Ch] [bp-864h]
  unsigned int v94; // [sp+30h] [bp-860h]
  unsigned int v95; // [sp+30h] [bp-860h]
  unsigned int v96; // [sp+38h] [bp-858h]
  int v97; // [sp+3Ch] [bp-854h]
  char *ptr; // [sp+40h] [bp-850h]
  unsigned int v99; // [sp+44h] [bp-84Ch]
  char v101[32]; // [sp+4Ch] [bp-844h] BYREF
  char src[2084]; // [sp+6Ch] [bp-824h] BYREF

  if ( status_code )
    *status_code = -1;
  v5 = (char *)malloc(0x800u);
  if ( !v5 )
    goto LABEL_192;
  v6 = v5;
  v7 = 2048;
  v8 = (char *)malloc(0x800u);
  if ( !v8 )
  {
    free(v6);
LABEL_192:
    *size = -1;
    return 0;
  }
  ptr = v8;
  v92 = size;
  v9 = -1;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v93 = 0;
  v101[0] = 0;
  v91 = 2048;
  v99 = 0;
  do
  {
    v97 = v9;
    v96 = v12;
    v14 = receivedata(s, src, 2048, 5000, 0);
    if ( v14 < 1 )
      break;
    v15 = v14;
    v16 = v11;
    v17 = v6;
    while ( 1 )
    {
      if ( v13 )
      {
        v11 = v16;
        v6 = v17;
        goto LABEL_125;
      }
      v11 = v15 + v16;
      if ( v15 + v16 <= v7 )
      {
        v6 = v17;
      }
      else
      {
        v6 = (char *)realloc(v17, v15 + v16);
        v7 = v15 + v16;
        if ( !v6 )
        {
          free(v17);
          v80 = ptr;
LABEL_194:
          free(v80);
          *v92 = -1;
          return 0;
        }
      }
      memcpy(&v6[v16], src, v15);
      if ( v11 >= 2 )
        break;
LABEL_9:
      v13 = 0;
      v15 = receivedata(s, src, 2048, 5000, 0);
      v16 = v11;
      v17 = v6;
      if ( v15 <= 0 )
        goto end_of_stream;
    }
    v18 = 0;
    do
    {
      v19 = (unsigned __int8)v6[v18];
      if ( v19 == 10 )
      {
        v20 = v18 + 1;
        v13 = 0;
        if ( v6[v18 + 1] == 10 )
          v13 = v18 + 2;
      }
      else
      {
        if ( v19 != 13 )
        {
          v20 = v18;
LABEL_30:
          v13 = 0;
          goto LABEL_31;
        }
        v20 = v18 + 1;
        v13 = 0;
        if ( v6[v18 + 1] == 10 )
        {
          v20 = v18 + 2;
          if ( v18 + 2 >= v11 )
            goto LABEL_30;
          v13 = 0;
          if ( v6[v20] == 13 )
          {
            v20 = v18 + 3;
            if ( v18 + 3 >= v11 )
              goto LABEL_30;
            v13 = 0;
            if ( v6[v20] == 10 )
              v13 = v18 + 4;
          }
        }
      }
LABEL_31:
      v18 = v20 + 1;
    }
    while ( v20 + 1 < v11 - 1 && !v13 );
    if ( !v13 )
      goto LABEL_9;
    v89 = s;
    v94 = v7;
    if ( v13 >= 2 )
    {
      v21 = status_code;
      if ( status_code )
      {
        v22 = (char *)(v15 + v16);
        v23 = v13 - 1;
        v24 = 0;
        v25 = 0;
        v26 = 0;
        v27 = 0;
        s1 = v22;
        while ( 1 )
        {
          v28 = (unsigned __int8)v6[v27];
          if ( v26 >= 1 && v25 <= v26 && v28 == 58 )
          {
            v29 = v27;
            if ( v27 < v23 )
            {
              while ( 1 )
              {
                v30 = (unsigned __int8)v6[v29 + 1];
                v31 = v30 == 32;
                if ( v30 != 32 )
                  v31 = v30 == 9;
                if ( !v31 )
                  break;
                if ( v13 - 1 == ++v29 )
                {
                  v29 = v23;
                  break;
                }
              }
            }
            v24 = v29 + 1;
            goto LABEL_39;
          }
          v32 = v28 == 13;
          if ( v28 != 13 )
            v32 = v28 == 10;
          if ( !v32 )
          {
            v29 = v27;
            goto LABEL_40;
          }
          if ( !v26 )
            break;
          v33 = v25 <= v26;
          if ( v25 > v26 )
            v33 = v24 <= v25;
          if ( !v33 )
          {
            v39 = &v6[v26];
            v82 = v24;
            v83 = v25 - v26;
            if ( !strncasecmp(&v6[v26], "content-length", v25 - v26) )
            {
              v40 = strtol(&v6[v82], 0u, 10);
              v21 = status_code;
              v97 = v40;
            }
            else if ( !strncasecmp(v39, "transfer-encoding", v83) )
            {
              v41 = strncasecmp(&v6[v82], "chunked", 7u);
              v21 = status_code;
              v31 = v41 == 0;
              v42 = v93;
              if ( v31 )
                v42 = 1;
              v93 = v42;
            }
            else
            {
              v21 = status_code;
            }
LABEL_69:
            v22 = s1;
            v24 = 0;
            if ( v27 < v11 )
            {
              while ( 1 )
              {
LABEL_70:
                v37 = (unsigned __int8)v6[v27];
                v38 = v37 == 13;
                if ( v37 != 13 )
                  v38 = v37 == 10;
                if ( !v38 )
                  break;
                if ( v22 == (char *)++v27 )
                {
                  v29 = v11;
                  v26 = v11;
                  v25 = v11;
                  goto LABEL_40;
                }
              }
            }
            goto LABEL_76;
          }
          v24 = 0;
          if ( v27 < v11 )
            goto LABEL_70;
LABEL_76:
          v29 = v27;
          v26 = v27;
LABEL_39:
          v25 = v27;
LABEL_40:
          v27 = v29 + 1;
          if ( v29 + 1 >= v23 )
            goto LABEL_124;
        }
        v34 = v6 + 1;
        v35 = v27;
        if ( v27 >= 1 )
        {
          do
          {
            if ( *(v34 - 1) == 32 )
            {
              if ( *v21 >= 0 )
                break;
              v36 = strtol(v34, 0u, 10);
              v21 = status_code;
              *status_code = v36;
            }
            ++v34;
            --v35;
          }
          while ( v35 );
        }
        v23 = v13 - 1;
        goto LABEL_69;
      }
      v43 = v15 + v16;
      v44 = v13 - 1;
      v45 = 0;
      v46 = 0;
      v47 = 0;
      v48 = 0;
      while ( 2 )
      {
        v49 = (unsigned __int8)v6[v48];
        if ( v47 >= 1 && v46 <= v47 && v49 == 58 )
        {
          v50 = v48;
          if ( v48 < v44 )
          {
            v50 = v48;
            while ( 1 )
            {
              v51 = (unsigned __int8)v6[v50 + 1];
              v52 = v51 == 32;
              if ( v51 != 32 )
                v52 = v51 == 9;
              if ( !v52 )
                break;
              if ( v13 - 1 == ++v50 )
              {
                v50 = v44;
                break;
              }
            }
          }
          v45 = v50 + 1;
          goto LABEL_86;
        }
        v53 = v49 == 13;
        if ( v49 != 13 )
          v53 = v49 == 10;
        if ( v53 )
        {
          v54 = v46 <= v47;
          if ( v46 > v47 )
            v54 = v45 <= v46;
          if ( v54 )
          {
            v45 = 0;
            if ( v48 < v11 )
              goto LABEL_117;
          }
          else
          {
            v84 = v45;
            s1a = &v6[v47];
            v55 = v46 - v47;
            if ( !strncasecmp(&v6[v47], "content-length", v46 - v47) )
            {
              v97 = strtol(&v6[v84], 0u, 10);
              v44 = v13 - 1;
              v45 = 0;
              if ( v48 < v11 )
                goto LABEL_117;
            }
            else
            {
              if ( !strncasecmp(s1a, "transfer-encoding", v55) )
              {
                v31 = strncasecmp(&v6[v84], "chunked", 7u) == 0;
                v56 = v93;
                if ( v31 )
                  v56 = 1;
                v93 = v56;
              }
              v44 = v13 - 1;
              v45 = 0;
              if ( v48 < v11 )
              {
                while ( 1 )
                {
LABEL_117:
                  v57 = (unsigned __int8)v6[v48];
                  v58 = v57 == 13;
                  if ( v57 != 13 )
                    v58 = v57 == 10;
                  if ( !v58 )
                    break;
                  if ( v43 == ++v48 )
                  {
                    v50 = v11;
                    v47 = v11;
                    v46 = v11;
                    goto LABEL_87;
                  }
                }
              }
            }
          }
          v50 = v48;
          v47 = v48;
LABEL_86:
          v46 = v48;
        }
        else
        {
          v50 = v48;
        }
LABEL_87:
        v48 = v50 + 1;
        if ( v50 + 1 >= v44 )
          break;
        continue;
      }
    }
LABEL_124:
    v15 = v11 - v13;
    memcpy(src, &v6[v13], v11 - v13);
    s = v89;
    v7 = v94;
LABEL_125:
    v12 = v96;
    v95 = v7;
    if ( v93 )
    {
      if ( v15 >= 1 )
      {
        v59 = 0;
        v90 = s;
        while ( 2 )
        {
          v88 = v99;
          while ( !v10 )
          {
            if ( !v12 )
            {
              if ( src[v59] == 13 )
                ++v59;
              if ( v59 < v15 && src[v59] == 10 )
                ++v59;
            }
            if ( v59 < v15 )
            {
              v60 = *_ctype_b_loc();
              while ( v12 <= 0x1E )
              {
                v61 = (unsigned __int8)src[v59];
                if ( (v60[v61] & 0x1000) == 0 )
                  break;
                v10 = 0;
                ++v59;
                v101[v12] = v61;
                v101[++v12] = 0;
                if ( v15 == v59 )
                  goto LABEL_186;
              }
            }
            if ( v59 < v15 )
            {
              v62 = -v59;
              while ( 1 )
              {
                v63 = (unsigned __int8)src[-v62];
                v64 = v63 == 10;
                if ( v63 != 10 )
                  v64 = v63 == 13;
                if ( v64 )
                  break;
                if ( -v15 == --v62 )
                  goto LABEL_185;
              }
              v59 = (v63 == 0xD) - v62;
            }
            if ( v59 >= v15 )
            {
LABEL_185:
              v10 = 0;
LABEL_186:
              s = v90;
              goto LABEL_187;
            }
            v10 = 0;
            if ( src[v59] == 10 )
            {
              if ( !v12 )
              {
                v101[0] = 0;
                goto end_of_stream;
              }
              v65 = v101;
              v10 = 0;
              do
              {
                v67 = (unsigned __int8)*v65++;
                v66 = v67;
                v68 = 16 * v10 - 87;
                if ( (unsigned int)(v67 - 0x30) < 0xA )
                  v68 = 16 * v10 - 48;
                else
                  v66 |= 0x20u;
                --v12;
                v10 = v68 + v66;
              }
              while ( v12 );
              v12 = 0;
              v101[0] = 0;
              if ( !v10 )
                goto end_of_stream;
              ++v59;
              break;
            }
          }
          v69 = v15 - v59;
          if ( v10 < v15 - v59 )
            v69 = v10;
          s1b = v69;
          v70 = v69 + v99;
          v99 = v70;
          if ( v70 <= v91 )
          {
            v72 = ptr;
          }
          else
          {
            v71 = v97;
            if ( v97 < v70 )
              v71 = v70;
            if ( v97 < 0 )
              v71 = v70;
            v91 = v71;
            v72 = (char *)realloc(ptr, v71);
            if ( !v72 )
            {
              v81 = ptr;
              goto LABEL_196;
            }
          }
          ptr = v72;
          memcpy(&v72[v88], &src[v59], s1b);
          v59 += s1b;
          s = v90;
          v10 -= s1b;
          if ( v59 < v15 )
            continue;
          break;
        }
      }
    }
    else
    {
      v73 = v99;
      v74 = s;
      v75 = v15;
      if ( v15 + v99 > v97 )
        v75 = v97 - v99;
      if ( v97 <= 0 )
        v75 = v15;
      if ( v75 + v99 <= v91 )
      {
        v78 = ptr;
      }
      else
      {
        v76 = v97;
        if ( v97 < v75 + v99 )
          v76 = v75 + v99;
        if ( v97 < 0 )
          v76 = v75 + v99;
        v91 = v76;
        v77 = (char *)realloc(ptr, v76);
        v73 = v99;
        v78 = v77;
        if ( !v77 )
        {
          v81 = ptr;
LABEL_196:
          free(v81);
          v80 = v6;
          goto LABEL_194;
        }
      }
      memcpy(&v78[v73], src, v75);
      v99 += v75;
      v12 = v96;
      ptr = v78;
      s = v74;
    }
LABEL_187:
    v9 = v97;
    v7 = v95;
  }
  while ( v97 < 1 || v99 < v97 );
end_of_stream:
  free(v6);
  *v92 = v99;
  if ( v99 )
    return ptr;
  free(ptr);
  return 0;
}
