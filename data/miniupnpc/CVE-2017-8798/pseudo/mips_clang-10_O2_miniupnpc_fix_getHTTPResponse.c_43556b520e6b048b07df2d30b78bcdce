char *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // $v0
  char *v5; // $s1
  unsigned int v6; // $s6
  char *v7; // $v0
  char *v8; // $s7
  unsigned int v9; // $v0
  unsigned int v10; // $v1
  int v11; // $a3
  unsigned int v12; // $s2
  int v13; // $s3
  int v14; // $s5
  int v15; // $v0
  signed int v16; // $s0
  char *v17; // $v0
  _BOOL4 v18; // $a0
  int v19; // $fp
  int v20; // $v1
  int v21; // $a0
  int v22; // $a0
  bool v23; // dc
  unsigned int v24; // $a1
  int v25; // $s0
  int v26; // $v1
  int v27; // $v0
  int v28; // $s7
  int v29; // $a0
  int v30; // $a0
  int v31; // $v1
  const char *v32; // $s0
  int v33; // $s5
  int v34; // $v0
  int v35; // $v1
  size_t v36; // $s3
  int v37; // $v0
  int v38; // $at
  int v39; // $v0
  signed int v40; // $s5
  const unsigned __int16 **v41; // $v0
  const unsigned __int16 *v42; // $v0
  int v43; // $v1
  char *v44; // $at
  signed int v45; // $v1
  char *v46; // $v0
  int v47; // $a0
  char *v48; // $a1
  unsigned int v49; // $s7
  int v50; // $at
  int v51; // $v1
  int v52; // $at
  unsigned int v53; // $v0
  size_t v54; // $fp
  size_t v55; // $a1
  char *v56; // $v0
  void *v57; // $a0
  unsigned int v58; // $a2
  signed int v59; // $v1
  size_t v60; // $a1
  char *v61; // $v0
  char *v62; // $fp
  char *v64; // [sp+18h] [-868h]
  char *v65; // [sp+20h] [-860h]
  const char *v66; // [sp+24h] [-85Ch]
  int *v67; // [sp+30h] [-850h]
  int v68; // [sp+34h] [-84Ch]
  int v69; // [sp+38h] [-848h]
  int v70; // [sp+3Ch] [-844h]
  int v71; // [sp+40h] [-840h]
  unsigned int v72; // [sp+44h] [-83Ch]
  unsigned int v73; // [sp+48h] [-838h]
  unsigned int v74; // [sp+48h] [-838h]
  char *v76; // [sp+50h] [-830h]
  int v77; // [sp+54h] [-82Ch]
  unsigned int v78; // [sp+54h] [-82Ch]
  int v80; // [sp+5Ch] [-824h]
  int v81; // [sp+5Ch] [-824h]
  char v82[32]; // [sp+60h] [-820h] BYREF
  char v83[2048]; // [sp+80h] [-800h] BYREF

  if ( status_code )
    *status_code = -1;
  v4 = (char *)malloc(0x800u);
  if ( v4 )
  {
    v5 = v4;
    v6 = 2048;
    v7 = (char *)malloc(0x800u);
    if ( v7 )
    {
      v8 = v7;
      v67 = size;
      v68 = 0;
      v82[0] = 0;
      v9 = -1;
      v10 = 0;
      v11 = 0;
      v70 = 2048;
      v72 = 0;
      v12 = 0;
      v13 = 0;
LABEL_6:
      v73 = v10;
      v71 = v9;
      while ( 1 )
      {
        v14 = v11;
        v15 = receivedata(s, v83, 2048, 5000);
        if ( v15 <= 0 )
          break;
        v16 = v15;
        if ( v13 )
        {
          v24 = v70;
          v10 = v73;
          v11 = v14;
LABEL_82:
          v81 = v11;
          if ( v68 )
          {
            if ( v16 > 0 )
            {
              v40 = 0;
              while ( 2 )
              {
                while ( v10 )
                {
                  v78 = v72;
                  v74 = v10;
                  v53 = v70;
LABEL_117:
                  v54 = v16 - v40;
                  if ( v74 < v16 - v40 )
                    v54 = v74;
                  v72 = v54 + v78;
                  if ( v53 < v54 + v78 )
                  {
                    v55 = v71;
                    if ( v71 < v54 + v78 )
                      v55 = v54 + v78;
                    if ( v71 < 0 )
                      v55 = v54 + v78;
                    v70 = v55;
                    v56 = (char *)realloc(v8, v55);
                    v57 = v8;
                    v8 = v56;
                    if ( !v56 )
                    {
                      free(v57);
                      free(v5);
                      *v67 = -1;
                      return 0;
                    }
                  }
                  memcpy(&v8[v78], &v83[v40], v54);
                  v10 = v74 - v54;
                  v40 += v54;
                  v11 = v81;
                  if ( v40 >= v16 )
                    goto LABEL_138;
                }
                if ( !v12 )
                {
                  v40 += v83[v40] == 0xD;
                  if ( v40 < v16 )
                    v40 += v83[v40] == 0xA;
                }
                if ( v40 >= v16 )
                {
                  v45 = v40;
                }
                else
                {
                  v41 = _ctype_b_loc();
                  v11 = v81;
                  v42 = *v41;
                  while ( 1 )
                  {
                    if ( v12 >= 0x1F )
                    {
                      v45 = v40;
                      goto LABEL_99;
                    }
                    v43 = v83[v40];
                    if ( (v42[v43] & 0x10) == 0 )
                      break;
                    v44 = &v82[v12];
                    v44[1] = 0;
                    *v44 = v43;
                    ++v40;
                    ++v12;
                    if ( v16 == v40 )
                    {
                      v45 = v16;
                      goto LABEL_99;
                    }
                  }
                  v45 = v40;
                }
LABEL_99:
                v46 = v82;
                while ( v45 < v16 )
                {
                  v47 = (unsigned __int8)v83[v45++];
                  if ( v47 == 13 || v47 == 10 )
                  {
                    v40 = v45 - 1;
                    if ( v47 == 0xD )
                      v40 = v45;
                    if ( v40 >= v16 )
                      goto LABEL_137;
                    goto LABEL_108;
                  }
                }
                v40 = v45;
                if ( v45 >= v16 )
                {
LABEL_137:
                  v10 = 0;
                  goto LABEL_138;
                }
LABEL_108:
                v10 = 0;
                if ( v83[v40] != 10 )
                  continue;
                break;
              }
              if ( v12 )
              {
                v48 = v8;
                v49 = 0;
                do
                {
                  v50 = *v46;
                  v51 = (v50 | 0x20) - 87;
                  v52 = v50 - 48;
                  if ( (unsigned __int8)v52 < 0xAu )
                    v51 = v52;
                  v49 = v51 + 16 * v49;
                  --v12;
                  ++v46;
                }
                while ( v12 );
                v82[0] = 0;
                v53 = v70;
                if ( v49 )
                {
                  v78 = v72;
                  v74 = v49;
                  v12 = 0;
                  ++v40;
                  v8 = v48;
                  goto LABEL_117;
                }
                v8 = v48;
              }
              else
              {
                v82[0] = 0;
              }
              break;
            }
LABEL_138:
            v9 = v71;
            if ( v71 <= 0 )
              goto LABEL_6;
          }
          else
          {
            v58 = v72;
            v59 = v16;
            if ( v71 < v16 + v72 )
              v59 = v71 - v72;
            if ( v71 >= 1 )
              v16 = v59;
            if ( v24 >= v16 + v72 )
            {
              v62 = v8;
            }
            else
            {
              v60 = v71;
              if ( v71 < v16 + v72 )
                v60 = v16 + v72;
              if ( v71 < 0 )
                v60 = v16 + v72;
              v70 = v60;
              v61 = (char *)realloc(v8, v60);
              v58 = v72;
              v62 = v61;
              if ( !v61 )
              {
                free(v8);
                free(v5);
                *v67 = -1;
                return 0;
              }
            }
            memcpy(&v62[v58], v83, v16);
            v72 += v16;
            v11 = v81;
            v10 = v73;
            v9 = v71;
            v8 = v62;
            if ( v71 <= 0 )
              goto LABEL_6;
          }
          if ( v72 < v9 )
            goto LABEL_6;
          break;
        }
        v80 = v15 + v14;
        if ( v6 >= v15 + v14 )
        {
          v17 = v5;
        }
        else
        {
          v17 = (char *)realloc(v5, v15 + v14);
          v6 = v80;
          if ( !v17 )
          {
            free(v5);
            free(v8);
            *v67 = -1;
            return 0;
          }
        }
        v5 = v17;
        memcpy(&v17[v14], v83, v16);
        v11 = v80;
        v18 = 1;
        v13 = 0;
        v19 = 0;
        if ( v80 >= 2 )
        {
          v20 = 0;
          do
          {
            v21 = (unsigned __int8)v5[v20];
            if ( v21 == 10 )
            {
              v22 = v20 + 1;
              v19 = v20 + 2;
              if ( v5[v20 + 1] != 0xA )
                v19 = 0;
            }
            else if ( v21 == 13 )
            {
              v22 = v20 + 1;
              v19 = 0;
              if ( v5[v20 + 1] == 10 )
              {
                v22 = v20 + 2;
                if ( v20 + 2 >= v80 )
                {
                  v19 = 0;
                }
                else
                {
                  v19 = 0;
                  if ( v5[v22] == 13 )
                  {
                    v22 = v20 + 3;
                    if ( v20 + 3 >= v80 )
                    {
                      v19 = 0;
                    }
                    else
                    {
                      v19 = v20 + 4;
                      if ( v5[v22] != 0xA )
                        v19 = 0;
                    }
                  }
                }
              }
            }
            else
            {
              v22 = v20;
              v19 = 0;
            }
            v20 = v22 + 1;
            v23 = v22 + 1 >= v80 - 1;
            v18 = v19 == 0;
          }
          while ( !v23 && !v19 );
        }
        if ( !v18 )
        {
          v64 = v8;
          if ( v19 >= 2 )
          {
            v77 = v19 - 1;
            v69 = v16 + v14;
            v66 = v5 + 1;
            v25 = 0;
            v26 = 0;
            v27 = 0;
            v28 = 0;
            v76 = v5;
            do
            {
              v30 = (unsigned __int8)v5[v28];
              if ( v30 == 58 && v27 > 0 && v27 >= v26 )
              {
                v25 = v28 + 1;
                if ( v28 >= v77 )
                {
                  v29 = v28;
                  v26 = v28;
                }
                else
                {
                  v25 = v28 + 1;
                  do
                  {
                    v31 = (unsigned __int8)v5[v25];
                    if ( v31 != 32 && v31 != 9 )
                    {
                      v29 = v25 - 1;
                      v26 = v28;
                      goto LABEL_38;
                    }
                    ++v25;
                  }
                  while ( v19 != v25 );
                  v29 = v19 - 1;
                  v26 = v28;
                  v25 = v19;
                }
              }
              else if ( v30 == 13 || v30 == 10 )
              {
                if ( !status_code || v27 )
                {
                  if ( v27 >= v26 )
                  {
                    v35 = v69;
                  }
                  else if ( v26 >= v25 )
                  {
                    v35 = v69;
                  }
                  else
                  {
                    v36 = v26 - v27;
                    v65 = &v5[v27];
                    if ( strncasecmp(&v5[v27], "content-length", v26 - v27) )
                    {
                      if ( strncasecmp(v65, "transfer-encoding", v36) )
                      {
                        v11 = v80;
                        v35 = v69;
                      }
                      else
                      {
                        v37 = strncasecmp(&v5[v25], "chunked", 7u);
                        v38 = v68;
                        if ( !v37 )
                          v38 = 1;
                        v68 = v38;
                        v11 = v80;
                        v35 = v69;
                      }
                    }
                    else
                    {
                      v71 = strtol(&v5[v25], 0u, 10);
                      v11 = v80;
                      v35 = v69;
                    }
                  }
                }
                else if ( v28 <= 0 )
                {
                  v35 = v69;
                }
                else
                {
                  v32 = v66;
                  v33 = v28;
                  do
                  {
                    if ( *(v32 - 1) == 32 )
                    {
                      if ( *status_code >= 0 )
                      {
                        v5 = v76;
                        v35 = v69;
                        goto LABEL_74;
                      }
                      v34 = strtol(v32, 0u, 10);
                      v11 = v80;
                      *status_code = v34;
                      v5 = v76;
                    }
                    --v33;
                    ++v32;
                  }
                  while ( v33 );
                  v35 = v69;
                }
LABEL_74:
                v25 = 0;
                if ( v28 < v11 )
                {
                  do
                  {
                    v39 = (unsigned __int8)v5[v28];
                    if ( v39 != 13 && v39 != 10 )
                    {
                      v29 = v28;
                      v27 = v28;
                      v26 = v28;
                      goto LABEL_38;
                    }
                    ++v28;
                  }
                  while ( v35 != v28 );
                  v29 = v11;
                  v27 = v11;
                  v26 = v11;
                }
                else
                {
                  v29 = v28;
                  v27 = v28;
                  v26 = v28;
                }
              }
              else
              {
                v29 = v28;
              }
LABEL_38:
              v28 = v29 + 1;
            }
            while ( v29 + 1 < v77 );
          }
          v16 = v11 - v19;
          memcpy(v83, &v5[v19], v11 - v19);
          v11 = v80;
          v13 = v19;
          v24 = v70;
          v10 = v73;
          v8 = v64;
          goto LABEL_82;
        }
      }
      free(v5);
      *v67 = v72;
      if ( !v72 )
      {
        free(v8);
        return 0;
      }
    }
    else
    {
      free(v5);
      *size = -1;
      return 0;
    }
  }
  else
  {
    *size = -1;
    return 0;
  }
  return v8;
}
