void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v3; // x22
  char *v4; // x21
  char *v5; // x20
  unsigned int v6; // w19
  unsigned int v7; // w26
  unsigned int v8; // w27
  unsigned int v9; // w23
  int v10; // w25
  unsigned int v11; // w10
  char *v12; // x0
  int v13; // w7
  int v14; // w1
  int v15; // w0
  int v16; // w4
  signed int v17; // w0
  unsigned int v18; // w0
  unsigned int v19; // w24
  char *v20; // x0
  char *v21; // x0
  int v24; // w21
  int v25; // w12
  int v26; // w2
  int v27; // w1
  int v28; // w28
  int v29; // w0
  __int64 v30; // x24
  bool v32; // zf
  char *v33; // x0
  char *v34; // x22
  unsigned int v35; // w20
  int v36; // w28
  unsigned int v37; // w19
  int v38; // w26
  char *v39; // x25
  unsigned int v40; // w21
  unsigned int v41; // w24
  char *v42; // x0
  char *v43; // x1
  int v44; // w0
  __int64 v45; // x21
  const unsigned __int16 **v46; // x0
  char *v47; // x1
  const unsigned __int16 *v48; // x7
  int v49; // w0
  __int64 v51; // x1
  __int64 v52; // x2
  char *v53; // x0
  char *v55; // x7
  unsigned int v56; // w0
  int v57; // t1
  int v58; // w0
  int v59; // w1
  unsigned int v60; // w1
  int v62; // w0
  int v63; // w0
  bool v66; // zf
  const char *v67; // x23
  int v68; // w0
  __int64 v69; // x0
  int v70; // w2
  char *v72; // x0
  char *v73; // x0
  char *v74; // x0
  char *content_buf; // [xsp+68h] [xbp+68h]
  int header_buf; // [xsp+70h] [xbp+70h]
  char *header_bufa; // [xsp+70h] [xbp+70h]
  int content_length; // [xsp+78h] [xbp+78h]
  unsigned int content_buf_len; // [xsp+7Ch] [xbp+7Ch]
  unsigned int content_buf_lena; // [xsp+7Ch] [xbp+7Ch]
  signed int content_buf_used; // [xsp+80h] [xbp+80h]
  unsigned int content_buf_useda; // [xsp+80h] [xbp+80h]
  int endofheaders; // [xsp+84h] [xbp+84h]
  unsigned int header_buf_len; // [xsp+8Ch] [xbp+8Ch]
  char *v86; // [xsp+90h] [xbp+90h]
  size_t v88; // [xsp+B8h] [xbp+B8h]
  const char *v89; // [xsp+C0h] [xbp+C0h]
  int valuestart; // [xsp+CCh] [xbp+CCh]
  char chunksize_buf[32]; // [xsp+E8h] [xbp+E8h] BYREF
  char buf[2048]; // [xsp+108h] [xbp+108h] BYREF

  if ( status_code )
    *status_code = -1;
  v3 = (char *)malloc(0x800uLL);
  if ( !v3 )
  {
    content_buf = 0LL;
    *size = -1;
    return content_buf;
  }
  content_buf = (char *)malloc(0x800uLL);
  if ( !content_buf )
  {
    free(v3);
    *size = -1;
    return content_buf;
  }
  v4 = buf;
  v5 = chunksize_buf;
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 2048;
  header_buf = 0;
  content_length = -1;
  content_buf_len = 0;
  endofheaders = 0;
  header_buf_len = 2048;
  chunksize_buf[0] = 0;
  while ( 1 )
  {
    while ( 1 )
    {
      v10 = receivedata((unsigned int)s, v4, 2048LL, 5000LL, 0LL);
      if ( v10 <= 0 )
        goto end_of_stream;
      if ( !endofheaders )
        break;
      if ( header_buf )
        goto LABEL_59;
LABEL_23:
      v18 = content_length;
      v19 = v7 + v10;
      if ( content_length <= 0 )
      {
        if ( v9 < v19 )
        {
          v18 = content_length;
          v9 = v7 + v10;
          if ( !content_length )
          {
LABEL_27:
            if ( v19 < v18 )
              v9 = v18;
            else
              v9 = v19;
          }
          v20 = (char *)realloc(content_buf, v9);
          if ( !v20 )
            goto LABEL_165;
          content_buf = v20;
        }
      }
      else
      {
        if ( content_length < v19 )
        {
          v19 = content_length;
          v10 = content_length - v7;
        }
        if ( v9 < v19 )
          goto LABEL_27;
      }
      header_buf = 0;
      v21 = &content_buf[v7];
      v7 = v19;
      memcpy(v21, v4, v10);
LABEL_33:
      if ( content_length > 0 && v7 >= content_length )
      {
end_of_stream:
        free(v3);
        *size = v7;
        if ( v7 )
          return content_buf;
        goto LABEL_163;
      }
    }
    v11 = v10 + content_buf_len;
    if ( v10 + content_buf_len > header_buf_len )
    {
      v12 = (char *)realloc(v3, v11);
      v11 = v10 + content_buf_len;
      if ( !v12 )
      {
        free(v3);
        v74 = content_buf;
        content_buf = 0LL;
        goto LABEL_166;
      }
      v3 = v12;
      header_buf_len = v10 + content_buf_len;
    }
    content_buf_used = v11;
    memcpy(&v3[content_buf_len], v4, v10);
    v13 = 0;
    v14 = content_buf_used - 1;
    if ( content_buf_used - 1 > 0 )
      break;
LABEL_21:
    content_buf_len = content_buf_used;
  }
  while ( 1 )
  {
LABEL_12:
    v15 = (unsigned __int8)v3[v13];
    v16 = v13 + 1;
    if ( v15 != 13 )
    {
LABEL_13:
      if ( v15 == 10 )
      {
        v13 += 2;
        if ( v3[v16] == 10 )
          break;
        goto LABEL_20;
      }
      goto LABEL_14;
    }
    while ( 1 )
    {
      v17 = v13 + 2;
      if ( v3[v16] != 10 )
      {
        if ( v14 <= v17 )
          goto LABEL_21;
        v13 += 2;
        goto LABEL_12;
      }
      v16 = v13 + 3;
      if ( content_buf_used > v17 && v3[v17] == 13 )
        break;
LABEL_14:
      if ( v14 <= v16 )
        goto LABEL_21;
      v13 = v16++;
      v15 = (unsigned __int8)v3[v13];
      if ( v15 != 13 )
        goto LABEL_13;
    }
    v13 += 4;
    if ( content_buf_used > v16 && v3[v16] == 10 )
      break;
LABEL_20:
    if ( v14 <= v13 )
      goto LABEL_21;
  }
  v86 = v4;
  v24 = v16;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  v28 = 0;
  content_buf_lena = v9;
  endofheaders = v13;
  do
  {
    v29 = (unsigned __int8)v3[v28];
    v30 = v28;
    if ( v27 > 0 && v26 <= v27 )
    {
      if ( v29 != 58 )
      {
        v32 = v29 == 13 || v29 == 10;
        if ( !v32 )
        {
LABEL_55:
          ++v28;
          continue;
        }
        goto LABEL_115;
      }
      v69 = v28 + 1;
      while ( 1 )
      {
        v70 = (unsigned __int8)v3[v69];
        v25 = v69;
        if ( v70 != 32 && v70 != 9 )
          break;
        if ( v24 <= (int)++v69 - 1 )
        {
          ++v25;
          break;
        }
      }
      v26 = v28;
      v28 = v25;
    }
    else
    {
      if ( v29 != 13 && v29 != 10 )
        goto LABEL_55;
      if ( v27 )
        v66 = 1;
      else
        v66 = status_code == 0LL;
      if ( !v66 )
      {
        if ( v28 > 0 )
        {
          v67 = v3 + 1;
          while ( 1 )
          {
            if ( *(v67 - 1) == 32 )
            {
              if ( (*status_code & 0x80000000) == 0 )
                goto LABEL_115;
              *status_code = strtol(v67, 0uLL, 10);
            }
            if ( &v3[v28 - 1 + 2] == ++v67 )
              goto LABEL_115;
          }
        }
        goto LABEL_115;
      }
      valuestart = v25;
      if ( v26 <= v27 || v26 >= v25 )
        goto LABEL_115;
      v88 = v26 - v27;
      v89 = &v3[v27];
      if ( strncasecmp(v89, "content-length", v88) )
      {
        if ( !strncasecmp(v89, "transfer-encoding", v88) )
        {
          v32 = strncasecmp(&v3[valuestart], "chunked", 7uLL) == 0;
          v62 = header_buf;
          if ( v32 )
            v62 = 1;
          header_buf = v62;
        }
LABEL_115:
        if ( v28 < content_buf_used )
          goto LABEL_118;
LABEL_161:
        v26 = v28;
        v27 = v28;
        v25 = 0;
        ++v28;
        continue;
      }
      content_length = strtol(&v3[valuestart], 0uLL, 10);
      if ( v28 >= content_buf_used )
        goto LABEL_161;
      do
      {
LABEL_118:
        v63 = (unsigned __int8)v3[v30];
        v27 = v30;
        v28 = v30 + 1;
        if ( v63 != 13 && v63 != 10 )
        {
          v26 = v30;
          v25 = 0;
          goto LABEL_56;
        }
        ++v30;
      }
      while ( content_buf_used > (int)v30 );
      v68 = v27 + 2;
      v26 = v28;
      v27 = v28;
      v25 = 0;
      v28 = v68;
    }
LABEL_56:
    ;
  }
  while ( v24 > v28 );
  v10 = content_buf_used - endofheaders;
  v4 = v86;
  v9 = content_buf_lena;
  content_buf_len = content_buf_used;
  memcpy(v86, &v3[endofheaders], content_buf_used - endofheaders);
  if ( !header_buf )
    goto LABEL_23;
  if ( v10 <= 0 )
    goto LABEL_33;
LABEL_59:
  header_bufa = v3;
  content_buf_useda = v10 - 1;
  v33 = v5;
  v34 = v4;
  v35 = v6;
  v36 = 0;
  v37 = v7;
  v38 = v10;
  v39 = v33;
  if ( !v35 )
  {
LABEL_72:
    if ( !v8 )
    {
      v44 = (unsigned __int8)v34[v36];
      if ( v44 == 13 )
      {
        if ( ++v36 >= v38 )
        {
          v7 = v37;
          v4 = v34;
          v6 = v35;
          v5 = v39;
          v8 = 0;
          v3 = header_bufa;
          goto LABEL_139;
        }
        v45 = v36;
        if ( v34[v36] != 10 )
          goto LABEL_77;
      }
      else if ( v44 != 10 )
      {
        goto LABEL_75;
      }
      ++v36;
    }
LABEL_75:
    if ( v36 < v38 )
    {
      v45 = v36;
LABEL_77:
      v46 = _ctype_b_loc();
      v47 = &v34[v45];
      v48 = *v46;
      while ( 1 )
      {
        v49 = (unsigned __int8)*v47;
        if ( (v48[(unsigned __int8)*v47] & 0x1000) == 0 || v8 > 0x1E )
          break;
        v39[v8] = v49;
        ++v36;
        ++v47;
        v39[v8 + 1] = 0;
        if ( v36 >= v38 )
        {
          v7 = v37;
          v4 = v34;
          v6 = v35;
          ++v8;
          v5 = v39;
          v3 = header_bufa;
          goto LABEL_139;
        }
        ++v8;
      }
      if ( v36 < v38 )
      {
        v51 = v36;
        v52 = content_buf_useda - v36 + (__int64)v36;
        while ( 1 )
        {
          v36 = v51;
          if ( v49 == 10 || v49 == 13 )
            break;
          if ( v52 == v51 )
            goto LABEL_138;
          v53 = &v34[v51++];
          v49 = (unsigned __int8)v53[1];
        }
        if ( (int)v51 < v38 )
        {
          if ( v49 != 13 )
            goto LABEL_96;
          v36 = v51 + 1;
          if ( (int)v51 + 1 < v38 )
          {
            v49 = (unsigned __int8)v34[v36];
LABEL_96:
            v41 = v37;
            if ( v49 != 10 )
              goto LABEL_71;
            if ( v8 )
            {
              v55 = chunksize_buf;
              v56 = 0;
              do
              {
                v57 = (unsigned __int8)*v55++;
                v58 = 16 * v56;
                v59 = v58 - 0x57;
                v56 = v58 - 0x30 + v57;
                v60 = v59 + (v57 | 0x20);
                if ( (unsigned __int8)(v57 - 0x30) > 9u )
                  v56 = v60;
              }
              while ( v55 != &chunksize_buf[v8] );
              chunksize_buf[0] = 0;
              ++v36;
              if ( v56 )
              {
                v35 = v56;
                v8 = 0;
                goto LABEL_60;
              }
            }
            free(header_bufa);
            *size = v37;
            if ( v37 )
              return content_buf;
LABEL_163:
            v72 = content_buf;
            content_buf = 0LL;
            free(v72);
            return content_buf;
          }
        }
      }
LABEL_138:
      v4 = v34;
      v7 = v37;
      v3 = header_bufa;
      v6 = v35;
      v5 = v39;
      goto LABEL_139;
    }
    v7 = v37;
    v4 = v34;
    v6 = v35;
    v5 = v39;
    v3 = header_bufa;
LABEL_139:
    header_buf = 1;
    goto LABEL_33;
  }
LABEL_60:
  while ( 1 )
  {
    v40 = v38 - v36 > v35 ? v35 : v38 - v36;
    v41 = v40 + v37;
    if ( v40 + v37 > v9 )
      break;
LABEL_70:
    v43 = &v34[v36];
    v36 += v40;
    v35 -= v40;
    memcpy(&content_buf[v37], v43, v40);
    if ( v36 >= v38 )
    {
      v6 = v35;
      v4 = v34;
      v5 = v39;
      v7 = v41;
      v3 = header_bufa;
      header_buf = 1;
      goto LABEL_33;
    }
LABEL_71:
    v37 = v41;
    if ( !v35 )
      goto LABEL_72;
  }
  v9 = v40 + v37;
  if ( (content_length & 0x80000000) == 0 )
  {
    if ( content_length < v41 )
      v9 = v40 + v37;
    else
      v9 = content_length;
  }
  v42 = (char *)realloc(content_buf, v9);
  if ( v42 )
  {
    content_buf = v42;
    goto LABEL_70;
  }
  v3 = header_bufa;
LABEL_165:
  v73 = content_buf;
  content_buf = 0LL;
  free(v73);
  v74 = v3;
LABEL_166:
  free(v74);
  *size = -1;
  return content_buf;
}
