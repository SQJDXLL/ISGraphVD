char *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // $v0
  char *v5; // $s1
  unsigned int v6; // $s7
  char *v7; // $v0
  char *v8; // $s3
  int v9; // $v0
  char *v10; // $s4
  signed int v11; // $v1
  int v12; // $a3
  unsigned int v13; // $s2
  int v14; // $s6
  int v15; // $fp
  int v16; // $v0
  signed int v17; // $s0
  char *v18; // $v0
  _BOOL4 v19; // $a0
  int v20; // $s5
  int v21; // $v1
  int v22; // $a0
  int v23; // $a0
  bool v24; // dc
  const char *v25; // $s6
  int v26; // $s0
  int v27; // $v1
  int v28; // $v0
  int v29; // $s3
  int v30; // $s7
  int v31; // $v1
  int v32; // $a0
  const char *v33; // $s0
  int v34; // $fp
  int *v35; // $v0
  char *v36; // $s3
  char *v37; // $s1
  const char *v38; // $s4
  int *v39; // $s6
  int v40; // $v0
  int v41; // $v1
  int v42; // $v0
  int v43; // $at
  unsigned int v44; // $a1
  signed int v45; // $fp
  const unsigned __int16 **v46; // $v0
  const unsigned __int16 *v47; // $v0
  int v48; // $v1
  char *v49; // $at
  signed int v50; // $v1
  char *v51; // $v0
  int v52; // $a0
  char *v53; // $a1
  int v54; // $s3
  int v55; // $at
  int v56; // $v1
  int v57; // $at
  unsigned int v58; // $v0
  size_t v59; // $s5
  size_t v60; // $a1
  char *v61; // $v0
  void *v62; // $a0
  int v63; // $a2
  signed int v64; // $v1
  size_t v65; // $a1
  char *v66; // $v0
  char *v67; // $s5
  char *v69; // [sp+1Ch] [-86Ch]
  char *v70; // [sp+24h] [-864h]
  size_t n; // [sp+28h] [-860h]
  int *v72; // [sp+34h] [-854h]
  int v73; // [sp+38h] [-850h]
  int v74; // [sp+3Ch] [-84Ch]
  int v75; // [sp+40h] [-848h]
  int v76; // [sp+44h] [-844h]
  int v77; // [sp+48h] [-840h]
  signed int v78; // [sp+4Ch] [-83Ch]
  signed int v79; // [sp+4Ch] [-83Ch]
  unsigned int v81; // [sp+54h] [-834h]
  int v82; // [sp+58h] [-830h]
  int v83; // [sp+5Ch] [-82Ch]
  int v84; // [sp+5Ch] [-82Ch]
  int v86; // [sp+64h] [-824h]
  int v87; // [sp+64h] [-824h]
  char v88[32]; // [sp+68h] [-820h] BYREF
  char v89[2048]; // [sp+88h] [-800h] BYREF

  if ( status_code )
    *status_code = -1;
  v4 = (char *)malloc(0x800u);
  if ( !v4 )
  {
    *size = -1;
    return 0;
  }
  v5 = v4;
  v6 = 2048;
  v7 = (char *)malloc(0x800u);
  if ( !v7 )
  {
    free(v5);
    *size = -1;
    return 0;
  }
  v8 = v7;
  v72 = size;
  v73 = 0;
  v88[0] = 0;
  v9 = -1;
  v10 = v89;
  v11 = 0;
  v12 = 0;
  v75 = 2048;
  v77 = 0;
  v13 = 0;
  v14 = 0;
LABEL_6:
  v78 = v11;
  v76 = v9;
  while ( 1 )
  {
    v15 = v12;
    v16 = receivedata(s, v10, 2048, 5000);
    if ( v16 <= 0 )
      break;
    v17 = v16;
    if ( v14 )
    {
      v12 = v15;
      v44 = v75;
      v11 = v78;
      goto LABEL_83;
    }
    v86 = v16 + v15;
    if ( v6 >= v16 + v15 )
    {
      v18 = v5;
    }
    else
    {
      v18 = (char *)realloc(v5, v16 + v15);
      v6 = v86;
      if ( !v18 )
      {
        free(v5);
        free(v8);
        *v72 = -1;
        return 0;
      }
    }
    v5 = v18;
    memcpy(&v18[v15], v10, v17);
    v12 = v86;
    v19 = 1;
    v14 = 0;
    v20 = 0;
    if ( v86 >= 2 )
    {
      v21 = 0;
      do
      {
        v22 = (unsigned __int8)v5[v21];
        if ( v22 == 10 )
        {
          v23 = v21 + 1;
          v20 = v21 + 2;
          if ( v5[v21 + 1] != 0xA )
            v20 = 0;
        }
        else if ( v22 == 13 )
        {
          v23 = v21 + 1;
          v20 = 0;
          if ( v5[v21 + 1] == 10 )
          {
            v23 = v21 + 2;
            if ( v21 + 2 >= v86 )
            {
              v20 = 0;
            }
            else
            {
              v20 = 0;
              if ( v5[v23] == 13 )
              {
                v23 = v21 + 3;
                if ( v21 + 3 >= v86 )
                {
                  v20 = 0;
                }
                else
                {
                  v20 = v21 + 4;
                  if ( v5[v23] != 0xA )
                    v20 = 0;
                }
              }
            }
          }
        }
        else
        {
          v23 = v21;
          v20 = 0;
        }
        v21 = v23 + 1;
        v24 = v23 + 1 >= v86 - 1;
        v19 = v20 == 0;
      }
      while ( !v24 && !v20 );
    }
    if ( !v19 )
    {
      v69 = v8;
      if ( v20 >= 2 )
      {
        v83 = v20 - 1;
        v74 = v17 + v15 - 1;
        v25 = v5 + 1;
        v26 = 0;
        v27 = 0;
        v28 = 0;
        v29 = 0;
        v81 = v6;
        do
        {
          v30 = (unsigned __int8)v5[v29];
          if ( v30 == 58 && v28 > 0 && v28 >= v27 )
          {
            v26 = v29 + 1;
            if ( v29 >= v83 )
            {
              v32 = v29;
              v6 = v81;
              v27 = v29;
            }
            else
            {
              v26 = v29 + 1;
              v6 = v81;
              while ( 1 )
              {
                v31 = (unsigned __int8)v5[v26];
                if ( v31 != 32 && v31 != 9 )
                  break;
                if ( v20 == ++v26 )
                {
                  v32 = v20 - 1;
                  v27 = v29;
                  v26 = v20;
                  goto LABEL_80;
                }
              }
              v32 = v26 - 1;
              v27 = v29;
            }
          }
          else if ( v30 == 13 || v30 == 10 )
          {
            if ( !status_code || v28 )
            {
              if ( v28 >= v27 )
              {
                v41 = v74;
              }
              else if ( v27 >= v26 )
              {
                v41 = v74;
              }
              else
              {
                v70 = &v5[v28];
                n = v27 - v28;
                if ( strncasecmp(&v5[v28], "content-length", v27 - v28) )
                {
                  if ( strncasecmp(v70, "transfer-encoding", n) )
                  {
                    v12 = v86;
                    v41 = v74;
                  }
                  else
                  {
                    v42 = strncasecmp(&v5[v26], "chunked", 7u);
                    v43 = v73;
                    if ( !v42 )
                      v43 = 1;
                    v73 = v43;
                    v12 = v86;
                    v41 = v74;
                  }
                }
                else
                {
                  v76 = atoi(&v5[v26]);
                  v12 = v86;
                  v41 = v74;
                }
              }
              goto LABEL_72;
            }
            if ( v29 > 0 )
            {
              v33 = v25;
              v34 = v29;
              v35 = status_code;
              v82 = v29;
              while ( 1 )
              {
                if ( *(v33 - 1) == 32 )
                {
                  v36 = v5;
                  v37 = v10;
                  v38 = v25;
                  if ( *v35 >= 0 )
                  {
                    v41 = v74;
                    v10 = v37;
                    v5 = v36;
                    v29 = v82;
                    goto LABEL_72;
                  }
                  v39 = v35;
                  v40 = atoi(v33);
                  v12 = v86;
                  *v39 = v40;
                  v35 = v39;
                  v25 = v38;
                  v10 = v37;
                  v5 = v36;
                  v29 = v82;
                }
                --v34;
                ++v33;
                if ( !v34 )
                {
                  v41 = v74;
                  goto LABEL_72;
                }
              }
            }
            v41 = v74;
LABEL_72:
            v26 = 0;
            if ( v29 >= v12 )
            {
              v32 = v29;
              v28 = v29;
              v6 = v81;
              v27 = v29;
            }
            else
            {
              while ( 1 )
              {
                if ( (unsigned __int8)v30 != 13 && (unsigned __int8)v30 != 10 )
                {
                  v32 = v29;
                  v28 = v29;
                  v6 = v81;
                  v27 = v29;
                  goto LABEL_80;
                }
                if ( v41 == v29 )
                  break;
                LOBYTE(v30) = v25[v29++];
              }
              v32 = v12;
              v28 = v12;
              v27 = v12;
              v6 = v81;
            }
          }
          else
          {
            v6 = v81;
            v32 = v29;
          }
LABEL_80:
          v29 = v32 + 1;
        }
        while ( v32 + 1 < v83 );
      }
      v17 = v12 - v20;
      memcpy(v89, &v5[v20], v12 - v20);
      v12 = v86;
      v44 = v75;
      v11 = v78;
      v8 = v69;
      v14 = v20;
LABEL_83:
      v87 = v12;
      if ( v73 )
      {
        if ( v17 > 0 )
        {
          v45 = 0;
          while ( !v11 )
          {
            if ( !v13 )
            {
              v45 += v10[v45] == 0xD;
              if ( v45 < v17 )
                v45 += v10[v45] == 0xA;
            }
            if ( v45 >= v17 )
            {
              v50 = v45;
            }
            else
            {
              v46 = _ctype_b_loc();
              v12 = v87;
              v47 = *v46;
              while ( 1 )
              {
                if ( v13 >= 0x1F )
                {
                  v50 = v45;
                  goto LABEL_99;
                }
                v48 = v10[v45];
                if ( (v47[v48] & 0x10) == 0 )
                  break;
                v49 = &v88[v13];
                v49[1] = 0;
                *v49 = v48;
                ++v45;
                ++v13;
                if ( v17 == v45 )
                {
                  v50 = v17;
                  goto LABEL_99;
                }
              }
              v50 = v45;
            }
LABEL_99:
            v51 = v88;
            do
            {
              if ( v50 >= v17 )
              {
                v45 = v50;
                goto LABEL_107;
              }
              v52 = (unsigned __int8)v10[v50++];
            }
            while ( v52 != 13 && v52 != 10 );
            v45 = v50 - 1;
            if ( v52 == 0xD )
              v45 = v50;
LABEL_107:
            if ( v45 >= v17 )
            {
              v11 = 0;
              goto LABEL_137;
            }
            v11 = 0;
            if ( v10[v45] == 10 )
            {
              if ( !v13 )
              {
                v88[0] = 0;
                goto end_of_stream;
              }
              v53 = v8;
              v54 = 0;
              do
              {
                v55 = *v51;
                v56 = (v55 | 0x20) - 87;
                v57 = v55 - 48;
                if ( (unsigned __int8)v57 < 0xAu )
                  v56 = v57;
                v54 = v56 + 16 * v54;
                --v13;
                ++v51;
              }
              while ( v13 );
              v88[0] = 0;
              v58 = v75;
              if ( !v54 )
              {
                v8 = v53;
                goto end_of_stream;
              }
              v84 = v77;
              v79 = v54;
              v13 = 0;
              ++v45;
              v8 = v53;
LABEL_117:
              v59 = v17 - v45;
              if ( v79 < v17 - v45 )
                v59 = v79;
              v77 = v59 + v84;
              if ( v58 < v59 + v84 )
              {
                v60 = v76;
                if ( v76 < (int)(v59 + v84) )
                  v60 = v59 + v84;
                v75 = v60;
                v61 = (char *)realloc(v8, v60);
                v62 = v8;
                v8 = v61;
                if ( !v61 )
                {
                  free(v62);
                  free(v5);
                  *v72 = -1;
                  return 0;
                }
              }
              memcpy(&v8[v84], &v10[v45], v59);
              v11 = v79 - v59;
              v45 += v59;
              v12 = v87;
              if ( v45 >= v17 )
                goto LABEL_137;
            }
          }
          v84 = v77;
          v79 = v11;
          v58 = v75;
          goto LABEL_117;
        }
      }
      else
      {
        v63 = v77;
        v64 = v17;
        if ( v76 < v17 + v77 )
          v64 = v76 - v77;
        if ( v76 >= 1 )
          v17 = v64;
        if ( v44 >= v17 + v77 )
        {
          v67 = v8;
        }
        else
        {
          v65 = v76;
          if ( v76 < v17 + v77 )
            v65 = v17 + v77;
          v75 = v65;
          v66 = (char *)realloc(v8, v65);
          v63 = v77;
          v67 = v66;
          if ( !v66 )
          {
            free(v8);
            free(v5);
            *v72 = -1;
            return 0;
          }
        }
        memcpy(&v67[v63], v89, v17);
        v8 = v67;
        v77 += v17;
        v12 = v87;
        v11 = v78;
      }
LABEL_137:
      v9 = v76;
      if ( v76 > 0 && v77 >= v76 )
        break;
      goto LABEL_6;
    }
  }
end_of_stream:
  free(v5);
  *v72 = v77;
  if ( !v77 )
  {
    free(v8);
    return 0;
  }
  return v8;
}
