void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  void *result; // x0
  char *v6; // x22
  char *v7; // x0
  unsigned int v8; // w28
  unsigned __int64 v9; // x13
  int v10; // w20
  unsigned int v11; // w25
  int v12; // w8
  int v13; // w23
  int v14; // w8
  int v15; // w0
  int v16; // w27
  char *v17; // x0
  int *v18; // x28
  int v19; // w9
  int v20; // w10
  __int64 v21; // x10
  int v22; // w11
  int v23; // w9
  int v24; // w11
  __int64 v25; // x21
  int v26; // w9
  int v27; // w8
  int v28; // w25
  int v29; // w10
  int v30; // w9
  int v31; // w10
  __int64 v32; // x21
  const char *v33; // x26
  int v34; // w10
  const char *v35; // x26
  size_t v36; // x28
  int v37; // w0
  int v38; // w8
  char *v39; // x8
  __int64 v40; // x9
  int v41; // w10
  int v42; // w9
  __int64 v43; // x26
  unsigned int v44; // w11
  int v46; // w21
  int v47; // w19
  size_t v48; // x1
  char *v49; // x0
  int v50; // w8
  int v51; // w8
  unsigned int v52; // w10
  unsigned __int64 v53; // x19
  const unsigned __int16 *v54; // x8
  char *v55; // x9
  __int64 v56; // x10
  __int64 v57; // x11
  int v58; // w8
  int v59; // w12
  __int64 v60; // x8
  char *v61; // x9
  int v62; // t1
  int v63; // w11
  int v64; // w10
  unsigned int v65; // w21
  int v66; // w19
  int v67; // w9
  size_t v68; // x1
  char *v69; // x0
  int v70; // [xsp+Ch] [xbp-884h]
  unsigned int v71; // [xsp+10h] [xbp-880h]
  unsigned __int64 v72; // [xsp+18h] [xbp-878h]
  unsigned __int64 v73; // [xsp+18h] [xbp-878h]
  int v74; // [xsp+24h] [xbp-86Ch]
  char *ptr; // [xsp+28h] [xbp-868h]
  int v76; // [xsp+34h] [xbp-85Ch]
  int v77; // [xsp+38h] [xbp-858h]
  int v78; // [xsp+3Ch] [xbp-854h]
  unsigned int v80; // [xsp+4Ch] [xbp-844h]
  int *v81; // [xsp+50h] [xbp-840h]
  int v82; // [xsp+60h] [xbp-830h]
  char v83[32]; // [xsp+68h] [xbp-828h] BYREF
  char dest[2056]; // [xsp+88h] [xbp-808h] BYREF

  if ( status_code )
    *status_code = -1;
  result = malloc(0x800uLL);
  if ( !result )
    goto LABEL_153;
  v6 = (char *)result;
  v7 = (char *)malloc(0x800uLL);
  if ( !v7 )
  {
    free(v6);
    result = 0LL;
LABEL_153:
    *size = -1;
    return result;
  }
  v8 = 0;
  v9 = 0LL;
  v10 = 0;
  v11 = 2048;
  v12 = -1;
  v81 = status_code;
  ptr = v7;
  v76 = s;
  v77 = 0;
  v70 = 0;
  v74 = 0;
  v83[0] = 0;
  v71 = 2048;
  while ( 2 )
  {
    while ( 2 )
    {
      v72 = v9;
      v78 = v12;
      while ( 2 )
      {
        v15 = receivedata((unsigned int)s, dest, 2048LL, 5000LL, 0LL);
        if ( v15 < 1 )
          goto end_of_stream;
        v13 = v15;
        if ( v10 )
          goto LABEL_76;
        v16 = v15 + v8;
        if ( v15 + v8 > v11 )
        {
          v17 = (char *)realloc(v6, (unsigned int)v16);
          if ( !v17 )
          {
            free(v6);
            free(ptr);
            *size = -1;
            v14 = 1;
            v10 = 0;
            goto LABEL_8;
          }
          v6 = v17;
          v11 = v16;
        }
        memcpy(&v6[v8], dest, v13);
        if ( v16 < 2 )
        {
LABEL_32:
          v10 = 0;
          v14 = 2;
          v8 = v16;
          goto LABEL_8;
        }
        v18 = v81;
        v10 = 0;
        v19 = 0;
        do
        {
          v20 = (unsigned __int8)v6[v19];
          if ( v20 == 10 )
          {
            LODWORD(v21) = v19 + 1;
            v22 = (unsigned __int8)v6[v19 + 1];
            v23 = v19 + 2;
LABEL_25:
            if ( v22 == 10 )
              v10 = v23;
            goto LABEL_29;
          }
          if ( v20 != 13 )
          {
            LODWORD(v21) = v19;
            goto LABEL_29;
          }
          LODWORD(v21) = v19 + 1;
          if ( v6[v19 + 1] == 10 )
          {
            v21 = v19 + 2LL;
            if ( v19 + 2 < v16 && v6[v21] == 13 )
            {
              v21 = v19 + 3LL;
              if ( v19 + 3 < v16 )
              {
                v22 = (unsigned __int8)v6[v21];
                v23 = v19 + 4;
                goto LABEL_25;
              }
            }
          }
LABEL_29:
          v19 = v21 + 1;
        }
        while ( (int)v21 + 1 < v16 - 1 && !v10 );
        if ( !v10 )
          goto LABEL_32;
        v80 = v11;
        if ( v10 >= 2 )
        {
          v24 = v10 - 1;
          LODWORD(v25) = 0;
          v26 = 0;
          v27 = 0;
          v28 = 0;
          do
          {
            if ( v27 >= 1 && v26 <= v27 && v6[v28] == 58 )
            {
              v25 = v28;
              while ( v25 < v10 - 1 )
              {
                v30 = (unsigned __int8)v6[++v25];
                if ( v30 != 32 && v30 != 9 )
                  goto LABEL_45;
              }
              LODWORD(v25) = v25 + 1;
LABEL_45:
              v29 = v25 - 1;
            }
            else
            {
              v31 = (unsigned __int8)v6[v28];
              if ( v31 == 13 || v31 == 10 )
              {
                if ( !v18 || v27 )
                {
                  v34 = v26 - v27;
                  if ( v26 > v27 && (int)v25 > v26 )
                  {
                    v35 = &v6[v27];
                    v36 = v34;
                    if ( !strncasecmp(v35, "content-length", v34) )
                    {
                      v78 = atoi(&v6[(int)v25]);
                    }
                    else if ( !strncasecmp(v35, "transfer-encoding", v36) )
                    {
                      v37 = strncasecmp(&v6[(int)v25], "chunked", 7uLL);
                      v38 = v77;
                      if ( !v37 )
                        v38 = 1;
                      v77 = v38;
                    }
                    v18 = v81;
LABEL_67:
                    v24 = v10 - 1;
                  }
                }
                else if ( v28 >= 1 )
                {
                  v32 = (unsigned int)v28;
                  v33 = v6 + 1;
                  while ( 1 )
                  {
                    if ( *(v33 - 1) == 32 )
                    {
                      if ( (*v18 & 0x80000000) == 0 )
                        goto LABEL_67;
                      *v18 = atoi(v33);
                    }
                    --v32;
                    ++v33;
                    if ( !v32 )
                      goto LABEL_67;
                  }
                }
                if ( v28 < v16 )
                {
                  v39 = &v6[v28];
                  v40 = v16 - (__int64)v28;
                  while ( 1 )
                  {
                    v41 = (unsigned __int8)*v39;
                    if ( v41 != 13 && v41 != 10 )
                      break;
                    ++v28;
                    --v40;
                    ++v39;
                    if ( !v40 )
                    {
                      LODWORD(v25) = 0;
                      v29 = v16;
                      v27 = v16;
                      v28 = v16;
                      goto LABEL_37;
                    }
                  }
                }
                LODWORD(v25) = 0;
                v29 = v28;
                v27 = v28;
              }
              else
              {
                v29 = v28;
                v28 = v26;
              }
            }
LABEL_37:
            v26 = v28;
            v28 = v29 + 1;
          }
          while ( v29 + 1 < v24 );
        }
        v13 = v16 - v10;
        memcpy(dest, &v6[v10], v16 - v10);
        s = v76;
        v11 = v80;
        v14 = 0;
        v8 = v16;
LABEL_8:
        if ( v14 == 2 )
          continue;
        break;
      }
      if ( v14 )
        return 0LL;
LABEL_76:
      if ( !v10 )
        goto LABEL_143;
      if ( !v77 )
      {
        v44 = v74;
        if ( v13 + v74 <= v78 || v78 <= 0 )
          v46 = v13;
        else
          v46 = v78 - v74;
        v47 = v46 + v74;
        if ( v46 + v74 > v71 )
        {
          v48 = v78 >= v47 ? (unsigned int)v78 : (unsigned int)v47;
          v71 = v48;
          v49 = (char *)realloc(ptr, v48);
          if ( v49 )
          {
            v50 = 1;
            ptr = v49;
          }
          else
          {
            free(ptr);
            free(v6);
            v50 = 0;
            *size = -1;
          }
          v44 = v74;
          if ( !v50 )
            return 0LL;
        }
        memcpy(&ptr[v44], dest, v46);
        v74 += v46;
LABEL_143:
        v12 = v78;
        v9 = v72;
        if ( v78 < 1 )
          continue;
LABEL_144:
        if ( v74 < v12 )
          continue;
end_of_stream:
        free(v6);
        *size = v74;
        if ( v74 )
          return ptr;
        free(ptr);
        return 0LL;
      }
      break;
    }
    v9 = v72;
    if ( v13 < 1 )
    {
      v42 = v70;
LABEL_138:
      v12 = v78;
      v70 = v42;
      if ( v78 < 1 )
        continue;
      goto LABEL_144;
    }
    break;
  }
  v42 = v70;
  LODWORD(v43) = 0;
  while ( 2 )
  {
    v82 = v74;
    while ( 1 )
    {
      if ( v42 )
        goto LABEL_129;
      if ( (_DWORD)v9 )
      {
        v53 = v9;
      }
      else
      {
        v53 = v9;
        if ( dest[(int)v43] == 13 )
          v43 = (int)v43 + 1LL;
        else
          v43 = (int)v43;
        if ( (int)v43 < v13 && dest[v43] == 10 )
          LODWORD(v43) = v43 + 1;
      }
      if ( (int)v43 >= v13 )
      {
        v9 = v53;
      }
      else
      {
        v54 = *_ctype_b_loc();
        v9 = (unsigned int)v53;
        v55 = &dest[(int)v43];
        v56 = v13 - (__int64)(int)v43;
        while ( v9 <= 0x1E )
        {
          v57 = (unsigned __int8)*v55;
          if ( (v54[v57] & 0x1000) == 0 )
            break;
          v83[v9] = v57;
          LODWORD(v43) = v43 + 1;
          --v56;
          ++v9;
          ++v55;
          v83[(unsigned int)v9] = 0;
          if ( !v56 )
          {
            LODWORD(v43) = v13;
            break;
          }
        }
      }
      v43 = (int)v43;
      while ( v43 < v13 )
      {
        v58 = (unsigned __int8)dest[v43++];
        if ( v58 == 13 || v58 == 10 )
        {
          if ( v58 != 13 )
            LODWORD(v43) = v43 - 1;
          break;
        }
      }
      if ( v13 > (int)v43 && dest[(int)v43] == 10 )
        break;
      v42 = 0;
      if ( v13 <= (int)v43 )
        goto LABEL_138;
    }
    v59 = 0;
    if ( (_DWORD)v9 )
    {
      v60 = (unsigned int)v9;
      v61 = v83;
      do
      {
        v62 = (unsigned __int8)*v61++;
        v63 = v62 - 0x30;
        v64 = (v62 | 0x20) - 0x57;
        if ( (unsigned int)(v62 - 0x30) < 0xA )
          v64 = v63;
        --v60;
        v59 = v64 + 16 * v59;
      }
      while ( v60 );
    }
    v9 = 0LL;
    v83[0] = 0;
    if ( v59 )
    {
      v42 = v59;
      LODWORD(v43) = v43 + 1;
LABEL_129:
      v52 = v74;
      if ( v42 >= v13 - (int)v43 )
        v65 = v13 - v43;
      else
        v65 = v42;
      v66 = v42;
      v67 = v65 + v74;
      v73 = v9;
      v74 += v65;
      if ( v65 + v82 > v71 )
      {
        v68 = v78 >= v67 ? (unsigned int)v78 : (unsigned int)v67;
        v71 = v68;
        v69 = (char *)realloc(ptr, v68);
        if ( v69 )
        {
          v51 = 0;
          ptr = v69;
        }
        else
        {
          free(ptr);
          free(v6);
          *size = -1;
          v51 = 1;
        }
        v52 = v82;
        if ( v51 )
        {
          v74 = v82;
          goto LABEL_149;
        }
      }
      memcpy(&ptr[v52], &dest[(int)v43], v65);
      v9 = v73;
      LODWORD(v43) = v65 + v43;
      v42 = v66 - v65;
      if ( (int)v43 >= v13 )
        goto LABEL_138;
      continue;
    }
    break;
  }
  v51 = 25;
LABEL_149:
  if ( v51 == 25 )
    goto end_of_stream;
  return 0LL;
}
