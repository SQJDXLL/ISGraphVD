void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // $v0
  char *v5; // $s1
  void *v6; // $v0
  char *v7; // $a1
  int v8; // $a2
  unsigned int v9; // $fp
  int v10; // $s6
  unsigned int v11; // $s3
  int v12; // $s4
  int v13; // $v0
  signed int v14; // $s7
  int v15; // $fp
  char *v16; // $s0
  char *v17; // $v0
  void *v18; // $a1
  int v19; // $a0
  int v20; // $v1
  int v21; // $v1
  signed int v22; // $s0
  const unsigned __int16 **v23; // $v0
  int v24; // $fp
  int v25; // $a0
  const unsigned __int16 *v26; // $v0
  int v27; // $v1
  _BYTE *v28; // $at
  int v29; // $v0
  char *v30; // $v0
  int v31; // $v1
  char *v32; // $v1
  size_t v33; // $v0
  unsigned int v34; // $v0
  size_t v35; // $a1
  char *v36; // $v0
  int v37; // $t0
  int v38; // $s7
  const char *v39; // $fp
  int v40; // $t1
  int v41; // $t2
  int v42; // $v1
  int v43; // $v0
  int v44; // $s3
  int v45; // $a0
  int v46; // $a1
  int v47; // $v1
  const char *v48; // $s0
  int *v49; // $s7
  const char *v50; // $s0
  int v51; // $fp
  int v52; // $v0
  int v53; // $v0
  int v54; // $v0
  int v55; // $at
  int v56; // $v0
  int v57; // $s3
  int v58; // $t1
  int v59; // $v1
  int v60; // $v0
  int v61; // $fp
  int v62; // $a0
  int v63; // $a1
  int v64; // $v1
  int v65; // $v0
  int v66; // $v0
  int v67; // $at
  int v68; // $v0
  unsigned int v69; // $a0
  unsigned int v70; // $v1
  unsigned int v71; // $fp
  void *v72; // $s3
  size_t v73; // $a1
  char *v74; // $v0
  char *v75; // $s0
  void *result; // $v0
  bool v77; // dc
  int v78; // [sp+20h] [-878h]
  int v79; // [sp+24h] [-874h]
  int v80; // [sp+24h] [-874h]
  size_t v81; // [sp+28h] [-870h]
  const char *v82; // [sp+28h] [-870h]
  size_t v83; // [sp+2Ch] [-86Ch]
  unsigned int v84; // [sp+40h] [-858h]
  _BYTE *v85; // [sp+44h] [-854h]
  unsigned int v86; // [sp+48h] [-850h]
  int *v87; // [sp+4Ch] [-84Ch]
  int v88; // [sp+50h] [-848h]
  int *v89; // [sp+54h] [-844h]
  size_t n; // [sp+58h] [-840h]
  unsigned int v91; // [sp+5Ch] [-83Ch]
  void *ptr; // [sp+60h] [-838h]
  unsigned int v93; // [sp+64h] [-834h]
  int v94; // [sp+68h] [-830h]
  void *src; // [sp+6Ch] [-82Ch]
  int v96; // [sp+70h] [-828h]
  unsigned int v97; // [sp+74h] [-824h]
  char v98; // [sp+78h] [-820h] BYREF
  _BYTE v99[3]; // [sp+79h] [-81Fh] BYREF
  char v100[2048]; // [sp+98h] [-800h] BYREF

  v96 = s;
  if ( status_code )
    *status_code = -1;
  v89 = status_code;
  v4 = (char *)malloc(0x800u);
  if ( v4 )
  {
    v5 = v4;
    v97 = 2048;
    v6 = malloc(0x800u);
    if ( v6 )
    {
      ptr = v6;
      v7 = v100;
      v8 = -1;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v87 = size;
      v98 = 0;
      v88 = 0;
      src = v100;
      v85 = v99;
      v86 = 2048;
      v93 = 0;
LABEL_6:
      while ( 1 )
      {
        v94 = v8;
        v13 = receivedata(v96, v7, 2048, 5000);
        if ( v13 <= 0 )
          break;
        n = v9;
        v14 = v13;
        v15 = v10;
        v16 = v5;
        while ( !v12 )
        {
          v10 = v14 + v15;
          if ( v97 >= v14 + v15 )
          {
            v18 = src;
            v5 = v16;
          }
          else
          {
            v17 = (char *)realloc(v16, v14 + v15);
            v18 = src;
            v5 = v17;
            v97 = v14 + v15;
            if ( !v17 )
            {
              free(v16);
              free(ptr);
              *v87 = -1;
              return 0;
            }
          }
          memcpy(&v5[v15], v18, v14);
          if ( v10 >= 2 )
          {
            v19 = 0;
            do
            {
              v20 = (unsigned __int8)v5[v19];
              if ( v20 == 10 )
              {
                v21 = v19 + 1;
                v12 = v19 + 2;
                if ( v5[v19 + 1] != 0xA )
                  v12 = 0;
              }
              else if ( v20 == 13 )
              {
                v21 = v19 + 1;
                v12 = 0;
                if ( v5[v19 + 1] == 10 )
                {
                  v21 = v19 + 2;
                  if ( v19 + 2 >= v10 )
                  {
                    v12 = 0;
                  }
                  else
                  {
                    v12 = 0;
                    if ( v5[v21] == 13 )
                    {
                      v21 = v19 + 3;
                      if ( v19 + 3 >= v10 )
                      {
                        v12 = 0;
                      }
                      else
                      {
                        v12 = v19 + 4;
                        if ( v5[v21] != 0xA )
                          v12 = 0;
                      }
                    }
                  }
                }
              }
              else
              {
                v21 = v19;
                v12 = 0;
              }
              v19 = v21 + 1;
            }
            while ( v21 + 1 < v10 - 1 && !v12 );
            if ( v12 )
            {
              v84 = v11;
              if ( v12 >= 2 )
              {
                v37 = v12 - 1;
                v91 = v12 - 1;
                if ( v89 )
                {
                  v38 = v14 + v15;
                  v39 = v5 + 1;
                  v40 = v12 - 1;
                  v41 = 0;
                  v42 = 0;
                  v43 = 0;
                  v44 = 0;
                  v78 = v38;
                  while ( 1 )
                  {
                    v46 = (unsigned __int8)v5[v44];
                    if ( v43 > 0 && v43 >= v42 && v46 == 58 )
                    {
                      v45 = v44;
                      if ( v44 < v37 )
                      {
                        while ( 1 )
                        {
                          v47 = (unsigned __int8)v39[v45];
                          if ( v47 != 32 && v47 != 9 )
                            break;
                          if ( v40 == ++v45 )
                          {
                            v45 = v37;
                            break;
                          }
                        }
                      }
                      v41 = v45 + 1;
                      v42 = v44;
                    }
                    else if ( v46 == 13 || v46 == 10 )
                    {
                      if ( v43 )
                      {
                        if ( v43 >= v42 || v42 >= v41 )
                          goto LABEL_114;
                        v48 = &v5[v43];
                        v79 = v41;
                        v81 = v42 - v43;
                        if ( !strncasecmp(&v5[v43], "content-length", v42 - v43) )
                        {
                          v53 = strtol(&v5[v79], 0u, 10);
                          v37 = v91;
                          v40 = v12 - 1;
                          v94 = v53;
LABEL_114:
                          v41 = 0;
                          if ( v44 < v10 )
                            goto LABEL_121;
                          goto LABEL_115;
                        }
                        if ( !strncasecmp(v48, "transfer-encoding", v81) )
                        {
                          v54 = strncasecmp(&v5[v79], "chunked", 7u);
                          v55 = v88;
                          v37 = v91;
                          v40 = v12 - 1;
                          if ( !v54 )
                            v55 = 1;
                          v88 = v55;
                          v41 = 0;
                          if ( v44 >= v10 )
                            goto LABEL_115;
                          do
                          {
LABEL_121:
                            v56 = (unsigned __int8)v5[v44];
                            if ( v56 != 13 && v56 != 10 )
                            {
                              v45 = v44;
                              v43 = v44;
                              v42 = v44;
                              goto LABEL_82;
                            }
                            ++v44;
                          }
                          while ( v38 != v44 );
                          v45 = v10;
                          v43 = v10;
                          v42 = v10;
                          goto LABEL_82;
                        }
                        v37 = v91;
                        v40 = v12 - 1;
                        v41 = 0;
                        if ( v44 < v10 )
                          goto LABEL_121;
                      }
                      else
                      {
                        v49 = v89;
                        v50 = v39;
                        v51 = v44;
                        if ( v44 > 0 )
                        {
                          while ( 1 )
                          {
                            if ( *(v50 - 1) == 32 )
                            {
                              if ( *v49 >= 0 )
                              {
                                v38 = v78;
                                v39 = v5 + 1;
                                v40 = v12 - 1;
                                v41 = 0;
                                if ( v44 < v10 )
                                  goto LABEL_121;
                                goto LABEL_115;
                              }
                              v52 = strtol(v50, 0u, 10);
                              v37 = v91;
                              *v49 = v52;
                            }
                            --v51;
                            ++v50;
                            if ( !v51 )
                            {
                              v38 = v78;
                              v39 = v5 + 1;
                              v40 = v12 - 1;
                              v41 = 0;
                              if ( v44 < v10 )
                                goto LABEL_121;
                              goto LABEL_115;
                            }
                          }
                        }
                        v38 = v78;
                        v39 = v5 + 1;
                        v40 = v12 - 1;
                        v41 = 0;
                        if ( v44 < v10 )
                          goto LABEL_121;
                      }
LABEL_115:
                      v45 = v44;
                      v43 = v44;
                      v42 = v44;
                    }
                    else
                    {
                      v45 = v44;
                    }
LABEL_82:
                    v44 = v45 + 1;
                    if ( v45 + 1 >= v37 )
                      goto LABEL_163;
                  }
                }
                v57 = v14 + v15;
                v58 = 0;
                v59 = 0;
                v60 = 0;
                v61 = 0;
                while ( 2 )
                {
                  v63 = (unsigned __int8)v5[v61];
                  if ( v60 > 0 && v60 >= v59 && v63 == 58 )
                  {
                    v62 = v61;
                    if ( v61 < v37 )
                    {
                      v62 = v61;
                      while ( 1 )
                      {
                        v64 = (unsigned __int8)v5[v62 + 1];
                        if ( v64 != 32 && v64 != 9 )
                          break;
                        if ( v12 - 1 == ++v62 )
                        {
                          v62 = v37;
                          break;
                        }
                      }
                    }
                    v58 = v62 + 1;
                    v59 = v61;
                    goto LABEL_132;
                  }
                  if ( v63 != 13 && v63 != 10 )
                  {
                    v62 = v61;
                    goto LABEL_132;
                  }
                  if ( v60 < v59 && v59 < v58 )
                  {
                    v80 = v58;
                    v82 = &v5[v60];
                    v83 = v59 - v60;
                    if ( strncasecmp(&v5[v60], "content-length", v59 - v60) )
                    {
                      if ( strncasecmp(v82, "transfer-encoding", v83) )
                      {
                        v37 = v91;
                        v58 = 0;
                        if ( v61 < v10 )
                          goto LABEL_159;
                      }
                      else
                      {
                        v66 = strncasecmp(&v5[v80], "chunked", 7u);
                        v67 = v88;
                        v37 = v91;
                        if ( !v66 )
                          v67 = 1;
                        v88 = v67;
                        v58 = 0;
                        if ( v61 < v10 )
                        {
                          do
                          {
LABEL_159:
                            v68 = (unsigned __int8)v5[v61];
                            if ( v68 != 13 && v68 != 10 )
                            {
                              v62 = v61;
                              v60 = v61;
                              v59 = v61;
                              goto LABEL_132;
                            }
                            ++v61;
                          }
                          while ( v57 != v61 );
                          v62 = v10;
                          v60 = v10;
                          v59 = v10;
LABEL_132:
                          v61 = v62 + 1;
                          if ( v62 + 1 >= v37 )
                            goto LABEL_163;
                          continue;
                        }
                      }
LABEL_153:
                      v62 = v61;
                      v60 = v61;
                      v59 = v61;
                      goto LABEL_132;
                    }
                    v65 = strtol(&v5[v80], 0u, 10);
                    v37 = v91;
                    v94 = v65;
                  }
                  break;
                }
                v58 = 0;
                if ( v61 < v10 )
                  goto LABEL_159;
                goto LABEL_153;
              }
LABEL_163:
              v14 = v10 - v12;
              memcpy(v100, &v5[v12], v10 - v12);
              v7 = (char *)src;
              v8 = v94;
              v11 = v84;
              v9 = n;
              if ( !v88 )
                goto LABEL_164;
LABEL_36:
              if ( v14 > 0 )
              {
                v22 = 0;
                while ( 2 )
                {
                  v91 = v93;
                  do
                  {
                    if ( v9 )
                    {
                      v32 = (char *)ptr;
                      goto LABEL_65;
                    }
                    if ( !v11 )
                    {
                      v22 += v7[v22] == 0xD;
                      if ( v22 < v14 )
                        v22 += v7[v22] == 0xA;
                    }
                    if ( v22 < v14 )
                    {
                      v24 = v8;
                      v23 = _ctype_b_loc();
                      v7 = (char *)src;
                      v25 = (int)v85;
                      v26 = *v23;
                      v8 = v24;
                      while ( v11 < 0x1F )
                      {
                        v27 = v7[v22];
                        if ( (v26[v27] & 0x10) == 0 )
                          break;
                        v28 = (_BYTE *)(v25 + v11);
                        ++v22;
                        ++v11;
                        *v28 = 0;
                        *(v28 - 1) = v27;
                        if ( v14 == v22 )
                        {
                          v9 = 0;
                          v93 = v91;
                          if ( v8 > 0 )
                            goto LABEL_178;
                          goto LABEL_6;
                        }
                      }
                    }
                    if ( v22 < v14 )
                    {
                      do
                      {
                        v29 = (unsigned __int8)v7[v22];
                        if ( v29 == 10 || v29 == 13 )
                        {
                          v22 += v29 == 0xD;
                          goto LABEL_55;
                        }
                        ++v22;
                      }
                      while ( v14 != v22 );
                      v9 = 0;
                      v93 = v91;
                      if ( v8 > 0 )
                        goto LABEL_178;
                      goto LABEL_6;
                    }
LABEL_55:
                    if ( v22 >= v14 )
                    {
                      v9 = 0;
                      v93 = v91;
                      if ( v8 > 0 )
                        goto LABEL_178;
                      goto LABEL_6;
                    }
                    v9 = 0;
                  }
                  while ( v7[v22] != 10 );
                  if ( !v11 )
                  {
                    v98 = 0;
                    v93 = v91;
                    goto end_of_stream;
                  }
                  v30 = &v98;
                  v9 = 0;
                  do
                  {
                    while ( 1 )
                    {
                      v31 = (unsigned __int8)*v30;
                      if ( (unsigned __int8)(v31 - 0x30) < 0xAu )
                        break;
                      v9 = 16 * v9 - 0x57 + (char)(v31 | 0x20);
                      --v11;
                      ++v30;
                      if ( !v11 )
                        goto LABEL_62;
                    }
                    v9 = 16 * v9 - 0x30 + v31;
                    --v11;
                    ++v30;
                  }
                  while ( v11 );
LABEL_62:
                  v98 = 0;
                  if ( !v9 )
                  {
                    v93 = v91;
                    goto end_of_stream;
                  }
                  v32 = (char *)ptr;
                  v11 = 0;
                  ++v22;
LABEL_65:
                  v33 = v14 - v22;
                  v94 = v8;
                  if ( v9 < v14 - v22 )
                    v33 = v9;
                  n = v33;
                  v34 = v33 + v91;
                  v93 = v34;
                  if ( v86 >= v34 )
                  {
                    v36 = v32;
                  }
                  else
                  {
                    v35 = v8;
                    if ( v8 < v34 )
                      v35 = v34;
                    if ( v8 < 0 )
                      v35 = v34;
                    v86 = v35;
                    v36 = (char *)realloc(v32, v35);
                    if ( !v36 )
                    {
                      free(ptr);
                      free(v5);
                      *v87 = -1;
                      return 0;
                    }
                  }
                  ptr = v36;
                  memcpy(&v36[v91], (char *)src + v22, n);
                  v7 = (char *)src;
                  v8 = v94;
                  v22 += n;
                  v9 -= n;
                  if ( v22 < v14 )
                    continue;
                  break;
                }
              }
              goto LABEL_177;
            }
          }
          v14 = receivedata(v96, v100, 2048, 5000);
          v12 = 0;
          v15 = v10;
          v16 = v5;
          if ( v14 <= 0 )
            goto end_of_stream;
        }
        v7 = (char *)src;
        v8 = v94;
        v10 = v15;
        v9 = n;
        v5 = v16;
        if ( v88 )
          goto LABEL_36;
LABEL_164:
        v69 = v93;
        v70 = v14;
        v84 = v11;
        v94 = v8;
        if ( v8 < v14 + v93 )
          v70 = v8 - v93;
        if ( v8 >= 1 )
          v14 = v70;
        v71 = v14 + v93;
        if ( v86 >= v14 + v93 )
        {
          v75 = (char *)ptr;
        }
        else
        {
          v72 = ptr;
          v73 = v8;
          if ( v8 < v71 )
            v73 = v14 + v93;
          if ( v8 < 0 )
            v73 = v14 + v93;
          v86 = v73;
          v74 = (char *)realloc(ptr, v73);
          v69 = v93;
          v75 = v74;
          if ( !v74 )
          {
            free(v72);
            free(v5);
            *v87 = -1;
            return 0;
          }
        }
        memcpy(&v75[v69], v100, v14);
        v93 = v71;
        v7 = (char *)src;
        v8 = v94;
        v11 = v84;
        v9 = n;
        ptr = v75;
LABEL_177:
        if ( v8 > 0 )
        {
LABEL_178:
          if ( v93 >= v8 )
            break;
        }
      }
end_of_stream:
      free(v5);
      v77 = v93 == 0;
      *v87 = v93;
      if ( v77 )
      {
        free(ptr);
        return 0;
      }
      else
      {
        return ptr;
      }
    }
    else
    {
      free(v5);
      result = 0;
      *size = -1;
    }
  }
  else
  {
    result = 0;
    *size = -1;
  }
  return result;
}
