void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // r0
  char *v5; // r5
  char *v6; // r0
  unsigned int v7; // r9
  int v8; // r8
  int v9; // r0
  int v10; // r7
  int v11; // r4
  int v12; // r0
  signed int v13; // r10
  unsigned int v14; // r2
  char *v15; // r0
  _BOOL4 v16; // r3
  int v17; // r6
  int v18; // r1
  int v19; // r2
  int v20; // r2
  int *v21; // r12
  int v22; // r7
  int v23; // r1
  int v24; // r0
  int v25; // r10
  int v26; // r4
  int v27; // lr
  int v28; // r8
  int v29; // r1
  bool v30; // zf
  bool v31; // zf
  const char *v32; // r7
  int v33; // r10
  int v34; // r0
  bool v35; // cc
  int v36; // r0
  int v37; // r2
  bool v38; // zf
  unsigned int v39; // r1
  signed int v40; // r6
  const unsigned __int16 *v41; // r0
  int v42; // r1
  int v43; // r0
  bool v44; // zf
  char *v45; // r0
  char *v46; // r4
  unsigned int v47; // r7
  int v48; // t1
  int v49; // r2
  int v50; // r1
  int v51; // r2
  size_t v52; // r4
  size_t v53; // r7
  unsigned int v54; // r1
  char *v55; // r2
  size_t v56; // r7
  size_t v57; // r4
  char *v58; // r0
  char *v59; // r10
  char *v61; // r0
  char *v62; // r0
  size_t v63; // [sp+8h] [bp-880h]
  int *v64; // [sp+Ch] [bp-87Ch]
  int v65; // [sp+10h] [bp-878h]
  unsigned int v66; // [sp+14h] [bp-874h]
  int v67; // [sp+18h] [bp-870h]
  unsigned int v68; // [sp+1Ch] [bp-86Ch]
  unsigned int v69; // [sp+1Ch] [bp-86Ch]
  char *v70; // [sp+20h] [bp-868h]
  char *v71; // [sp+24h] [bp-864h]
  int v72; // [sp+2Ch] [bp-85Ch]
  void *ptr; // [sp+34h] [bp-854h]
  char *nptr; // [sp+3Ch] [bp-84Ch]
  unsigned int v77; // [sp+40h] [bp-848h]
  int v78; // [sp+44h] [bp-844h]
  char v79[32]; // [sp+48h] [bp-840h] BYREF
  char src[2080]; // [sp+68h] [bp-820h] BYREF

  if ( status_code )
    *status_code = -1;
  v4 = (char *)malloc(0x800u);
  if ( !v4 )
    goto LABEL_146;
  v5 = v4;
  v6 = (char *)malloc(0x800u);
  if ( !v6 )
  {
    free(v5);
LABEL_146:
    *size = -1;
    return 0;
  }
  v70 = v6;
  v7 = 0;
  v8 = 0;
  v64 = size;
  v65 = 0;
  v77 = 2048;
  v68 = 0;
  v79[0] = 0;
  v78 = 0;
  v9 = -1;
  v66 = 2048;
  v71 = 0;
  do
  {
    v10 = v78;
    v67 = v9;
    do
    {
      v11 = v10;
      v12 = receivedata(s, src, 2048, 5000, 0);
      if ( v12 < 1 )
        goto end_of_stream;
      v13 = v12;
      if ( v8 )
      {
        v78 = v10;
        goto LABEL_82;
      }
      v14 = v77;
      v78 = v12 + v10;
      if ( v12 + v10 <= v77 )
      {
        v15 = v5;
      }
      else
      {
        v15 = (char *)realloc(v5, v12 + v10);
        v14 = v78;
        if ( !v15 )
        {
          free(v5);
          v61 = v70;
          goto LABEL_148;
        }
      }
      v77 = v14;
      v5 = v15;
      memcpy(&v15[v10], src, v13);
      v10 = v78;
      v16 = 1;
      v8 = 0;
      v17 = 0;
      if ( v78 >= 2 )
      {
        v18 = 0;
        do
        {
          v19 = (unsigned __int8)v5[v18];
          if ( v19 == 10 )
          {
            v20 = v18 + 1;
            v17 = 0;
            if ( v5[v18 + 1] == 10 )
              v17 = v18 + 2;
            goto LABEL_29;
          }
          if ( v19 == 13 )
          {
            v20 = v18 + 1;
            v17 = 0;
            if ( v5[v18 + 1] != 10 )
              goto LABEL_29;
            v20 = v18 + 2;
            if ( v18 + 2 < v78 )
            {
              v17 = 0;
              if ( v5[v20] != 13 )
                goto LABEL_29;
              v20 = v18 + 3;
              if ( v18 + 3 < v78 )
              {
                v17 = 0;
                if ( v5[v20] == 10 )
                  v17 = v18 + 4;
                goto LABEL_29;
              }
            }
          }
          else
          {
            v20 = v18;
          }
          v17 = 0;
LABEL_29:
          v16 = v17 == 0;
          v18 = v20 + 1;
        }
        while ( v20 + 1 < v78 - 1 && !v17 );
      }
    }
    while ( v16 );
    if ( v17 >= 2 )
    {
      v21 = status_code;
      v22 = 0;
      v23 = 0;
      ptr = (void *)(v17 - 1);
      v24 = v13 + v11;
      v25 = 0;
      v26 = 0;
      v27 = v24 - 1;
      v72 = v24 - 1;
      while ( 1 )
      {
        v28 = (unsigned __int8)v5[v26];
        if ( v28 == 58 && v25 >= 1 && v23 <= v25 )
          break;
        v31 = v28 == 13;
        if ( v28 != 13 )
          v31 = v28 == 10;
        if ( v31 )
        {
          if ( !v21 || v25 )
          {
            v35 = v23 <= v25;
            if ( v23 > v25 )
              v35 = v22 <= v23;
            if ( !v35 )
            {
              v63 = v23 - v25;
              if ( !strncasecmp(&v5[v25], "content-length", v23 - v25) )
              {
                v67 = atoi(&v5[v22]);
              }
              else if ( !strncasecmp(&v5[v25], "transfer-encoding", v63) )
              {
                v30 = strncasecmp(&v5[v22], "chunked", 7u) == 0;
                v36 = v65;
                if ( v30 )
                  v36 = 1;
                v65 = v36;
              }
              v21 = status_code;
              v27 = v72;
            }
          }
          else if ( v26 >= 1 )
          {
            v32 = v5 + 1;
            v33 = v26;
            do
            {
              if ( *(v32 - 1) == 32 )
              {
                if ( *v21 > -1 )
                  break;
                v34 = atoi(v32);
                v21 = status_code;
                v27 = v72;
                *status_code = v34;
              }
              ++v32;
              --v33;
            }
            while ( v33 );
          }
          v22 = 0;
          if ( v26 < v78 )
          {
            while ( 1 )
            {
              v38 = v28 == 13;
              if ( v28 != 13 )
                v38 = v28 == 10;
              if ( !v38 )
                break;
              if ( v27 == v26 )
              {
                v23 = v78;
                v37 = v78;
                v25 = v78;
                goto LABEL_77;
              }
              v28 = (unsigned __int8)v5[++v26];
            }
          }
          v37 = v26;
          v25 = v26;
LABEL_76:
          v23 = v26;
          goto LABEL_77;
        }
        v37 = v26;
LABEL_77:
        v26 = v37 + 1;
        if ( v37 + 1 >= (int)ptr )
          goto LABEL_81;
      }
      v22 = v26 + 1;
      if ( v26 < (int)ptr )
      {
        do
        {
          v29 = (unsigned __int8)v5[v22];
          v30 = v29 == 32;
          if ( v29 != 32 )
            v30 = v29 == 9;
          if ( !v30 )
          {
            v37 = v22 - 1;
            goto LABEL_76;
          }
          ++v22;
        }
        while ( v17 != v22 );
        v37 = v17 - 1;
        v23 = v26;
        v22 = v17;
        goto LABEL_77;
      }
      v37 = v26;
      goto LABEL_76;
    }
LABEL_81:
    v13 = v78 - v17;
    memcpy(src, &v5[v17], v78 - v17);
    v8 = v17;
LABEL_82:
    if ( !v65 )
    {
      v55 = v71;
      v56 = v13;
      v57 = v66;
      if ( (unsigned int)&v71[v13] > v67 )
        v56 = v67 - (_DWORD)v71;
      if ( v67 <= 0 )
        v56 = v13;
      if ( (unsigned int)&v71[v56] <= v66 )
      {
        v59 = v70;
      }
      else
      {
        v57 = v67;
        if ( v67 < (unsigned int)&v71[v56] )
          v57 = (size_t)&v71[v56];
        if ( v67 < 0 )
          v57 = (size_t)&v71[v56];
        v58 = (char *)realloc(v70, v57);
        v55 = v71;
        v59 = v58;
        if ( !v58 )
        {
          v62 = v70;
          goto LABEL_155;
        }
      }
      v66 = v57;
      memcpy(&v55[(_DWORD)v59], src, v56);
      v70 = v59;
      v71 += v56;
LABEL_141:
      v39 = v68;
      goto LABEL_142;
    }
    if ( v13 < 1 )
      goto LABEL_141;
    v39 = v68;
    v40 = 0;
    while ( 2 )
    {
      nptr = v71;
      while ( !v39 )
      {
        if ( !v7 )
        {
          if ( src[v40] == 13 )
            ++v40;
          if ( v40 < v13 && src[v40] == 10 )
            ++v40;
        }
        if ( v40 < v13 )
        {
          v41 = *_ctype_b_loc();
          while ( v7 <= 0x1E )
          {
            v42 = (unsigned __int8)src[v40];
            if ( (v41[v42] & 0x1000) == 0 )
              break;
            ++v40;
            v79[v7 + 1] = 0;
            v79[v7++] = v42;
            if ( v13 == v40 )
            {
              v40 = v13;
              break;
            }
          }
        }
        while ( v40 < v13 )
        {
          v43 = (unsigned __int8)src[v40++];
          v44 = v43 == 13;
          if ( v43 != 13 )
            v44 = v43 == 10;
          if ( v44 )
          {
            if ( v43 != 13 )
              --v40;
            break;
          }
        }
        if ( v40 >= v13 )
        {
          v39 = 0;
          goto LABEL_142;
        }
        v39 = 0;
        if ( src[v40] == 10 )
        {
          if ( v7 )
          {
            v45 = v70;
            v39 = 0;
            v46 = v79;
            do
            {
              v47 = v39;
              v48 = (unsigned __int8)*v46++;
              v49 = v48 - 0x30;
              v50 = v48 | 0x20;
              if ( (unsigned int)(v48 - 0x30) >= 0xA )
                v49 = v50 - 0x57;
              --v7;
              v39 = v49 + 16 * v47;
            }
            while ( v7 );
            v51 = v67;
            v52 = v66;
            v7 = 0;
            v79[0] = 0;
            if ( v39 )
            {
              ++v40;
              goto LABEL_116;
            }
          }
          else
          {
            v79[0] = 0;
            v45 = v70;
          }
          v70 = v45;
          goto end_of_stream;
        }
      }
      v51 = v67;
      v52 = v66;
      v45 = v70;
LABEL_116:
      v53 = v13 - v40;
      v69 = v39;
      if ( v39 < v13 - v40 )
        v53 = v39;
      v54 = (unsigned int)&v71[v53];
      v71 += v53;
      if ( (unsigned int)&nptr[v53] > v52 )
      {
        v52 = v51;
        if ( v51 < v54 )
          v52 = (size_t)&nptr[v53];
        if ( v51 < 0 )
          v52 = (size_t)&nptr[v53];
        v45 = (char *)realloc(v45, v52);
        if ( !v45 )
        {
          v62 = v70;
LABEL_155:
          free(v62);
          v61 = v5;
LABEL_148:
          free(v61);
          *v64 = -1;
          return 0;
        }
      }
      v70 = v45;
      v66 = v52;
      memcpy(&nptr[(_DWORD)v45], &src[v40], v53);
      v40 += v53;
      v39 = v69 - v53;
      if ( v40 < v13 )
        continue;
      break;
    }
LABEL_142:
    v9 = v67;
    v68 = v39;
  }
  while ( v67 < 1 || (unsigned int)v71 < v67 );
end_of_stream:
  free(v5);
  *v64 = (int)v71;
  if ( !v71 )
  {
    free(v70);
    return 0;
  }
  return v70;
}
