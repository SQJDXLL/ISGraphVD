void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v5; // x0
  char *v6; // x21
  char *v7; // x27
  unsigned int v8; // w22
  int v9; // w19
  int v10; // w20
  __int64 v11; // x9
  __int64 v12; // x10
  int v13; // w25
  bool v14; // w10
  unsigned int v15; // w23
  int v16; // w0
  int v17; // w26
  unsigned int v18; // w8
  char *v19; // x0
  int v20; // w9
  int v21; // w11
  __int64 v22; // x11
  __int64 v23; // x10
  int v24; // w11
  int v25; // w9
  __int64 v26; // x25
  int v27; // w13
  int v28; // w8
  int v29; // w11
  int v30; // w9
  int v31; // w8
  int v32; // w23
  int v33; // w10
  int v34; // w27
  __int64 v35; // x9
  int v36; // w12
  int v37; // w10
  const char *v38; // x26
  size_t v39; // x25
  int v40; // w0
  int v41; // w8
  int *v42; // x9
  const char *v43; // x26
  __int64 v44; // x25
  int v45; // w0
  char *v46; // x8
  __int64 v47; // x9
  int v48; // w10
  unsigned int v49; // w9
  __int64 v50; // x25
  bool v51; // cc
  int v52; // w8
  int v53; // w25
  unsigned int v54; // w9
  unsigned int v55; // w23
  bool v56; // nf
  size_t v57; // x1
  char *v58; // x0
  char *v59; // x28
  unsigned int v60; // w22
  const unsigned __int16 *v61; // x10
  __int64 v62; // x8
  __int64 v63; // x14
  char *v64; // x15
  int v65; // w8
  __int64 v66; // x8
  char *v67; // x9
  int v68; // t1
  int v69; // w11
  int v70; // w10
  unsigned int v71; // w27
  unsigned int v72; // w9
  size_t v74; // x1
  char *v75; // x0
  int v76; // w27
  int v77; // w10
  int v78; // w28
  __int64 v79; // x9
  int v80; // w12
  int v81; // w10
  const char *v82; // x25
  size_t v83; // x26
  int v84; // w0
  int v85; // w8
  char *v86; // x8
  __int64 v87; // x9
  int v88; // w10
  char *v89; // x0
  void *v91; // x0
  int v92; // [xsp+4h] [xbp-89Ch]
  int v93; // [xsp+4h] [xbp-89Ch]
  char *v94; // [xsp+8h] [xbp-898h]
  int *v95; // [xsp+20h] [xbp-880h]
  int v96; // [xsp+34h] [xbp-86Ch]
  __int64 v97; // [xsp+38h] [xbp-868h]
  unsigned int v98; // [xsp+38h] [xbp-868h]
  unsigned int v99; // [xsp+44h] [xbp-85Ch]
  unsigned int v100; // [xsp+44h] [xbp-85Ch]
  __int64 v102; // [xsp+58h] [xbp-848h]
  __int64 v103; // [xsp+58h] [xbp-848h]
  __int64 v104; // [xsp+58h] [xbp-848h]
  __int64 v105; // [xsp+58h] [xbp-848h]
  int v106; // [xsp+64h] [xbp-83Ch]
  __int64 v107; // [xsp+68h] [xbp-838h]
  __int64 v108; // [xsp+68h] [xbp-838h]
  unsigned int v109; // [xsp+70h] [xbp-830h]
  unsigned int v110; // [xsp+74h] [xbp-82Ch]
  char v111[32]; // [xsp+78h] [xbp-828h] BYREF
  char src[2056]; // [xsp+98h] [xbp-808h] BYREF

  if ( status_code )
    *status_code = -1;
  v5 = (char *)malloc(0x800uLL);
  if ( !v5 )
  {
    v7 = 0LL;
LABEL_188:
    *size = -1;
    return v7;
  }
  v6 = v5;
  v7 = (char *)malloc(0x800uLL);
  if ( !v7 )
  {
    free(v6);
    goto LABEL_188;
  }
  v95 = size;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v109 = 0;
  v110 = 2048;
  v11 = 0xFFFFFFFFLL;
  v12 = 2048LL;
  v96 = 0;
  v99 = 0;
  v111[0] = 0;
  v106 = s;
  while ( 1 )
  {
    v13 = v10;
    v107 = v12;
    v102 = v11;
    do
    {
      v15 = v9;
      v16 = receivedata((unsigned int)s, src, 2048LL, 5000LL, 0LL);
      if ( v16 < 1 )
        goto end_of_stream;
      v17 = v16;
      if ( v13 )
      {
        v10 = v13;
        v26 = v102;
        goto LABEL_82;
      }
      v18 = v110;
      v9 += v16;
      if ( v16 + v15 <= v110 )
      {
        v19 = v6;
      }
      else
      {
        v19 = (char *)realloc(v6, (unsigned int)v9);
        v18 = v9;
        if ( !v19 )
        {
          free(v6);
          v89 = v7;
          goto LABEL_189;
        }
      }
      v6 = v19;
      v110 = v18;
      memcpy(&v19[v15], src, (unsigned int)v17);
      if ( v9 >= 2 )
      {
        v20 = 0;
        while ( 1 )
        {
          v21 = (unsigned __int8)v6[v20];
          if ( v21 == 10 )
            break;
          if ( v21 == 13 )
          {
            LODWORD(v22) = v20 + 1;
            if ( v6[v20 + 1] == 10 )
            {
              v22 = v20 + 2LL;
              if ( v20 + 2 < v9 && v6[v22] == 13 )
              {
                v23 = v20 + 3LL;
                if ( (int)v23 >= v9 )
                {
                  v10 = 0;
                }
                else
                {
                  v24 = (unsigned __int8)v6[v23];
                  v25 = v20 + 4;
LABEL_25:
                  if ( v24 == 10 )
                    v10 = v25;
                  else
                    v10 = 0;
                }
                v20 = v23;
                goto LABEL_31;
              }
            }
            v10 = 0;
            v20 = v22;
          }
          else
          {
            v10 = 0;
          }
LABEL_31:
          ++v20;
          v14 = v10 == 0;
          if ( v20 >= v9 - 1 || v10 )
            goto LABEL_8;
        }
        v23 = v20 + 1LL;
        v24 = (unsigned __int8)v6[v23];
        v25 = v20 + 2;
        goto LABEL_25;
      }
      v10 = 0;
      v14 = 1;
LABEL_8:
      v13 = 0;
    }
    while ( v14 );
    v94 = v7;
    if ( v10 >= 2 )
    {
      v27 = v10 - 1;
      v97 = v10 - 1;
      v28 = (int)status_code;
      v26 = v102;
      v29 = 0;
      v30 = 0;
      if ( status_code )
      {
        v31 = 0;
        v32 = 0;
        while ( 1 )
        {
          v33 = (unsigned __int8)v6[v32];
          v34 = v32;
          if ( v33 == 58 && v31 >= 1 && v30 <= v31 )
            break;
          if ( v33 == 13 || v33 == 10 )
          {
            if ( v31 )
            {
              v37 = v30 - v31;
              if ( v30 > v31 && v29 > v30 )
              {
                v103 = v26;
                v38 = &v6[v31];
                v39 = v37;
                v92 = v29;
                if ( !strncasecmp(v38, "content-length", v37) )
                {
                  v26 = strtol(&v6[v92], 0uLL, 10);
                }
                else
                {
                  if ( !strncasecmp(v38, "transfer-encoding", v39) )
                  {
                    v40 = strncasecmp(&v6[v92], "chunked", 7uLL);
                    v41 = v96;
                    if ( !v40 )
                      v41 = 1;
                    v96 = v41;
                  }
LABEL_60:
                  v26 = v103;
                }
                v27 = v10 - 1;
              }
            }
            else
            {
              v42 = status_code;
              if ( v32 >= 1 )
              {
                v43 = v6 + 1;
                v103 = v26;
                v44 = (unsigned int)v32;
                while ( 1 )
                {
                  if ( *(v43 - 1) == 32 )
                  {
                    if ( (*v42 & 0x80000000) == 0 )
                      goto LABEL_60;
                    v45 = strtol(v43, 0uLL, 10);
                    v42 = status_code;
                    *status_code = v45;
                  }
                  --v44;
                  ++v43;
                  if ( !v44 )
                    goto LABEL_60;
                }
              }
            }
            if ( v32 < v9 )
            {
              v46 = &v6[v32];
              v47 = v9 - (__int64)v32;
              s = v106;
              do
              {
                v48 = (unsigned __int8)*v46;
                if ( v48 != 13 && v48 != 10 )
                {
                  v29 = 0;
                  v31 = v32;
                  v30 = v32;
                  goto LABEL_40;
                }
                ++v32;
                --v47;
                ++v46;
              }
              while ( v47 );
              v29 = 0;
              v32 = v9;
              v31 = v9;
              v30 = v9;
              goto LABEL_40;
            }
            v29 = 0;
            v31 = v32;
LABEL_78:
            s = v106;
            v30 = v32;
            goto LABEL_40;
          }
          s = v106;
LABEL_40:
          if ( ++v32 >= v27 )
            goto LABEL_81;
        }
        if ( v32 < v27 )
        {
          v35 = 0LL;
          s = v106;
          do
          {
            v36 = (unsigned __int8)v6[v32 + 1 + v35];
            if ( v36 != 9 && v36 != 32 )
            {
              v32 += v35;
              v29 = v32 + 1;
              v30 = v34;
              goto LABEL_40;
            }
            ++v35;
          }
          while ( v97 - v32 != v35 );
          v32 = v27;
          v30 = v34;
          v29 = v10;
          goto LABEL_40;
        }
        v29 = v32 + 1;
        goto LABEL_78;
      }
      v76 = 0;
      while ( 2 )
      {
        v77 = (unsigned __int8)v6[v76];
        v78 = v76;
        if ( v77 == 58 && v28 >= 1 && v30 <= v28 )
        {
          if ( v76 >= v27 )
          {
LABEL_153:
            v30 = v78;
            s = v106;
            v29 = v76 + 1;
          }
          else
          {
            v79 = 0LL;
            do
            {
              v80 = (unsigned __int8)v6[v76 + 1 + v79];
              if ( v80 != 32 && v80 != 9 )
              {
                v76 += v79;
                goto LABEL_153;
              }
              ++v79;
            }
            while ( v97 - v76 != v79 );
            v76 = v27;
            v30 = v78;
            v29 = v10;
LABEL_175:
            s = v106;
          }
        }
        else
        {
          if ( v77 != 13 && v77 != 10 )
            goto LABEL_175;
          v81 = v30 - v28;
          if ( v30 > v28 && v29 > v30 )
          {
            v105 = v26;
            v82 = &v6[v28];
            v83 = v81;
            v93 = v29;
            if ( !strncasecmp(v82, "content-length", v81) )
            {
              v26 = strtol(&v6[v93], 0uLL, 10);
            }
            else
            {
              if ( !strncasecmp(v82, "transfer-encoding", v83) )
              {
                v84 = strncasecmp(&v6[v93], "chunked", 7uLL);
                v85 = v96;
                if ( !v84 )
                  v85 = 1;
                v96 = v85;
              }
              v26 = v105;
            }
            v27 = v10 - 1;
          }
          if ( v76 >= v9 )
          {
            v30 = v76;
            s = v106;
            v29 = 0;
            v28 = v76;
          }
          else
          {
            s = v106;
            v86 = &v6[v76];
            v87 = v9 - (__int64)v76;
            do
            {
              v88 = (unsigned __int8)*v86;
              if ( v88 != 13 && v88 != 10 )
              {
                v29 = 0;
                v28 = v76;
                v30 = v76;
                goto LABEL_154;
              }
              ++v76;
              --v87;
              ++v86;
            }
            while ( v87 );
            v29 = 0;
            v76 = v9;
            v28 = v9;
            v30 = v9;
          }
        }
LABEL_154:
        if ( ++v76 >= v27 )
          goto LABEL_81;
        continue;
      }
    }
    v26 = v102;
LABEL_81:
    v17 = v9 - v10;
    memcpy(src, &v6[v10], v9 - v10);
    v7 = v94;
LABEL_82:
    v12 = v107;
    v49 = v99;
    v104 = v26;
    if ( v96 )
    {
      if ( v17 >= 1 )
      {
        LODWORD(v50) = 0;
        v98 = v99;
        while ( 2 )
        {
          v108 = v12;
          do
          {
            if ( v8 )
            {
              v59 = v7;
              goto LABEL_136;
            }
            v60 = v109;
            if ( !v109 )
            {
              v50 = src[(int)v50] == 13 ? (int)v50 + 1LL : (int)v50;
              if ( (int)v50 < v17 && src[v50] == 10 )
                LODWORD(v50) = v50 + 1;
            }
            if ( (int)v50 < v17 )
            {
              v60 = v17 + v109 - v50;
              v61 = *_ctype_b_loc();
              v62 = 0LL;
              while ( (unsigned __int64)v109 + v62 <= 0x1E )
              {
                v63 = (unsigned __int8)src[(int)v50 + v62];
                if ( (v61[v63] & 0x1000) == 0 )
                  break;
                v64 = &v111[v109 + 1 + v62++];
                *(v64 - 1) = v63;
                *v64 = 0;
                if ( (unsigned int)v17 - (__int64)(int)v50 == v62 )
                {
                  LODWORD(v50) = v17;
                  goto LABEL_119;
                }
              }
              LODWORD(v50) = v50 + v62;
              v60 = v109 + v62;
LABEL_119:
              v12 = v108;
            }
            v50 = (int)v50;
            while ( v50 < (unsigned int)v17 )
            {
              v65 = (unsigned __int8)src[v50++];
              if ( v65 == 13 || v65 == 10 )
              {
                if ( v65 != 13 )
                  LODWORD(v50) = v50 - 1;
                break;
              }
            }
            v109 = v60;
            if ( v17 <= (int)v50 )
            {
              v49 = v98;
              v8 = 0;
              goto LABEL_149;
            }
            v8 = 0;
          }
          while ( src[(int)v50] != 10 );
          if ( v109 )
          {
            v8 = 0;
            v66 = v109;
            v67 = v111;
            do
            {
              v68 = (unsigned __int8)*v67++;
              v69 = v68 - 0x30;
              v70 = (v68 | 0x20) - 0x57;
              if ( (unsigned int)(v68 - 0x30) < 0xA )
                v70 = v69;
              --v66;
              v8 = v70 + 16 * v8;
            }
            while ( v66 );
            v111[0] = 0;
            if ( v8 )
            {
              LODWORD(v12) = v108;
              v59 = v7;
              LODWORD(v50) = v50 + 1;
              v109 = 0;
LABEL_136:
              if ( v8 >= v17 - (int)v50 )
                v71 = v17 - v50;
              else
                v71 = v8;
              v72 = v71 + v98;
              v100 = v71 + v98;
              if ( v71 + v98 > (unsigned int)v12 )
              {
                if ( (unsigned int)v104 < v72 || (int)v104 < 0 )
                  v74 = v72;
                else
                  v74 = (unsigned int)v104;
                v108 = v74;
                v75 = (char *)realloc(v59, v74);
                if ( !v75 )
                {
                  v91 = v59;
                  goto LABEL_196;
                }
                v59 = v75;
              }
              memcpy(&v59[v98], &src[(int)v50], v71);
              LODWORD(v50) = v71 + v50;
              v8 -= v71;
              v49 = v71 + v98;
              v7 = v59;
              s = v106;
              v12 = v108;
              v98 = v100;
              if ( (int)v50 >= v17 )
                goto LABEL_149;
              continue;
            }
          }
          else
          {
            v111[0] = 0;
          }
          break;
        }
        v99 = v98;
end_of_stream:
        free(v6);
        *v95 = v99;
        if ( !v99 )
        {
          free(v7);
          return 0LL;
        }
        return v7;
      }
      goto LABEL_149;
    }
    v51 = v17 + v99 <= (unsigned int)v26 || (int)v26 <= 0;
    v52 = v26;
    if ( v51 )
      v53 = v17;
    else
      v53 = v26 - v99;
    v54 = v99;
    v55 = v53 + v99;
    if ( v53 + v99 <= (unsigned int)v107 )
      goto LABEL_100;
    v56 = v52 < v55 || v52 < 0;
    v57 = v56 ? v55 : (unsigned int)v52;
    v107 = v57;
    v58 = (char *)realloc(v7, v57);
    if ( !v58 )
      break;
    v54 = v99;
    v7 = v58;
LABEL_100:
    memcpy(&v7[v54], src, v53);
    v12 = v107;
    v49 = v53 + v99;
LABEL_149:
    v99 = v49;
    v11 = v104;
    if ( (int)v104 >= 1 && v99 >= (unsigned int)v104 )
      goto end_of_stream;
  }
  v91 = v7;
LABEL_196:
  free(v91);
  v89 = v6;
LABEL_189:
  free(v89);
  v7 = 0LL;
  *v95 = -1;
  return v7;
}
