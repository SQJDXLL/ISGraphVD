void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // r0
  char *v5; // r9
  char *v6; // r0
  int v7; // r2
  signed int v8; // r3
  int v9; // r11
  unsigned int v10; // r7
  int v11; // r6
  int v12; // r0
  signed int v13; // r8
  int v14; // r10
  char *v15; // r5
  int v16; // r1
  int v17; // r2
  int v18; // r2
  int *v19; // r3
  int v20; // r12
  int v21; // r10
  int v22; // r5
  int v23; // r1
  int v24; // r4
  int v25; // r8
  int v26; // r2
  int v27; // r2
  int v28; // r1
  bool v29; // zf
  bool v30; // zf
  const char *v31; // r5
  int v32; // r4
  int v33; // r0
  bool v34; // cc
  int v35; // r0
  int v36; // r0
  bool v37; // zf
  signed int v38; // r5
  const unsigned __int16 *v39; // r0
  int v40; // r1
  signed int v41; // r0
  int v42; // r1
  bool v43; // zf
  char *v44; // r0
  char *v45; // r12
  int v46; // t1
  int v47; // r2
  int v48; // r1
  size_t v49; // r10
  int v50; // r2
  size_t v51; // r1
  int v52; // r2
  size_t v53; // r1
  size_t v54; // r5
  char *v55; // r0
  char *v56; // r8
  char *v58; // r0
  size_t v59; // [sp+Ch] [bp-87Ch]
  int v60; // [sp+14h] [bp-874h]
  unsigned int v61; // [sp+1Ch] [bp-86Ch]
  int *v62; // [sp+20h] [bp-868h]
  int v63; // [sp+24h] [bp-864h]
  signed int v64; // [sp+28h] [bp-860h]
  signed int v65; // [sp+28h] [bp-860h]
  int v66; // [sp+2Ch] [bp-85Ch]
  char *ptr; // [sp+30h] [bp-858h]
  void *ptra; // [sp+30h] [bp-858h]
  int v69; // [sp+34h] [bp-854h]
  unsigned int v72; // [sp+40h] [bp-848h]
  char v73[32]; // [sp+44h] [bp-844h] BYREF
  char src[2084]; // [sp+64h] [bp-824h] BYREF

  if ( status_code )
    *status_code = -1;
  v4 = (char *)malloc(0x800u);
  if ( !v4 )
    goto LABEL_147;
  v5 = v4;
  v72 = 2048;
  v6 = (char *)malloc(0x800u);
  if ( !v6 )
  {
LABEL_145:
    v58 = v5;
    goto LABEL_146;
  }
  ptr = v6;
  v7 = -1;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v62 = size;
  v73[0] = 0;
  v63 = 0;
  v61 = 2048;
  v69 = 0;
  do
  {
    v64 = v8;
    v66 = v7;
    v12 = receivedata(s, src, 2048, 5000, 0);
    if ( v12 < 1 )
      break;
    v13 = v12;
    v14 = v9;
    v15 = v5;
    while ( 1 )
    {
      if ( v11 )
      {
        v9 = v14;
        v5 = v15;
        goto LABEL_83;
      }
      v9 = v13 + v14;
      if ( v13 + v14 <= v72 )
      {
        v5 = v15;
      }
      else
      {
        v5 = (char *)realloc(v15, v13 + v14);
        v72 = v13 + v14;
        if ( !v5 )
        {
          free(v15);
          v58 = ptr;
LABEL_146:
          free(v58);
LABEL_147:
          *size = -1;
          return 0;
        }
      }
      memcpy(&v5[v14], src, v13);
      if ( v9 >= 2 )
        break;
LABEL_9:
      v11 = 0;
      v13 = receivedata(s, src, 2048, 5000, 0);
      v14 = v9;
      v15 = v5;
      if ( v13 <= 0 )
        goto end_of_stream;
    }
    v16 = 0;
    do
    {
      v17 = (unsigned __int8)v5[v16];
      if ( v17 == 10 )
      {
        v18 = v16 + 1;
        v11 = 0;
        if ( v5[v16 + 1] == 10 )
          v11 = v16 + 2;
      }
      else
      {
        if ( v17 != 13 )
        {
          v18 = v16;
LABEL_30:
          v11 = 0;
          goto LABEL_31;
        }
        v18 = v16 + 1;
        v11 = 0;
        if ( v5[v16 + 1] == 10 )
        {
          v18 = v16 + 2;
          if ( v16 + 2 >= v9 )
            goto LABEL_30;
          v11 = 0;
          if ( v5[v18] == 13 )
          {
            v18 = v16 + 3;
            if ( v16 + 3 >= v9 )
              goto LABEL_30;
            v11 = 0;
            if ( v5[v18] == 10 )
              v11 = v16 + 4;
          }
        }
      }
LABEL_31:
      v16 = v18 + 1;
    }
    while ( v18 + 1 < v9 - 1 && !v11 );
    if ( !v11 )
      goto LABEL_9;
    if ( v11 >= 2 )
    {
      v19 = status_code;
      v20 = v11 - 1;
      v21 = v13 + v14;
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = 0;
      do
      {
        v27 = (unsigned __int8)v5[v25];
        if ( v27 == 58 && v24 >= 1 && v23 <= v24 )
        {
          v22 = v25 + 1;
          if ( v25 < v20 )
          {
            do
            {
              v28 = (unsigned __int8)v5[v22];
              v29 = v28 == 32;
              if ( v28 != 32 )
                v29 = v28 == 9;
              if ( !v29 )
              {
                v26 = v22 - 1;
                goto LABEL_38;
              }
              ++v22;
            }
            while ( v11 != v22 );
            v26 = v20;
            v23 = v25;
            v22 = v11;
            goto LABEL_39;
          }
          v26 = v25;
        }
        else
        {
          v30 = v27 == 13;
          if ( v27 != 13 )
            v30 = v27 == 10;
          if ( !v30 )
          {
            v26 = v25;
            goto LABEL_39;
          }
          if ( !v19 || v24 )
          {
            v34 = v23 <= v24;
            if ( v23 > v24 )
              v34 = v22 <= v23;
            if ( !v34 )
            {
              v59 = v23 - v24;
              if ( !strncasecmp(&v5[v24], "content-length", v23 - v24) )
              {
                v66 = strtol(&v5[v22], 0u, 10);
              }
              else if ( !strncasecmp(&v5[v24], "transfer-encoding", v59) )
              {
                v29 = strncasecmp(&v5[v22], "chunked", 7u) == 0;
                v35 = v63;
                if ( v29 )
                  v35 = 1;
                v63 = v35;
              }
              v19 = status_code;
LABEL_74:
              v20 = v11 - 1;
            }
          }
          else if ( v25 >= 1 )
          {
            v31 = v5 + 1;
            v32 = v25;
            while ( 1 )
            {
              if ( *(v31 - 1) == 32 )
              {
                if ( *v19 > -1 )
                  goto LABEL_74;
                v33 = strtol(v31, 0u, 10);
                v19 = status_code;
                *status_code = v33;
              }
              ++v31;
              if ( !--v32 )
                goto LABEL_74;
            }
          }
          v22 = 0;
          if ( v25 < v9 )
          {
            while ( 1 )
            {
              v36 = (unsigned __int8)v5[v25];
              v37 = v36 == 13;
              if ( v36 != 13 )
                v37 = v36 == 10;
              if ( !v37 )
                break;
              if ( v21 == ++v25 )
              {
                v26 = v9;
                v24 = v9;
                v23 = v9;
                goto LABEL_39;
              }
            }
          }
          v26 = v25;
          v24 = v25;
        }
LABEL_38:
        v23 = v25;
LABEL_39:
        v25 = v26 + 1;
      }
      while ( v26 + 1 < v20 );
    }
    v13 = v9 - v11;
    memcpy(src, &v5[v11], v9 - v11);
LABEL_83:
    v8 = v64;
    if ( v63 )
    {
      if ( v13 >= 1 )
      {
        v38 = 0;
        while ( 1 )
        {
          v60 = v69;
LABEL_87:
          if ( !v8 )
            break;
          size = v62;
          v45 = ptr;
LABEL_119:
          v49 = v13 - v38;
          v65 = v8;
          if ( v8 < v13 - v38 )
            v49 = v8;
          v50 = v49 + v69;
          v69 += v49;
          if ( v49 + v60 > v61 )
          {
            ptra = v45;
            v51 = v66;
            if ( v66 < v50 )
              v51 = v50;
            v61 = v51;
            v45 = (char *)realloc(v45, v51);
            if ( !v45 )
            {
              free(ptra);
              goto LABEL_145;
            }
          }
          ptr = v45;
          memcpy(&v45[v60], &src[v38], v49);
          v38 += v49;
          v8 = v65 - v49;
          if ( v38 >= v13 )
            goto LABEL_139;
        }
        if ( !v10 )
        {
          if ( src[v38] == 13 )
            ++v38;
          if ( v38 < v13 && src[v38] == 10 )
            ++v38;
        }
        if ( v38 < v13 )
        {
          v39 = *_ctype_b_loc();
          while ( v10 <= 0x1E )
          {
            v40 = (unsigned __int8)src[v38];
            if ( (v39[v40] & 0x1000) == 0 )
              break;
            ++v38;
            v73[v10 + 1] = 0;
            v73[v10++] = v40;
            if ( v13 == v38 )
            {
              v38 = v13;
              break;
            }
          }
        }
        v41 = v13;
        if ( v38 > v13 )
          v41 = v38;
        while ( 1 )
        {
          v8 = 0;
          if ( v41 == v38 )
            break;
          v42 = (unsigned __int8)src[v38++];
          v43 = v42 == 13;
          if ( v42 != 13 )
            v43 = v42 == 10;
          if ( v43 )
          {
            if ( v42 != 13 )
              --v38;
            if ( v38 >= v13 )
              goto LABEL_139;
            v8 = 0;
            if ( src[v38] != 10 )
              goto LABEL_87;
            if ( v10 )
            {
              v8 = 0;
              v44 = v73;
              v45 = ptr;
              do
              {
                v46 = (unsigned __int8)*v44++;
                v47 = v46 - 0x30;
                v48 = v46 | 0x20;
                if ( (unsigned int)(v46 - 0x30) >= 0xA )
                  v47 = v48 - 0x57;
                --v10;
                v8 = v47 + 16 * v8;
              }
              while ( v10 );
              size = v62;
              v10 = 0;
              v73[0] = 0;
              if ( v8 )
              {
                ++v38;
                goto LABEL_119;
              }
            }
            else
            {
              size = v62;
              v73[0] = 0;
            }
            goto end_of_stream;
          }
        }
      }
      goto LABEL_139;
    }
    v52 = v69;
    v53 = v66;
    v54 = v13;
    if ( v13 + v69 > v66 )
      v54 = v66 - v69;
    if ( v66 <= 0 )
      v54 = v13;
    if ( v54 + v69 <= v61 )
    {
      v56 = ptr;
    }
    else
    {
      if ( v66 < (int)(v54 + v69) )
        v53 = v54 + v69;
      v61 = v53;
      v55 = (char *)realloc(ptr, v53);
      v52 = v69;
      v56 = v55;
      if ( !v55 )
      {
        free(ptr);
        free(v5);
        *v62 = -1;
        return 0;
      }
    }
    memcpy(&v56[v52], src, v54);
    v8 = v64;
    ptr = v56;
    v69 += v54;
LABEL_139:
    v7 = v66;
    size = v62;
  }
  while ( v66 < 1 || v69 < v66 );
end_of_stream:
  free(v5);
  *size = v69;
  if ( v69 )
    return ptr;
  free(ptr);
  return 0;
}
