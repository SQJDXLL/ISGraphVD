void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // r0
  char *v5; // r9
  void *v6; // r0
  int v7; // r2
  unsigned int v8; // r3
  int v9; // r10
  unsigned int v10; // r6
  int v11; // r4
  int v12; // r0
  signed int v13; // r8
  int v14; // r7
  char *v15; // r5
  int v16; // r1
  int v17; // r2
  int v18; // r2
  int *v19; // r3
  signed int v20; // r12
  int v21; // r11
  int v22; // r5
  int v23; // r1
  int v24; // r7
  int v25; // r8
  signed int v26; // r2
  int v27; // r2
  int v28; // r1
  bool v29; // zf
  bool v30; // zf
  bool v31; // cc
  const char *v32; // r5
  int v33; // r7
  int v34; // r0
  int v35; // r0
  int v36; // r0
  bool v37; // zf
  int v38; // r0
  int v39; // r0
  size_t v40; // r3
  signed int v41; // r7
  int v42; // r8
  int v43; // r1
  int v44; // r0
  int v45; // r11
  signed int v46; // r2
  int v47; // r2
  int v48; // r1
  bool v49; // zf
  bool v50; // zf
  bool v51; // cc
  const char *v52; // r5
  size_t v53; // r7
  int v54; // r0
  int v55; // r0
  bool v56; // zf
  signed int v57; // r5
  unsigned int v58; // r11
  const unsigned __int16 **v59; // r0
  int v60; // r12
  const unsigned __int16 *v61; // r0
  int v62; // r1
  signed int v63; // r0
  int v64; // r1
  bool v65; // zf
  char *v66; // r0
  int v67; // t1
  int v68; // r2
  int v69; // r1
  size_t v70; // r7
  unsigned int v71; // r2
  void *v72; // r7
  size_t v73; // r1
  char *v74; // r0
  void *v75; // r1
  unsigned int v76; // r1
  size_t v77; // r11
  unsigned int v78; // r7
  void *v79; // r8
  size_t v80; // r1
  char *v81; // r0
  char *v82; // r5
  const unsigned __int16 **v83; // r0
  int v84; // r12
  const unsigned __int16 *v85; // r0
  int v86; // r1
  signed int v87; // r0
  int v88; // r1
  bool v89; // zf
  char *v90; // r0
  char *v91; // r7
  int v92; // t1
  int v93; // r2
  int v94; // r1
  size_t v95; // r11
  char *v96; // r0
  unsigned int v97; // r7
  void *v99; // r0
  void *v100; // r0
  char *s1; // [sp+Ch] [bp-87Ch]
  size_t v102; // [sp+10h] [bp-878h]
  size_t v103; // [sp+14h] [bp-874h]
  _BYTE *v104; // [sp+18h] [bp-870h]
  unsigned int v105; // [sp+1Ch] [bp-86Ch]
  int *v106; // [sp+20h] [bp-868h]
  int v107; // [sp+24h] [bp-864h]
  void *ptr; // [sp+28h] [bp-860h]
  unsigned int v109; // [sp+2Ch] [bp-85Ch]
  int v110; // [sp+30h] [bp-858h]
  unsigned int v111; // [sp+34h] [bp-854h]
  int *v112; // [sp+38h] [bp-850h]
  int v113; // [sp+3Ch] [bp-84Ch]
  unsigned int v114; // [sp+40h] [bp-848h]
  char v115; // [sp+44h] [bp-844h] BYREF
  _BYTE v116[3]; // [sp+45h] [bp-843h] BYREF
  char src[2084]; // [sp+64h] [bp-824h] BYREF

  v113 = s;
  v112 = status_code;
  if ( status_code )
    *status_code = -1;
  v4 = (char *)malloc(0x800u);
  if ( !v4 )
    goto LABEL_231;
  v5 = v4;
  v114 = 2048;
  v6 = malloc(0x800u);
  if ( !v6 )
  {
    v99 = v5;
    goto LABEL_230;
  }
  ptr = v6;
  v7 = -1;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v115 = 0;
  v107 = 0;
  v104 = v116;
  v105 = 2048;
  v111 = 0;
  while ( 2 )
  {
    v109 = v8;
    v110 = v7;
    v12 = receivedata(v113, src, 2048, 5000, 0);
    if ( v12 < 1 )
      goto end_of_stream;
    v13 = v12;
    v14 = v9;
    v15 = v5;
    while ( 1 )
    {
      if ( v11 )
      {
        v9 = v14;
        v5 = v15;
        goto LABEL_125;
      }
      v9 = v13 + v14;
      if ( v13 + v14 <= v114 )
      {
        v5 = v15;
      }
      else
      {
        v5 = (char *)realloc(v15, v13 + v14);
        v114 = v13 + v14;
        if ( !v5 )
        {
          free(v15);
          v99 = ptr;
LABEL_230:
          free(v99);
LABEL_231:
          *size = -1;
          return 0;
        }
      }
      memcpy(&v5[v14], src, v13);
      if ( v9 >= 2 )
        break;
LABEL_9:
      v11 = 0;
      v13 = receivedata(v113, src, 2048, 5000, 0);
      v14 = v9;
      v15 = v5;
      if ( v13 <= 0 )
        goto end_of_stream;
    }
    v16 = 0;
    do
    {
      v17 = (unsigned __int8)v5[v16];
      if ( v17 == 10 )
      {
        v18 = v16 + 1;
        v11 = 0;
        if ( v5[v16 + 1] == 10 )
          v11 = v16 + 2;
      }
      else
      {
        if ( v17 != 13 )
        {
          v18 = v16;
LABEL_30:
          v11 = 0;
          goto LABEL_31;
        }
        v18 = v16 + 1;
        v11 = 0;
        if ( v5[v16 + 1] == 10 )
        {
          v18 = v16 + 2;
          if ( v16 + 2 >= v9 )
            goto LABEL_30;
          v11 = 0;
          if ( v5[v18] == 13 )
          {
            v18 = v16 + 3;
            if ( v16 + 3 >= v9 )
              goto LABEL_30;
            v11 = 0;
            if ( v5[v18] == 10 )
              v11 = v16 + 4;
          }
        }
      }
LABEL_31:
      v16 = v18 + 1;
    }
    while ( v18 + 1 < v9 - 1 && !v11 );
    if ( !v11 )
      goto LABEL_9;
    v106 = size;
    if ( v11 >= 2 )
    {
      v19 = v112;
      v103 = v11 - 1;
      if ( v112 )
      {
        v20 = v103;
        v21 = v13 + v14;
        v22 = 0;
        v23 = 0;
        v24 = 0;
        v25 = 0;
        while ( 1 )
        {
          v27 = (unsigned __int8)v5[v25];
          if ( v27 == 58 && v24 >= 1 && v23 <= v24 )
          {
            v22 = v25 + 1;
            if ( v25 < v20 )
            {
              do
              {
                v28 = (unsigned __int8)v5[v22];
                v29 = v28 == 9;
                if ( v28 != 9 )
                  v29 = v28 == 32;
                if ( !v29 )
                {
                  v26 = v22 - 1;
                  goto LABEL_39;
                }
                ++v22;
              }
              while ( v11 != v22 );
              v26 = v20;
              v23 = v25;
              v22 = v11;
              goto LABEL_40;
            }
            v26 = v25;
            goto LABEL_39;
          }
          v30 = v27 == 13;
          if ( v27 != 13 )
            v30 = v27 == 10;
          if ( !v30 )
          {
            v26 = v25;
            goto LABEL_40;
          }
          if ( !v24 )
            break;
          v31 = v23 <= v24;
          if ( v23 > v24 )
            v31 = v22 <= v23;
          if ( !v31 )
          {
            s1 = &v5[v24];
            v102 = v23 - v24;
            if ( strncasecmp(&v5[v24], "content-length", v23 - v24) )
            {
              if ( !strncasecmp(s1, "transfer-encoding", v102) )
              {
                v38 = strncasecmp(&v5[v22], "chunked", 7u);
                v19 = v112;
                v29 = v38 == 0;
                v39 = v107;
                if ( v29 )
                  v39 = 1;
                v107 = v39;
                v20 = v103;
                v22 = 0;
                if ( v25 < v9 )
                {
                  while ( 1 )
                  {
LABEL_76:
                    v36 = (unsigned __int8)v5[v25];
                    v37 = v36 == 13;
                    if ( v36 != 13 )
                      v37 = v36 == 10;
                    if ( !v37 )
                      break;
                    if ( v21 == ++v25 )
                    {
                      v26 = v9;
                      v24 = v9;
                      v23 = v9;
                      goto LABEL_40;
                    }
                  }
                }
              }
              else
              {
                v19 = v112;
                v20 = v103;
                v22 = 0;
                if ( v25 < v9 )
                  goto LABEL_76;
              }
              goto LABEL_38;
            }
            v35 = strtol(&v5[v22], 0u, 10);
            v19 = v112;
            v110 = v35;
            goto LABEL_75;
          }
          v22 = 0;
          if ( v25 < v9 )
            goto LABEL_76;
LABEL_38:
          v26 = v25;
          v24 = v25;
LABEL_39:
          v23 = v25;
LABEL_40:
          v25 = v26 + 1;
          if ( v26 + 1 >= v20 )
            goto LABEL_124;
        }
        v32 = v5 + 1;
        v33 = v25;
        if ( v25 >= 1 )
        {
          do
          {
            if ( *(v32 - 1) == 32 )
            {
              if ( *v19 >= 0 )
                break;
              v34 = strtol(v32, 0u, 10);
              v19 = v112;
              *v112 = v34;
            }
            ++v32;
            --v33;
          }
          while ( v33 );
        }
LABEL_75:
        v20 = v103;
        v22 = 0;
        if ( v25 < v9 )
          goto LABEL_76;
        goto LABEL_38;
      }
      v40 = v13 + v14;
      v41 = v103;
      v42 = 0;
      v43 = 0;
      v44 = 0;
      v45 = 0;
      v102 = v40;
      while ( 2 )
      {
        v47 = (unsigned __int8)v5[v45];
        if ( v47 == 58 && v44 >= 1 && v43 <= v44 )
        {
          v42 = v45 + 1;
          if ( v45 < v41 )
          {
            do
            {
              v48 = (unsigned __int8)v5[v42];
              v49 = v48 == 32;
              if ( v48 != 32 )
                v49 = v48 == 9;
              if ( !v49 )
              {
                v46 = v42 - 1;
                goto LABEL_88;
              }
              ++v42;
            }
            while ( v11 != v42 );
            v46 = v41;
            v43 = v45;
            v42 = v11;
LABEL_89:
            v45 = v46 + 1;
            if ( v46 + 1 >= v41 )
              goto LABEL_124;
            continue;
          }
          v46 = v45;
        }
        else
        {
          v50 = v47 == 13;
          if ( v47 != 13 )
            v50 = v47 == 10;
          if ( !v50 )
          {
            v46 = v45;
            goto LABEL_89;
          }
          v51 = v43 <= v44;
          if ( v43 > v44 )
            v51 = v42 <= v43;
          if ( v51 )
          {
            v42 = 0;
            if ( v45 < v9 )
              goto LABEL_118;
          }
          else
          {
            v52 = &v5[v44];
            v53 = v43 - v44;
            if ( !strncasecmp(&v5[v44], "content-length", v43 - v44) )
            {
              v110 = strtol(&v5[v42], 0u, 10);
            }
            else if ( !strncasecmp(v52, "transfer-encoding", v53) )
            {
              v29 = strncasecmp(&v5[v42], "chunked", 7u) == 0;
              v54 = v107;
              if ( v29 )
                v54 = 1;
              v107 = v54;
            }
            v40 = v102;
            v41 = v103;
            v42 = 0;
            if ( v45 < v9 )
            {
              while ( 1 )
              {
LABEL_118:
                v55 = (unsigned __int8)v5[v45];
                v56 = v55 == 13;
                if ( v55 != 13 )
                  v56 = v55 == 10;
                if ( !v56 )
                  break;
                if ( v40 == ++v45 )
                {
                  v46 = v9;
                  v44 = v9;
                  v43 = v9;
                  goto LABEL_89;
                }
              }
            }
          }
          v46 = v45;
          v44 = v45;
        }
        break;
      }
LABEL_88:
      v43 = v45;
      goto LABEL_89;
    }
LABEL_124:
    v13 = v9 - v11;
    memcpy(src, &v5[v11], v9 - v11);
    size = v106;
LABEL_125:
    v8 = v109;
    if ( !v107 )
    {
      v76 = v111;
      v106 = size;
      v77 = v13;
      if ( v13 + v111 > v110 )
        v77 = v110 - v111;
      if ( v110 <= 0 )
        v77 = v13;
      v78 = v77 + v111;
      if ( v77 + v111 <= v105 )
      {
        v82 = (char *)ptr;
      }
      else
      {
        v79 = ptr;
        v80 = v110;
        if ( v110 < v78 )
          v80 = v77 + v111;
        if ( v110 < 0 )
          v80 = v77 + v111;
        v105 = v80;
        v81 = (char *)realloc(ptr, v80);
        v76 = v111;
        v82 = v81;
        if ( !v81 )
        {
          v100 = v79;
LABEL_234:
          free(v100);
          free(v5);
          *v106 = -1;
          return 0;
        }
      }
      memcpy(&v82[v76], src, v77);
      size = v106;
      v8 = v109;
      ptr = v82;
      v111 = v78;
LABEL_225:
      v7 = v110;
      if ( v110 >= 1 && v111 >= v110 )
        goto end_of_stream;
      continue;
    }
    break;
  }
  if ( v13 < 1 )
    goto LABEL_225;
  v57 = 0;
  if ( v110 < 0 )
  {
    while ( 1 )
    {
      v103 = v111;
LABEL_187:
      if ( !v8 )
        break;
      v91 = (char *)ptr;
      v106 = size;
LABEL_219:
      v95 = v13 - v57;
      v109 = v8;
      if ( v8 < v13 - v57 )
        v95 = v8;
      v111 = v95 + v103;
      v96 = v91;
      if ( v95 + v103 > v105 )
      {
        v97 = v95 + v103;
        v96 = (char *)realloc(v96, v95 + v103);
        v75 = ptr;
        v105 = v97;
        if ( !v96 )
        {
LABEL_235:
          v100 = v75;
          goto LABEL_234;
        }
      }
      ptr = v96;
      memcpy(&v96[v103], &src[v57], v95);
      v57 += v95;
      v8 = v109 - v95;
      size = v106;
      if ( v57 >= v13 )
        goto LABEL_225;
    }
    if ( !v10 )
    {
      if ( src[v57] == 13 )
        ++v57;
      if ( v57 < v13 && src[v57] == 10 )
        ++v57;
    }
    if ( v57 < v13 )
    {
      v83 = _ctype_b_loc();
      v84 = (int)v104;
      v85 = *v83;
      while ( v10 <= 0x1E )
      {
        v86 = (unsigned __int8)src[v57];
        if ( (v85[v86] & 0x1000) == 0 )
          break;
        ++v57;
        *(_BYTE *)(v84 + v10) = 0;
        v116[v10++ - 1] = v86;
        if ( v13 == v57 )
        {
          v57 = v13;
          break;
        }
      }
    }
    v87 = v13;
    if ( v57 > v13 )
      v87 = v57;
    do
    {
      v8 = 0;
      if ( v87 == v57 )
        goto LABEL_224;
      v88 = (unsigned __int8)src[v57++];
      v89 = v88 == 13;
      if ( v88 != 13 )
        v89 = v88 == 10;
    }
    while ( !v89 );
    if ( v88 != 13 )
      --v57;
    if ( v57 >= v13 )
    {
LABEL_224:
      v111 = v103;
      goto LABEL_225;
    }
    v8 = 0;
    if ( src[v57] != 10 )
      goto LABEL_187;
    if ( v10 )
    {
      v90 = &v115;
      v91 = (char *)ptr;
      v8 = 0;
      do
      {
        v92 = (unsigned __int8)*v90++;
        v93 = v92 - 0x30;
        v94 = v92 | 0x20;
        if ( (unsigned int)(v92 - 0x30) >= 0xA )
          v93 = v94 - 0x57;
        --v10;
        v8 = v93 + 16 * v8;
      }
      while ( v10 );
      v10 = 0;
      v106 = size;
      v115 = 0;
      if ( v8 )
      {
        ++v57;
        goto LABEL_219;
      }
      size = v106;
      v111 = v103;
    }
    else
    {
      v115 = 0;
      v111 = v103;
    }
  }
  else
  {
    v106 = size;
    while ( 1 )
    {
      v58 = v111;
LABEL_130:
      if ( !v8 )
        break;
LABEL_161:
      v70 = v13 - v57;
      v109 = v8;
      if ( v8 < v13 - v57 )
        v70 = v8;
      v71 = v70 + v58;
      v111 = v70 + v58;
      if ( v70 + v58 <= v105 )
      {
        v74 = (char *)ptr;
      }
      else
      {
        v103 = v70;
        v72 = ptr;
        v73 = v110;
        if ( v110 < v71 )
          v73 = v71;
        v105 = v73;
        v74 = (char *)realloc(ptr, v73);
        v75 = v72;
        v70 = v103;
        if ( !v74 )
          goto LABEL_235;
      }
      ptr = v74;
      memcpy(&v74[v58], &src[v57], v70);
      size = v106;
      v57 += v70;
      v8 = v109 - v70;
      if ( v57 >= v13 )
        goto LABEL_225;
    }
    if ( !v10 )
    {
      if ( src[v57] == 13 )
        ++v57;
      if ( v57 < v13 && src[v57] == 10 )
        ++v57;
    }
    if ( v57 < v13 )
    {
      v59 = _ctype_b_loc();
      v60 = (int)v104;
      v61 = *v59;
      while ( v10 <= 0x1E )
      {
        v62 = (unsigned __int8)src[v57];
        if ( (v61[v62] & 0x1000) == 0 )
          break;
        ++v57;
        *(_BYTE *)(v60 + v10) = 0;
        v116[v10++ - 1] = v62;
        if ( v13 == v57 )
        {
          v57 = v13;
          break;
        }
      }
    }
    v63 = v13;
    if ( v57 > v13 )
      v63 = v57;
    do
    {
      v8 = 0;
      if ( v63 == v57 )
        goto LABEL_182;
      v64 = (unsigned __int8)src[v57++];
      v65 = v64 == 13;
      if ( v64 != 13 )
        v65 = v64 == 10;
    }
    while ( !v65 );
    if ( v64 != 13 )
      --v57;
    if ( v57 >= v13 )
    {
LABEL_182:
      v111 = v58;
      size = v106;
      goto LABEL_225;
    }
    v8 = 0;
    if ( src[v57] != 10 )
      goto LABEL_130;
    if ( v10 )
    {
      v8 = 0;
      v66 = &v115;
      do
      {
        v67 = (unsigned __int8)*v66++;
        v68 = v67 - 0x30;
        v69 = v67 | 0x20;
        if ( (unsigned int)(v67 - 0x30) >= 0xA )
          v68 = v69 - 0x57;
        --v10;
        v8 = v68 + 16 * v8;
      }
      while ( v10 );
      v10 = 0;
      v115 = 0;
      if ( v8 )
      {
        ++v57;
        goto LABEL_161;
      }
    }
    else
    {
      v115 = 0;
    }
    v111 = v58;
    size = v106;
  }
end_of_stream:
  free(v5);
  v29 = v111 == 0;
  *size = v111;
  if ( !v29 )
    return ptr;
  free(ptr);
  return 0;
}
