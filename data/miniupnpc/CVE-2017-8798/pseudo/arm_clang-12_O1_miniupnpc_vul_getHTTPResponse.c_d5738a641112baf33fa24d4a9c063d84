void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v5; // r0
  char *v6; // r7
  unsigned int v7; // r5
  char *v8; // r0
  int v9; // r6
  unsigned int v10; // r4
  int v11; // r10
  signed int v12; // r8
  int v13; // r0
  int v14; // r0
  int v15; // r11
  int v16; // r9
  char *v17; // r1
  _BOOL4 v18; // r3
  int v19; // r1
  int v20; // r2
  int v21; // r2
  int v22; // r5
  int v23; // r6
  int v24; // r1
  int v25; // r0
  int v26; // r11
  int *v27; // r3
  int v28; // r2
  int v29; // r1
  bool v30; // zf
  int v31; // r2
  bool v32; // zf
  const char *v33; // r6
  int i; // r4
  int v35; // r0
  bool v36; // cc
  const char *v37; // r6
  size_t v38; // r4
  int v39; // r0
  int v40; // r0
  bool v41; // zf
  void *v42; // r11
  signed int v43; // r5
  signed int v44; // r0
  const unsigned __int16 *v45; // r0
  int v46; // r1
  int v47; // r0
  bool v48; // zf
  char *v49; // r1
  int v50; // r2
  int v51; // t1
  bool v52; // cf
  int v53; // r3
  size_t v54; // r6
  int v55; // r2
  size_t v56; // r1
  char *v57; // r0
  char *v58; // r1
  char *v59; // r2
  size_t v60; // r2
  int v61; // r0
  int v62; // r2
  size_t v63; // r4
  size_t v64; // r1
  char *v65; // r8
  char *v66; // r5
  bool v67; // cc
  int v69; // [sp+Ch] [bp-87Ch]
  unsigned int v70; // [sp+10h] [bp-878h]
  signed int v71; // [sp+14h] [bp-874h]
  signed int v72; // [sp+14h] [bp-874h]
  int v73; // [sp+18h] [bp-870h]
  int *v74; // [sp+20h] [bp-868h]
  char *ptr; // [sp+24h] [bp-864h]
  int v76; // [sp+28h] [bp-860h]
  int v77; // [sp+2Ch] [bp-85Ch]
  int v78; // [sp+30h] [bp-858h]
  unsigned int v79; // [sp+34h] [bp-854h]
  unsigned int v80; // [sp+34h] [bp-854h]
  unsigned int v81; // [sp+34h] [bp-854h]
  unsigned int v82; // [sp+38h] [bp-850h]
  int v83; // [sp+3Ch] [bp-84Ch]
  int v84; // [sp+3Ch] [bp-84Ch]
  char v86[32]; // [sp+44h] [bp-844h] BYREF
  char dest[2084]; // [sp+64h] [bp-824h] BYREF

  if ( status_code )
    *status_code = -1;
  v5 = (char *)malloc(0x800u);
  if ( !v5 )
    goto LABEL_163;
  v6 = v5;
  v7 = 2048;
  v8 = (char *)malloc(0x800u);
  if ( !v8 )
  {
    free(v6);
LABEL_163:
    *size = -1;
    return 0;
  }
  ptr = v8;
  v74 = size;
  v86[0] = 0;
  v77 = 0;
  v9 = -1;
  v71 = 0;
  v83 = 0;
  v70 = 2048;
  v73 = 0;
  v10 = 0;
  v11 = 0;
  v76 = s;
  while ( 2 )
  {
    v78 = v9;
    v82 = v10;
    do
    {
      v14 = receivedata(s, dest, 2048, 5000, 0);
      if ( v14 < 1 )
        goto end_of_stream;
      v12 = v14;
      if ( v11 )
      {
        v10 = v82;
        goto LABEL_84;
      }
      v15 = s;
      v16 = v14 + v83;
      if ( v14 + v83 > v7 )
      {
        v17 = (char *)realloc(v6, v14 + v83);
        if ( !v17 )
        {
          free(v6);
          free(ptr);
          *v74 = -1;
          v11 = 0;
          v13 = 1;
          v10 = v82;
          s = v15;
          continue;
        }
        v6 = v17;
        v7 = v16;
      }
      memcpy(&v6[v83], dest, v12);
      v18 = 1;
      v11 = 0;
      v10 = v82;
      if ( v16 >= 2 )
      {
        v19 = 0;
        do
        {
          v20 = (unsigned __int8)v6[v19];
          if ( v20 == 10 )
          {
            v21 = v19 + 1;
            v11 = 0;
            if ( v6[v19 + 1] == 10 )
              v11 = v19 + 2;
            goto LABEL_30;
          }
          if ( v20 == 13 )
          {
            v21 = v19 + 1;
            v11 = 0;
            if ( v6[v19 + 1] != 10 )
              goto LABEL_30;
            v21 = v19 + 2;
            if ( v19 + 2 < v16 )
            {
              v11 = 0;
              if ( v6[v21] != 13 )
                goto LABEL_30;
              v21 = v19 + 3;
              if ( v19 + 3 < v16 )
              {
                v11 = 0;
                if ( v6[v21] == 10 )
                  v11 = v19 + 4;
                goto LABEL_30;
              }
            }
          }
          else
          {
            v21 = v19;
          }
          v11 = 0;
LABEL_30:
          v18 = v11 == 0;
          v19 = v21 + 1;
        }
        while ( v21 + 1 < v16 - 1 && !v11 );
      }
      v13 = 2;
      if ( !v18 )
      {
        v79 = v7;
        if ( v11 < 2 )
        {
LABEL_7:
          v12 = v16 - v11;
          memcpy(dest, &v6[v11], v16 - v11);
          v13 = 0;
          v83 = v16;
          s = v76;
          v7 = v79;
          v10 = v82;
          continue;
        }
        v22 = v11 - 1;
        v23 = 0;
        v24 = 0;
        v25 = 0;
        v26 = 0;
        v27 = status_code;
        while ( 2 )
        {
          if ( v25 >= 1 && v24 <= v25 && v6[v26] == 58 )
          {
            v28 = v26;
            if ( v26 < v22 )
            {
              v28 = v26;
              while ( 1 )
              {
                v29 = (unsigned __int8)v6[v28 + 1];
                v30 = v29 == 32;
                if ( v29 != 32 )
                  v30 = v29 == 9;
                if ( !v30 )
                  break;
                if ( v22 == ++v28 )
                {
                  v28 = v11 - 1;
                  break;
                }
              }
            }
            v23 = v28 + 1;
            goto LABEL_37;
          }
          v31 = (unsigned __int8)v6[v26];
          v32 = v31 == 13;
          if ( v31 != 13 )
            v32 = v31 == 10;
          if ( v32 )
          {
            if ( !v27 || v25 )
            {
              v36 = v24 <= v25;
              if ( v24 > v25 )
                v36 = v23 <= v24;
              if ( !v36 )
              {
                v84 = v23;
                v37 = &v6[v25];
                v38 = v24 - v25;
                if ( !strncasecmp(&v6[v25], "content-length", v24 - v25) )
                {
                  v78 = atoi(&v6[v84]);
                }
                else if ( !strncasecmp(v37, "transfer-encoding", v38) )
                {
                  v30 = strncasecmp(&v6[v84], "chunked", 7u) == 0;
                  v39 = v77;
                  if ( v30 )
                    v39 = 1;
                  v77 = v39;
                }
                v27 = status_code;
              }
            }
            else if ( v26 >= 1 )
            {
              v33 = v6 + 1;
              for ( i = v26; i; --i )
              {
                if ( *(v33 - 1) == 32 )
                {
                  if ( *v27 > -1 )
                    break;
                  v35 = atoi(v33);
                  v27 = status_code;
                  *status_code = v35;
                }
                ++v33;
              }
            }
            v23 = 0;
            if ( v26 < v16 )
            {
              while ( 1 )
              {
                v40 = (unsigned __int8)v6[v26];
                v41 = v40 == 13;
                if ( v40 != 13 )
                  v41 = v40 == 10;
                if ( !v41 )
                  break;
                if ( v16 == ++v26 )
                {
                  v28 = v16;
                  v25 = v16;
                  v24 = v16;
                  goto LABEL_38;
                }
              }
            }
            v28 = v26;
            v25 = v26;
LABEL_37:
            v24 = v26;
          }
          else
          {
            v28 = v26;
          }
LABEL_38:
          v26 = v28 + 1;
          if ( v28 + 1 >= v22 )
            goto LABEL_7;
          continue;
        }
      }
      v83 = v16;
      v11 = 0;
      s = v15;
    }
    while ( v13 == 2 );
    if ( v13 )
      return 0;
    if ( !v11 )
    {
      v9 = v78;
      goto LABEL_153;
    }
LABEL_84:
    if ( !v77 )
    {
      v81 = v7;
      v62 = v73;
      v9 = v78;
      v63 = v12;
      if ( v12 + v73 > v78 )
        v63 = v78 - v73;
      if ( v78 <= 0 )
        v63 = v12;
      if ( v63 + v73 <= v70 )
      {
        v66 = ptr;
      }
      else
      {
        v64 = v78;
        if ( v78 < (int)(v63 + v73) )
          v64 = v63 + v73;
        v70 = v64;
        v65 = (char *)realloc(ptr, v64);
        v66 = v65;
        if ( !v65 )
        {
          free(ptr);
          free(v6);
          *v74 = -1;
          v66 = ptr;
        }
        v9 = v78;
        v62 = v73;
        if ( !v65 )
          return 0;
      }
      memcpy(&v66[v62], dest, v63);
      ptr = v66;
      v73 += v63;
      v7 = v81;
      v10 = v82;
LABEL_153:
      v67 = v9 < 1;
      if ( v9 >= 1 )
        v67 = v73 < v9;
      if ( !v67 )
        goto end_of_stream;
      continue;
    }
    break;
  }
  v42 = 0;
  if ( v12 < 1 )
  {
    v69 = v73;
    v60 = v71;
    v61 = 0;
LABEL_149:
    v9 = v78;
    if ( v61 )
      goto LABEL_159;
    v71 = v60;
    v73 = v69;
    v10 = v82;
    goto LABEL_153;
  }
  v80 = v7;
  v43 = 0;
  v44 = v71;
  while ( 2 )
  {
    v69 = v73;
    while ( 1 )
    {
      if ( v44 )
        goto LABEL_121;
      if ( !v10 )
      {
        if ( dest[v43] == 13 )
          ++v43;
        if ( v43 < v12 && dest[v43] == 10 )
          ++v43;
      }
      if ( v43 < v12 )
      {
        v45 = *_ctype_b_loc();
        while ( v10 <= 0x1E )
        {
          v46 = (unsigned __int8)dest[v43];
          if ( (v45[v46] & 0x1000) == 0 )
            break;
          v86[v10 + 1] = 0;
          v86[v10] = v46;
          ++v43;
          ++v10;
          if ( v12 == v43 )
          {
            v43 = v12;
            break;
          }
        }
      }
      if ( v43 < v12 )
      {
        while ( 1 )
        {
          v47 = (unsigned __int8)dest[v43];
          v48 = v47 == 10;
          if ( v47 != 10 )
            v48 = v47 == 13;
          if ( v48 )
            break;
          if ( v12 == ++v43 )
          {
            v43 = v12;
            goto LABEL_110;
          }
        }
        if ( v47 == 13 )
          ++v43;
      }
LABEL_110:
      if ( v43 < v12 && dest[v43] == 10 )
        break;
      v44 = 0;
      if ( v43 >= v12 )
      {
        v82 = v10;
        v60 = 0;
        v61 = 0;
LABEL_147:
        v7 = v80;
        goto LABEL_149;
      }
    }
    v44 = 0;
    if ( v10 )
    {
      v44 = 0;
      v49 = v86;
      do
      {
        v51 = (unsigned __int8)*v49++;
        v50 = v51;
        v52 = (unsigned int)(v51 - 0x30) >= 0xA;
        if ( (unsigned int)(v51 - 0x30) >= 0xA )
          v50 |= 0x20u;
        v53 = 16 * v44 - 87;
        if ( !v52 )
          v53 = 16 * v44 - 48;
        v44 = v53 + v50;
        --v10;
      }
      while ( v10 );
    }
    v86[0] = 0;
    if ( v44 )
    {
      ++v43;
      v10 = 0;
      v42 = 0;
LABEL_121:
      v54 = v12 - v43;
      v72 = v44;
      if ( v44 < v12 - v43 )
        v54 = v44;
      v55 = v54 + v73;
      v82 = v10;
      v73 += v54;
      if ( v54 + v69 <= v70 )
      {
        v59 = ptr;
        goto LABEL_131;
      }
      v56 = v78;
      if ( v78 < v55 )
        v56 = v54 + v69;
      v70 = v56;
      v57 = (char *)realloc(ptr, v56);
      v58 = v57;
      if ( !v57 )
      {
        free(ptr);
        free(v6);
        *v74 = -1;
        v57 = 0;
        v58 = ptr;
      }
      if ( v57 )
      {
        v59 = v58;
LABEL_131:
        ptr = v59;
        memcpy(&v59[v69], &dest[v43], v54);
        v44 = v72 - v54;
        v43 += v54;
        if ( v43 < v12 )
          continue;
        v60 = v72 - v54;
        v61 = 0;
        v69 = v73;
        goto LABEL_147;
      }
      v61 = 1;
      v60 = v72;
      ptr = v58;
      v7 = v80;
      goto LABEL_149;
    }
    break;
  }
  v61 = 25;
  v42 = 0;
LABEL_159:
  v73 = v69;
  if ( v61 == 25 )
  {
end_of_stream:
    free(v6);
    *v74 = v73;
    if ( v73 )
      return ptr;
    free(ptr);
    return 0;
  }
  return v42;
}
