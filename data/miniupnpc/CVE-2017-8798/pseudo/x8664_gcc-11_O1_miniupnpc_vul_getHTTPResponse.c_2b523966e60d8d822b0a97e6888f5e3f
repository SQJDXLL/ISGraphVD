void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  unsigned int v3; // r15d
  int v4; // eax
  int v5; // r12d
  char v6; // dl
  int v7; // edx
  int v8; // edi
  int v9; // r14d
  int v10; // ebp
  int i; // ebx
  char *v12; // rdx
  int v13; // eax
  char v14; // al
  char v15; // al
  char *v16; // rax
  const char *j; // rbp
  size_t v18; // r14
  const char *v19; // rbp
  bool v20; // zf
  int v21; // eax
  int v22; // ebp
  __int64 v23; // rbx
  int v24; // r14d
  const unsigned __int16 *v25; // rsi
  char v26; // dl
  unsigned int v27; // eax
  __int64 v28; // rax
  char v29; // dl
  int v30; // r12d
  char *v31; // rcx
  int v32; // edx
  char v33; // al
  unsigned int v34; // r12d
  unsigned int v35; // eax
  char *v36; // rax
  char *v37; // rbx
  unsigned int v39; // r12d
  int v40; // r13d
  char *v41; // rax
  unsigned int content_buf_used; // [rsp+4h] [rbp-8B4h]
  char *content_buf; // [rsp+8h] [rbp-8B0h]
  int valuestart; // [rsp+10h] [rbp-8A8h]
  unsigned int valuestarta; // [rsp+10h] [rbp-8A8h]
  unsigned int content_buf_len; // [rsp+14h] [rbp-8A4h]
  int content_length; // [rsp+18h] [rbp-8A0h]
  int endofheaders; // [rsp+1Ch] [rbp-89Ch]
  char *header_buf; // [rsp+20h] [rbp-898h]
  unsigned int header_buf_used; // [rsp+28h] [rbp-890h]
  unsigned int chunksize; // [rsp+30h] [rbp-888h]
  unsigned int header_buf_len; // [rsp+34h] [rbp-884h]
  int chunked; // [rsp+38h] [rbp-880h]
  char chunksize_buf[32]; // [rsp+50h] [rbp-868h] BYREF
  char buf[2048]; // [rsp+70h] [rbp-848h] BYREF
  unsigned __int64 v59; // [rsp+878h] [rbp-40h]

  v59 = __readfsqword(0x28u);
  if ( status_code )
    *status_code = -1;
  header_buf = (char *)malloc(0x800uLL);
  if ( header_buf )
  {
    content_buf = (char *)malloc(0x800uLL);
    if ( content_buf )
    {
      chunksize_buf[0] = 0;
      v3 = 0;
      content_buf_used = 0;
      content_buf_len = 2048;
      header_buf_used = 0;
      header_buf_len = 2048;
      chunksize = 0;
      content_length = -1;
      chunked = 0;
      endofheaders = 0;
      while ( 1 )
      {
        v22 = receivedata((unsigned int)s, buf, 2048LL, 5000LL, 0LL);
        if ( v22 <= 0 )
          break;
        if ( endofheaders )
        {
          if ( !chunked )
          {
LABEL_133:
            if ( content_length <= 0 )
              goto LABEL_136;
            v39 = v22 + content_buf_used;
            if ( (int)(v22 + content_buf_used) <= content_length )
            {
              v37 = content_buf;
              if ( v39 > content_buf_len )
              {
LABEL_131:
                content_buf_len = content_length;
LABEL_138:
                v37 = (char *)realloc(content_buf, content_buf_len);
                if ( !v37 )
                {
LABEL_108:
                  free(content_buf);
                  free(header_buf);
                  *size = -1;
                  return 0LL;
                }
              }
            }
            else
            {
              v22 = content_length - content_buf_used;
LABEL_136:
              v39 = v22 + content_buf_used;
              if ( v22 + content_buf_used > content_buf_len )
              {
                content_buf_len = v22 + content_buf_used;
                if ( (int)v39 > content_length )
                  goto LABEL_138;
                goto LABEL_131;
              }
              v37 = content_buf;
            }
            memcpy(&v37[content_buf_used], buf, v22);
            content_buf_used = v39;
            content_buf = v37;
            goto LABEL_140;
          }
LABEL_74:
          LODWORD(v23) = 0;
          v24 = chunksize;
LABEL_111:
          if ( v24 )
          {
LABEL_112:
            v34 = v22 - v23;
            if ( v22 - (int)v23 > v24 )
              v34 = v24;
            valuestarta = v34;
            v30 = content_buf_used + v34;
            if ( v30 > content_buf_len )
            {
              v35 = content_length;
              if ( content_length < v30 )
                v35 = v30;
              content_buf_len = v35;
              v36 = (char *)realloc(content_buf, v35);
              if ( !v36 )
                goto LABEL_108;
              content_buf = v36;
            }
            memcpy(&content_buf[content_buf_used], &buf[(int)v23], valuestarta);
            LODWORD(v23) = v23 + valuestarta;
            v24 -= valuestarta;
            if ( (int)v23 >= v22 )
            {
              chunksize = v24;
              content_buf_used = v30;
              goto LABEL_140;
            }
            goto LABEL_110;
          }
          if ( v3 )
          {
LABEL_81:
            if ( (int)v23 >= v22 )
            {
              chunksize = 0;
              v27 = v3;
LABEL_89:
              v3 = v27;
              goto LABEL_140;
            }
          }
          else
          {
            if ( buf[(int)v23] == 13 )
              LODWORD(v23) = v23 + 1;
            if ( (int)v23 >= v22 )
            {
              chunksize = 0;
              v27 = 0;
              goto LABEL_89;
            }
            if ( buf[(int)v23] == 10 )
            {
              LODWORD(v23) = v23 + 1;
              goto LABEL_81;
            }
          }
          v25 = *_ctype_b_loc();
          v23 = (int)v23;
          while ( 1 )
          {
            v26 = buf[v23];
            if ( (v25[v26] & 0x1000) == 0 || v3 > 0x1E )
              break;
            v27 = v3 + 1;
            chunksize_buf[v3] = v26;
            chunksize_buf[v3 + 1] = 0;
            if ( v22 <= (int)++v23 )
            {
              chunksize = 0;
              goto LABEL_89;
            }
            ++v3;
          }
          if ( v22 <= (int)v23 )
          {
            chunksize = 0;
            goto LABEL_140;
          }
          v28 = (int)v23;
          while ( 1 )
          {
            LODWORD(v23) = v28;
            v29 = buf[v28];
            if ( v29 == 10 || v29 == 13 )
              break;
            if ( v22 <= (int)++v28 )
            {
              chunksize = 0;
              goto LABEL_140;
            }
          }
          if ( v22 <= (int)v28 )
          {
            chunksize = 0;
            goto LABEL_140;
          }
          if ( buf[(int)v28] == 13 )
          {
            LODWORD(v23) = v28 + 1;
            if ( (int)v28 + 1 >= v22 )
            {
              chunksize = 0;
              goto LABEL_140;
            }
          }
          v30 = content_buf_used;
          if ( buf[(int)v23] == 10 )
          {
            if ( !v3 )
              break;
            v31 = chunksize_buf;
            v32 = 0;
            do
            {
              v33 = *v31;
              if ( (unsigned __int8)(*v31 - 48) > 9u )
                v32 = 16 * v32 + (v33 | 0x20) - 87;
              else
                v32 = 16 * v32 + v33 - 48;
              ++v31;
            }
            while ( v31 != &chunksize_buf[v3] );
            chunksize_buf[0] = 0;
            LODWORD(v23) = v23 + 1;
            if ( !v32 )
              break;
            v3 = 0;
            v24 = v32;
            goto LABEL_112;
          }
LABEL_110:
          content_buf_used = v30;
          goto LABEL_111;
        }
        v40 = v22 + header_buf_used;
        if ( v22 + header_buf_used > header_buf_len )
        {
          v41 = (char *)realloc(header_buf, (unsigned int)v40);
          if ( !v41 )
          {
            free(header_buf);
            free(content_buf);
            *size = -1;
            return 0LL;
          }
          header_buf_len = v22 + header_buf_used;
          header_buf = v41;
        }
        memcpy(&header_buf[header_buf_used], buf, v22);
        if ( v40 - 1 <= 0 )
        {
          header_buf_used += v22;
        }
        else
        {
          v4 = 0;
          do
          {
            v6 = header_buf[v4];
            if ( v6 == 13 )
            {
              if ( header_buf[v4 + 1] == 10 )
              {
                if ( v4 + 2 >= v40 )
                {
                  v4 += 2;
                  v5 = endofheaders;
                }
                else if ( header_buf[v4 + 2] == 13 )
                {
                  v7 = v4 + 3;
                  if ( v4 + 3 >= v40 )
                  {
                    v4 += 3;
                    v5 = endofheaders;
                  }
                  else
                  {
                    v5 = v4 + 4;
                    v4 += 3;
                    if ( header_buf[v7] != 10 )
                      v5 = endofheaders;
                  }
                }
                else
                {
                  v4 += 2;
                  v5 = endofheaders;
                }
              }
              else
              {
                ++v4;
                v5 = endofheaders;
              }
            }
            else
            {
              v5 = endofheaders;
              if ( v6 == 10 )
              {
                v5 = v4 + 2;
                if ( header_buf[++v4] != 10 )
                  v5 = endofheaders;
              }
            }
            ++v4;
          }
          while ( !v5 && v4 < v40 - 1 );
          if ( v5 )
          {
            v8 = v5 - 1;
            if ( v5 - 1 > 0 )
            {
              valuestart = 0;
              v9 = 0;
              v10 = 0;
              for ( i = 0; i < v8; ++i )
              {
                if ( v10 <= 0 || v10 < v9 )
                {
                  v14 = header_buf[i];
                  if ( v14 == 13 || v14 == 10 )
                  {
                    if ( v10 || !status_code )
                    {
                      if ( v10 < v9 && v9 < valuestart )
                      {
                        v18 = v9 - v10;
                        v19 = &header_buf[v10];
                        if ( !strncasecmp(v19, "content-length", v18) )
                        {
                          content_length = strtol(&header_buf[valuestart], 0LL, 10);
                        }
                        else if ( !strncasecmp(v19, "transfer-encoding", v18) )
                        {
                          v20 = strncasecmp(&header_buf[valuestart], "chunked", 7uLL) == 0;
                          v21 = 1;
                          if ( !v20 )
                            v21 = chunked;
                          chunked = v21;
                        }
                      }
                    }
                    else if ( i > 0 )
                    {
                      for ( j = header_buf + 1; j != &header_buf[i - 1 + 2]; ++j )
                      {
                        if ( *(j - 1) == 32 )
                        {
                          if ( *status_code >= 0 )
                            break;
                          *status_code = strtol(j, 0LL, 10);
                        }
                      }
                    }
LABEL_45:
                    if ( v40 <= i )
                    {
                      valuestart = 0;
                      v9 = i;
                      v10 = i;
                    }
                    else
                    {
                      v16 = &header_buf[i];
                      do
                      {
                        if ( *v16 != 13 && *v16 != 10 )
                        {
                          valuestart = 0;
                          v9 = i;
                          v10 = i;
                          goto LABEL_39;
                        }
                        ++i;
                        ++v16;
                      }
                      while ( i != v40 );
                      valuestart = 0;
                      v9 = v40;
                      v10 = v40;
                      i = v40;
                    }
                  }
                }
                else
                {
                  v15 = header_buf[i];
                  if ( v15 == 58 )
                  {
                    if ( v8 <= i )
                    {
                      v13 = i;
                    }
                    else
                    {
                      v12 = &header_buf[i + 1];
                      v13 = i;
                      while ( *v12 == 32 || *v12 == 9 )
                      {
                        ++v13;
                        ++v12;
                        if ( v13 == v5 - 1 )
                        {
                          v13 = v5 - 1;
                          break;
                        }
                      }
                    }
                    valuestart = v13 + 1;
                    v9 = i;
                    i = v13;
                    continue;
                  }
                  if ( v15 == 13 || v15 == 10 )
                    goto LABEL_45;
                }
LABEL_39:
                ;
              }
            }
            v22 = v40 - v5;
            memcpy(buf, &header_buf[v5], v40 - v5);
            header_buf_used = v40;
            endofheaders = v5;
            if ( !chunked )
              goto LABEL_133;
            if ( v22 > 0 )
              goto LABEL_74;
            header_buf_used = v40;
            endofheaders = v5;
LABEL_140:
            if ( content_length > 0 && (int)content_buf_used >= content_length )
              break;
          }
          else
          {
            header_buf_used += v22;
            endofheaders = 0;
          }
        }
      }
      free(header_buf);
      *size = content_buf_used;
      if ( !content_buf_used )
      {
        free(content_buf);
        return 0LL;
      }
    }
    else
    {
      free(header_buf);
      *size = -1;
    }
  }
  else
  {
    *size = -1;
    return 0LL;
  }
  return content_buf;
}
