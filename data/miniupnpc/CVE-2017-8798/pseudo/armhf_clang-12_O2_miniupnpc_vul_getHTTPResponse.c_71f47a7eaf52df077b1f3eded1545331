void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v5; // r0
  char *v6; // r9
  char *v7; // r0
  signed int v8; // lr
  int v9; // r10
  unsigned int v10; // r5
  int v11; // r4
  int v12; // r1
  int v13; // r0
  signed int v14; // r8
  int v15; // r6
  char *v16; // r5
  int v17; // r1
  int v18; // r2
  int v19; // r2
  int *v20; // r12
  int v21; // r3
  int v22; // lr
  int v23; // r1
  int v24; // r7
  int v25; // r8
  int v26; // r5
  int v27; // r2
  int v28; // r2
  int v29; // r1
  bool v30; // zf
  bool v31; // zf
  const char *v32; // r5
  int v33; // r8
  int v34; // r0
  bool v35; // cc
  int v36; // r0
  int v37; // r0
  bool v38; // zf
  signed int v39; // r6
  const unsigned __int16 *v40; // r0
  int v41; // r1
  int v42; // r0
  int v43; // r1
  bool v44; // zf
  char *v45; // r0
  int v46; // r1
  int v47; // t1
  int v48; // r2
  size_t v49; // r0
  int v50; // r2
  size_t v51; // r1
  char *v52; // r3
  int v53; // r2
  size_t v54; // r1
  size_t v55; // r5
  int v56; // r6
  char *v57; // r0
  char *v58; // r8
  bool v59; // cc
  char *v61; // r0
  char *v62; // r0
  size_t v63; // [sp+10h] [bp-880h]
  size_t v64; // [sp+14h] [bp-87Ch]
  int v65; // [sp+18h] [bp-878h]
  unsigned int v66; // [sp+20h] [bp-870h]
  int *v67; // [sp+24h] [bp-86Ch]
  int v68; // [sp+28h] [bp-868h]
  signed int v69; // [sp+2Ch] [bp-864h]
  unsigned int v70; // [sp+30h] [bp-860h]
  int v71; // [sp+34h] [bp-85Ch]
  char *ptr; // [sp+38h] [bp-858h]
  int v73; // [sp+3Ch] [bp-854h]
  int v74; // [sp+40h] [bp-850h]
  int v75; // [sp+40h] [bp-850h]
  unsigned int v77; // [sp+48h] [bp-848h]
  char v78[32]; // [sp+4Ch] [bp-844h] BYREF
  char dest[2084]; // [sp+6Ch] [bp-824h] BYREF

  if ( status_code )
    *status_code = -1;
  v5 = (char *)malloc(0x800u);
  if ( !v5 )
    goto LABEL_147;
  v6 = v5;
  v77 = 2048;
  v7 = (char *)malloc(0x800u);
  if ( !v7 )
  {
    free(v6);
LABEL_147:
    *size = -1;
    return 0;
  }
  v67 = size;
  ptr = v7;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v68 = 0;
  v12 = -1;
  v78[0] = 0;
  v66 = 2048;
  v73 = 0;
  do
  {
    v71 = v12;
    v69 = v8;
    v70 = v10;
    v13 = receivedata(s, dest, 2048, 5000, 0);
    if ( v13 < 1 )
      break;
    v14 = v13;
    v15 = v9;
    v16 = v6;
    while ( 1 )
    {
      if ( v11 )
      {
        v9 = v15;
        v6 = v16;
        goto LABEL_83;
      }
      v9 = v14 + v15;
      if ( v14 + v15 <= v77 )
      {
        v6 = v16;
      }
      else
      {
        v6 = (char *)realloc(v16, v14 + v15);
        v77 = v14 + v15;
        if ( !v6 )
        {
          free(v16);
          v61 = ptr;
LABEL_149:
          free(v61);
          *v67 = -1;
          return 0;
        }
      }
      memcpy(&v6[v15], dest, v14);
      if ( v9 >= 2 )
        break;
LABEL_9:
      v11 = 0;
      v14 = receivedata(s, dest, 2048, 5000, 0);
      v15 = v9;
      v16 = v6;
      if ( v14 <= 0 )
        goto end_of_stream;
    }
    v17 = 0;
    do
    {
      v18 = (unsigned __int8)v6[v17];
      if ( v18 == 10 )
      {
        v19 = v17 + 1;
        v11 = 0;
        if ( v6[v17 + 1] == 10 )
          v11 = v17 + 2;
      }
      else
      {
        if ( v18 != 13 )
        {
          v19 = v17;
LABEL_30:
          v11 = 0;
          goto LABEL_31;
        }
        v19 = v17 + 1;
        v11 = 0;
        if ( v6[v17 + 1] == 10 )
        {
          v19 = v17 + 2;
          if ( v17 + 2 >= v9 )
            goto LABEL_30;
          v11 = 0;
          if ( v6[v19] == 13 )
          {
            v19 = v17 + 3;
            if ( v17 + 3 >= v9 )
              goto LABEL_30;
            v11 = 0;
            if ( v6[v19] == 10 )
              v11 = v17 + 4;
          }
        }
      }
LABEL_31:
      v17 = v19 + 1;
    }
    while ( v19 + 1 < v9 - 1 && !v11 );
    if ( !v11 )
      goto LABEL_9;
    if ( v11 >= 2 )
    {
      v20 = status_code;
      v21 = v14 + v15;
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = v11 - 1;
      v26 = 0;
      v74 = v21;
      do
      {
        v27 = (unsigned __int8)v6[v24];
        if ( v26 >= 1 && v23 <= v26 && v27 == 58 )
        {
          v28 = v24;
          if ( v24 < v25 )
          {
            v28 = v24;
            while ( 1 )
            {
              v29 = (unsigned __int8)v6[v28 + 1];
              v30 = v29 == 32;
              if ( v29 != 32 )
                v30 = v29 == 9;
              if ( !v30 )
                break;
              if ( v11 - 1 == ++v28 )
              {
                v28 = v25;
                break;
              }
            }
          }
          v22 = v28 + 1;
        }
        else
        {
          v31 = v27 == 13;
          if ( v27 != 13 )
            v31 = v27 == 10;
          if ( !v31 )
          {
            v28 = v24;
            goto LABEL_39;
          }
          if ( v20 && !v26 )
          {
            if ( v24 < 1 )
              goto LABEL_74;
            v32 = v6 + 1;
            v33 = v24;
            while ( 1 )
            {
              if ( *(v32 - 1) == 32 )
              {
                if ( *v20 > -1 )
                {
LABEL_63:
                  v25 = v11 - 1;
                  goto LABEL_74;
                }
                v34 = strtol(v32, 0u, 10);
                v20 = status_code;
                v21 = v74;
                *status_code = v34;
              }
              ++v32;
              if ( !--v33 )
                goto LABEL_63;
            }
          }
          v35 = v23 <= v26;
          if ( v23 > v26 )
            v35 = v22 <= v23;
          if ( !v35 )
          {
            v63 = v23 - v26;
            if ( !strncasecmp(&v6[v26], "content-length", v23 - v26) )
            {
              v71 = strtol(&v6[v22], 0u, 10);
            }
            else if ( !strncasecmp(&v6[v26], "transfer-encoding", v63) )
            {
              v30 = strncasecmp(&v6[v22], "chunked", 7u) == 0;
              v36 = v68;
              if ( v30 )
                v36 = 1;
              v68 = v36;
            }
            v20 = status_code;
            v21 = v74;
          }
LABEL_74:
          v22 = 0;
          if ( v24 < v9 )
          {
            while ( 1 )
            {
              v37 = (unsigned __int8)v6[v24];
              v38 = v37 == 13;
              if ( v37 != 13 )
                v38 = v37 == 10;
              if ( !v38 )
                break;
              if ( v21 == ++v24 )
              {
                v28 = v9;
                v26 = v9;
                v23 = v9;
                goto LABEL_39;
              }
            }
          }
          v28 = v24;
          v26 = v24;
        }
        v23 = v24;
LABEL_39:
        v24 = v28 + 1;
      }
      while ( v28 + 1 < v25 );
    }
    v14 = v9 - v11;
    memcpy(dest, &v6[v11], v9 - v11);
LABEL_83:
    v10 = v70;
    v8 = v69;
    if ( v68 )
    {
      if ( v14 >= 1 )
      {
        v39 = 0;
        v65 = s;
        while ( 2 )
        {
          v75 = v73;
          while ( !v8 )
          {
            if ( !v10 )
            {
              if ( dest[v39] == 13 )
                ++v39;
              if ( v39 < v14 && dest[v39] == 10 )
                ++v39;
            }
            if ( v39 < v14 )
            {
              v40 = *_ctype_b_loc();
              while ( v10 <= 0x1E )
              {
                v41 = (unsigned __int8)dest[v39];
                if ( (v40[v41] & 0x1000) == 0 )
                  break;
                v8 = 0;
                ++v39;
                v78[v10] = v41;
                v78[++v10] = 0;
                if ( v14 == v39 )
                  goto LABEL_140;
              }
            }
            if ( v39 < v14 )
            {
              v42 = -v39;
              while ( 1 )
              {
                v43 = (unsigned __int8)dest[-v42];
                v44 = v43 == 10;
                if ( v43 != 10 )
                  v44 = v43 == 13;
                if ( v44 )
                  break;
                if ( -v14 == --v42 )
                  goto LABEL_139;
              }
              v39 = (v43 == 0xD) - v42;
            }
            if ( v39 >= v14 )
            {
LABEL_139:
              v8 = 0;
LABEL_140:
              s = v65;
              goto LABEL_141;
            }
            v8 = 0;
            if ( dest[v39] == 10 )
            {
              if ( !v10 )
              {
                v78[0] = 0;
                goto end_of_stream;
              }
              v45 = v78;
              v8 = 0;
              do
              {
                v47 = (unsigned __int8)*v45++;
                v46 = v47;
                v48 = 16 * v8 - 87;
                if ( (unsigned int)(v47 - 0x30) < 0xA )
                  v48 = 16 * v8 - 48;
                else
                  v46 |= 0x20u;
                --v10;
                v8 = v48 + v46;
              }
              while ( v10 );
              v10 = 0;
              v78[0] = 0;
              if ( !v8 )
                goto end_of_stream;
              ++v39;
              break;
            }
          }
          v49 = v14 - v39;
          if ( v8 < v14 - v39 )
            v49 = v8;
          v64 = v49;
          v50 = v49 + v73;
          v73 = v50;
          if ( v50 <= v66 )
          {
            v52 = ptr;
          }
          else
          {
            v51 = v71;
            if ( v71 < v50 )
              v51 = v50;
            v66 = v51;
            v52 = (char *)realloc(ptr, v51);
            if ( !v52 )
            {
              v62 = ptr;
              goto LABEL_151;
            }
          }
          ptr = v52;
          memcpy(&v52[v75], &dest[v39], v64);
          v39 += v64;
          s = v65;
          v8 -= v64;
          if ( v39 < v14 )
            continue;
          break;
        }
      }
    }
    else
    {
      v53 = v73;
      v54 = v71;
      v55 = v14;
      if ( v14 + v73 > v71 )
        v55 = v71 - v73;
      if ( v71 <= 0 )
        v55 = v14;
      v56 = v55 + v73;
      if ( v55 + v73 <= v66 )
      {
        v58 = ptr;
      }
      else
      {
        if ( v71 < v56 )
          v54 = v55 + v73;
        v66 = v54;
        v57 = (char *)realloc(ptr, v54);
        v53 = v73;
        v58 = v57;
        if ( !v57 )
        {
          v62 = ptr;
LABEL_151:
          free(v62);
          v61 = v6;
          goto LABEL_149;
        }
      }
      memcpy(&v58[v53], dest, v55);
      v10 = v70;
      v8 = v69;
      ptr = v58;
      v73 = v56;
    }
LABEL_141:
    v12 = v71;
    v59 = v71 < 1;
    if ( v71 >= 1 )
      v59 = v73 < v71;
  }
  while ( v59 );
end_of_stream:
  free(v6);
  *v67 = v73;
  if ( v73 )
    return ptr;
  free(ptr);
  return 0;
}
