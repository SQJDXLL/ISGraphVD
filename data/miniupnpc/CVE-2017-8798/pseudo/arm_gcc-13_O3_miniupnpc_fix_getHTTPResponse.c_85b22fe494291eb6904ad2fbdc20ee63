void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  int v3; // r4
  char *v5; // r9
  int *v6; // r5
  unsigned int v7; // r7
  unsigned int v8; // r6
  int v9; // r0
  char *v10; // r8
  int v11; // r11
  char *v12; // r0
  signed int v13; // r2
  unsigned int v14; // r10
  int v15; // r12
  bool v16; // r3
  int v18; // r3
  unsigned int v19; // r10
  char *v20; // r3
  unsigned int v21; // r4
  size_t v22; // r1
  void *v23; // r0
  _DWORD *v24; // r11
  int *v26; // r10
  int v27; // r2
  int v28; // r1
  int v29; // r6
  int v30; // r5
  bool v31; // zf
  bool v32; // cc
  int v33; // r0
  const char *v34; // r8
  int v35; // r7
  bool v36; // zf
  _BOOL4 v37; // r0
  const char *v38; // r6
  int v39; // t1
  char *v40; // r2
  int v41; // r6
  int v42; // t1
  bool v43; // zf
  unsigned int v44; // r11
  char *v45; // r9
  int v46; // r4
  size_t v47; // r10
  unsigned int v48; // r3
  char *v49; // r0
  const void *v50; // r1
  int *v51; // lr
  const unsigned __int16 *v52; // r6
  int v53; // r0
  _BYTE *v54; // r1
  char v55; // r2
  int v56; // t1
  int v57; // r2
  int v58; // r3
  int v59; // t1
  bool v60; // zf
  int v61; // r3
  unsigned __int8 *v62; // r3
  unsigned __int8 *v63; // r5
  int v64; // r2
  int v65; // t1
  int v66; // r6
  int v67; // r6
  bool v68; // cc
  const char *v69; // r8
  int v70; // r0
  int v71; // r3
  int v72; // r2
  int v73; // r3
  int v74; // t1
  int v75; // r6
  bool v76; // zf
  void *v77; // r0
  int *v78; // r11
  int *v79; // r11
  int v80[2]; // [sp+0h] [bp-898h] BYREF
  int content_length; // [sp+Ch] [bp-88Ch]
  unsigned int content_buf_len; // [sp+10h] [bp-888h]
  char *header_buf; // [sp+14h] [bp-884h]
  unsigned int content_buf_used; // [sp+18h] [bp-880h]
  char *v85; // [sp+1Ch] [bp-87Ch]
  int endofheaders; // [sp+20h] [bp-878h]
  int sa; // [sp+24h] [bp-874h]
  unsigned int header_buf_len; // [sp+28h] [bp-870h]
  unsigned int chunksize; // [sp+2Ch] [bp-86Ch]
  unsigned int chunksize_buf_index; // [sp+30h] [bp-868h]
  unsigned int v91; // [sp+34h] [bp-864h]
  int *status_codea; // [sp+38h] [bp-860h]
  int *sizea; // [sp+3Ch] [bp-85Ch]
  int *v94; // [sp+40h] [bp-858h]
  int *v95; // [sp+44h] [bp-854h]
  char chunksize_buf[32]; // [sp+4Ch] [bp-84Ch] BYREF
  char buf[2048]; // [sp+6Ch] [bp-82Ch] BYREF

  chunksize = s;
  v94 = status_code;
  if ( status_code )
    *status_code = -1;
  v5 = (char *)malloc(0x800u);
  if ( !v5 )
    goto LABEL_176;
  content_buf_len = (unsigned int)malloc(0x800u);
  if ( !content_buf_len )
  {
    free(v5);
LABEL_176:
    *size = -1;
    return 0;
  }
  content_buf_used = 2048;
  chunksize_buf_index = 2048;
  v6 = 0;
  header_buf = (char *)-1;
  content_length = (int)buf;
  v7 = 0;
  v8 = 0;
  chunksize_buf[0] = 0;
  endofheaders = 0;
  v85 = 0;
  header_buf_len = 0;
  sa = (int)chunksize_buf;
  v95 = size;
  while ( 1 )
  {
LABEL_6:
    v9 = receivedata(chunksize, content_length, 2048, 5000, 0);
    v10 = (char *)v9;
    if ( v9 <= 0 )
    {
end_of_stream:
      v24 = v95;
      free(v5);
      *v24 = v7;
      if ( !v7 )
      {
        free((void *)content_buf_len);
        return 0;
      }
      return (void *)content_buf_len;
    }
    if ( header_buf_len )
    {
      if ( v85 )
        goto LABEL_84;
      goto LABEL_25;
    }
    v11 = v9 + endofheaders;
    if ( v9 + endofheaders > chunksize_buf_index )
    {
      v12 = (char *)realloc(v5, v9 + endofheaders);
      if ( !v12 )
      {
        v79 = v95;
        free(v5);
        free((void *)content_buf_len);
        *v79 = -1;
        return 0;
      }
      v5 = v12;
      chunksize_buf_index = v11;
    }
    memcpy(&v5[endofheaders], (const void *)content_length, (size_t)v10);
    if ( v11 > 1 )
      break;
    endofheaders = v11;
  }
  v13 = 0;
  do
  {
    v18 = (unsigned __int8)v5[v13];
    v15 = v13 + 1;
    if ( v18 == 13 )
    {
      if ( v5[v15] != 10 )
        goto LABEL_21;
      if ( v13 + 2 < v11 && v5[v13 + 2] == 13 )
      {
        v15 = v13 + 3;
        if ( v13 + 3 < v11 && v5[v15] == 10 )
        {
          v13 += 4;
          v16 = v13 == 0;
          v14 = v13;
        }
        else
        {
          v13 += 4;
          v14 = 0;
          v15 = -1;
          v16 = 1;
        }
      }
      else
      {
        v13 += 3;
        v14 = 0;
        v15 = -1;
        v16 = 1;
      }
    }
    else
    {
      if ( v18 != 10 )
      {
        ++v13;
        v14 = 0;
        v15 = -1;
        v16 = 1;
        goto LABEL_15;
      }
      if ( v5[v15] != 10 )
      {
LABEL_21:
        v13 += 2;
        v14 = 0;
        v15 = -1;
        v16 = 1;
        goto LABEL_15;
      }
      v13 += 2;
      v16 = v13 == 0;
      v14 = v13;
    }
LABEL_15:
    ;
  }
  while ( v11 - 1 > v13 && v16 );
  if ( !v14 )
  {
    endofheaders = v11;
    header_buf_len = 0;
    goto LABEL_6;
  }
  if ( v15 <= 0 )
    goto LABEL_82;
  header_buf_len = v14;
  v91 = v8;
  status_codea = v6;
  v26 = v94;
  v27 = 0;
  v28 = 0;
  v3 = 0;
  v29 = 0;
  v30 = v15;
  endofheaders = v7;
  while ( 2 )
  {
    while ( 2 )
    {
      v32 = v28 <= v27;
      if ( v28 >= v27 )
        v32 = v28 <= 0;
      v33 = (unsigned __int8)v5[v3];
      v34 = &v5[v3];
      v35 = v3 + 1;
      if ( !v32 )
      {
        if ( v33 != 58 )
        {
          v31 = v33 == 13;
          if ( v33 != 13 )
            v31 = v33 == 10;
          if ( !v31 )
            goto LABEL_51;
          goto LABEL_70;
        }
        if ( v3 >= v30 )
        {
          v29 = v3 + 1;
          v27 = v3++;
        }
        else
        {
          v72 = v3;
          do
          {
            v74 = *(unsigned __int8 *)++v34;
            v73 = v74;
            v75 = v72;
            v76 = v74 == 9;
            if ( v74 != 9 )
              v76 = v73 == 32;
            ++v72;
            if ( !v76 )
            {
              v29 = v75 + 1;
              v27 = v3;
              v3 = v29;
              goto LABEL_52;
            }
          }
          while ( v30 != v72 );
          v29 = v30 + 1;
          v27 = v3;
          v3 = v30 + 1;
        }
LABEL_52:
        if ( v30 <= v3 )
          goto LABEL_81;
        continue;
      }
      break;
    }
    v36 = v33 == 10;
    if ( v33 != 10 )
      v36 = v33 == 13;
    if ( !v36 )
    {
LABEL_51:
      ++v3;
      goto LABEL_52;
    }
    v37 = v28 == 0;
    if ( !v26 )
      v37 = 0;
    if ( v37 )
    {
      if ( v3 <= 0 )
        goto LABEL_71;
      v38 = v5;
      do
      {
        while ( 1 )
        {
          v39 = *(unsigned __int8 *)v38++;
          if ( v39 == 32 )
            break;
          if ( v34 == v38 )
            goto LABEL_70;
        }
        if ( *v26 >= 0 )
          break;
        *v26 = strtol(v38, 0u, 10);
      }
      while ( v34 != v38 );
      goto LABEL_70;
    }
    v68 = v28 < v27;
    if ( v28 < v27 )
      v68 = v27 < v29;
    if ( !v68 )
      goto LABEL_70;
    v69 = &v5[v28];
    sizea = (int *)(v27 - v28);
    if ( !strncasecmp(&v5[v28], "content-length", v27 - v28) )
    {
      header_buf = (char *)strtol(&v5[v29], 0u, 10);
      goto LABEL_70;
    }
    if ( strncasecmp(v69, "transfer-encoding", (size_t)sizea) )
    {
LABEL_70:
      if ( v11 > v3 )
        goto LABEL_71;
      goto LABEL_144;
    }
    v70 = strncasecmp(&v5[v29], "chunked", 7u);
    v71 = (int)v85;
    if ( !v70 )
      v71 = 1;
    v85 = (char *)v71;
    if ( v11 <= v3 )
    {
LABEL_144:
      v27 = v3;
      v28 = v3;
      v29 = 0;
      ++v3;
      goto LABEL_52;
    }
LABEL_71:
    v40 = &v5[v3 - 1];
    while ( 1 )
    {
      v42 = (unsigned __int8)*++v40;
      v41 = v42;
      v28 = v3;
      v43 = v42 == 10;
      if ( v42 != 10 )
        v43 = v41 == 13;
      v29 = v43;
      v3 = v35;
      if ( !v43 )
        break;
      if ( v11 == v35 )
      {
        v3 = v28 + 2;
        v29 = 0;
        v27 = v11;
        v28 = v11;
        goto LABEL_52;
      }
      ++v35;
    }
    v27 = v28;
    if ( v30 > v35 )
      continue;
    break;
  }
LABEL_81:
  v7 = endofheaders;
  v14 = header_buf_len;
  v8 = v91;
  v6 = status_codea;
LABEL_82:
  v10 = (char *)(v11 - v14);
  memcpy((void *)content_length, &v5[v14], v11 - v14);
  endofheaders = v11;
  header_buf_len = v14;
  if ( !v85 )
  {
LABEL_25:
    v19 = (unsigned int)&v10[v7];
    if ( (int)header_buf <= 0 )
    {
      if ( content_buf_used >= v19 )
      {
        LOBYTE(v21) = (unsigned int)header_buf <= v19;
        goto LABEL_33;
      }
      if ( header_buf )
      {
        v22 = (size_t)&v10[v7];
        content_buf_used = (unsigned int)&v10[v7];
        goto LABEL_31;
      }
      v20 = &v10[v7];
LABEL_30:
      v22 = (size_t)v20;
      content_buf_used = (unsigned int)v20;
LABEL_31:
      v23 = realloc((void *)content_buf_len, v22);
      if ( !v23 )
      {
        v78 = v95;
        v77 = (void *)content_buf_len;
        goto LABEL_172;
      }
      content_buf_len = (unsigned int)v23;
      LOBYTE(v21) = v19 >= (unsigned int)header_buf;
      goto LABEL_33;
    }
    v20 = header_buf;
    if ( (unsigned int)header_buf >= v19 )
    {
      if ( content_buf_used >= v19 )
        v3 = __clz((unsigned int)&header_buf[-v19]);
      v20 = header_buf;
      if ( content_buf_used >= v19 )
      {
        v21 = (unsigned int)v3 >> 5;
        goto LABEL_33;
      }
      if ( (unsigned int)header_buf < v19 )
        v20 = &v10[v7];
      goto LABEL_30;
    }
    v10 = &header_buf[-v7];
    if ( (unsigned int)header_buf > content_buf_used )
    {
      v19 = (unsigned int)header_buf;
      goto LABEL_30;
    }
    v19 = (unsigned int)header_buf;
    LOBYTE(v21) = 1;
LABEL_33:
    memcpy((void *)(content_buf_len + v7), (const void *)content_length, (size_t)v10);
    v7 = v19;
    v85 = 0;
LABEL_34:
    if ( (int)header_buf > 0 )
      v3 = v21 & 1;
    else
      v3 = 0;
    if ( v3 )
      goto end_of_stream;
    goto LABEL_6;
  }
  if ( (int)v10 <= 0 )
  {
    LOBYTE(v21) = v7 >= (unsigned int)header_buf;
    goto LABEL_34;
  }
LABEL_84:
  v85 = v5;
  v44 = content_buf_used;
  v45 = (char *)content_buf_len;
  v46 = 0;
  while ( 2 )
  {
    if ( v8 )
      goto LABEL_85;
    content_buf_len = 0;
    while ( 2 )
    {
      if ( !v6 )
      {
        if ( *((_BYTE *)&v80[0x1B] + v46) == 13 )
          ++v46;
        if ( v46 >= (int)v10 )
          goto LABEL_126;
        if ( *((_BYTE *)&v80[0x1B] + v46) != 10 )
          goto LABEL_103;
        ++v46;
      }
      if ( v46 >= (int)v10 )
        goto LABEL_126;
LABEL_103:
      v51 = (int *)((char *)v6 + (_DWORD)v10 - v46);
      v52 = *_ctype_b_loc();
      v53 = content_length + v46 - 1;
      v54 = (char *)v6 + sa;
      do
      {
        v56 = *(unsigned __int8 *)++v53;
        v55 = v56;
        if ( (((unsigned int)v6 <= 0x1E) & (v52[v56] >> 0xC)) == 0 )
          break;
        v6 = (int *)((char *)v6 + 1);
        *v54 = v55;
        ++v46;
        *++v54 = 0;
      }
      while ( v6 != v51 );
      if ( v46 >= (int)v10 )
        goto LABEL_126;
      v57 = content_length + v46 - 1;
      while ( 1 )
      {
        v59 = *(unsigned __int8 *)++v57;
        v58 = v59;
        v60 = v59 == 13;
        if ( v59 != 13 )
          v60 = v58 == 10;
        if ( v60 )
          break;
        if ( (char *)++v46 == v10 )
          goto LABEL_126;
      }
      if ( v46 >= (int)v10 )
      {
LABEL_126:
        v8 = content_buf_len;
        goto LABEL_127;
      }
      v61 = *((unsigned __int8 *)&v80[0x1B] + v46);
      if ( v61 == 13 )
      {
        if ( ++v46 >= (int)v10 )
          goto LABEL_126;
        v61 = *((unsigned __int8 *)&v80[0x1B] + v46);
      }
      if ( v61 != 10 )
        continue;
      break;
    }
    if ( !v6 )
      goto LABEL_123;
    v62 = (unsigned __int8 *)sa;
    v8 = 0;
    v63 = (unsigned __int8 *)v6 + sa;
    do
    {
      v65 = *v62++;
      v64 = v65;
      v66 = 16 * v8;
      if ( (unsigned int)(v65 - 0x30) > 9 )
      {
        v67 = v66 - 0x57;
        v64 |= 0x20u;
      }
      else
      {
        v67 = v66 - 0x30;
      }
      v8 = v67 + v64;
    }
    while ( v62 != v63 );
    v6 = 0;
    ++v46;
    chunksize_buf[0] = 0;
    if ( !v8 )
    {
LABEL_123:
      content_buf_len = (unsigned int)v45;
      v5 = v85;
      goto end_of_stream;
    }
LABEL_85:
    v47 = (size_t)&v10[-v46];
    if ( (unsigned int)&v10[-v46] >= v8 )
      v47 = v8;
    v48 = v7;
    v7 += v47;
    if ( v7 <= v44 )
    {
LABEL_95:
      v50 = (const void *)(content_length + v46);
      v46 += v47;
      memcpy(&v45[v48], v50, v47);
      v8 -= v47;
      if ( v46 < (int)v10 )
        continue;
LABEL_127:
      content_buf_len = (unsigned int)v45;
      v5 = v85;
      LOBYTE(v21) = v7 >= (unsigned int)header_buf;
      content_buf_used = v44;
      v85 = (_BYTE *)(getHTTPResponse + 1);
      goto LABEL_34;
    }
    break;
  }
  if ( (int)header_buf >= 0 )
  {
    if ( (unsigned int)header_buf < v7 )
      v44 = v7;
    else
      v44 = (unsigned int)header_buf;
  }
  else
  {
    v44 = v7;
  }
  content_buf_len = v48;
  v49 = (char *)realloc(v45, v44);
  v48 = content_buf_len;
  if ( v49 )
  {
    v45 = v49;
    goto LABEL_95;
  }
  v77 = v45;
  v78 = v95;
  v5 = v85;
LABEL_172:
  free(v77);
  free(v5);
  *v78 = -1;
  return 0;
}
