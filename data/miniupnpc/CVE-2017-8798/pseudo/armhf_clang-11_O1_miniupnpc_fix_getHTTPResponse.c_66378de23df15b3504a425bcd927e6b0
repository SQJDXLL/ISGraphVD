void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // r0
  char *v5; // r8
  unsigned int v6; // r11
  char *v7; // r0
  unsigned int v8; // r6
  int v9; // r6
  int v10; // r0
  signed int v11; // r4
  const char *v12; // r9
  int v13; // r5
  void *v14; // r2
  int v15; // r0
  _BOOL4 v16; // r3
  int v17; // r6
  int v18; // r2
  int v19; // r1
  int v20; // r1
  int v21; // r11
  int v22; // r10
  int v23; // r1
  int v24; // r0
  int v25; // r7
  int v26; // r5
  int v27; // r2
  _BOOL4 v28; // r1
  int v29; // r2
  bool v30; // zf
  const char *v31; // r4
  int v32; // r6
  bool v33; // cc
  int v34; // r0
  bool v35; // zf
  const char *v36; // r6
  size_t v37; // r4
  int v38; // r0
  signed int v39; // r5
  unsigned int v40; // r0
  char *v41; // r9
  unsigned int v42; // r9
  const unsigned __int16 *v43; // r0
  int v44; // r1
  signed int v45; // r0
  int v46; // r2
  bool v47; // zf
  unsigned int v48; // r12
  unsigned int v49; // r0
  char *v50; // r1
  int v51; // t1
  int v52; // r3
  int v53; // r2
  size_t v54; // r6
  size_t v55; // r3
  size_t v56; // r1
  char *v57; // r3
  int v58; // r2
  int v59; // r0
  char *v60; // r0
  unsigned int v61; // r3
  size_t v62; // r9
  size_t v63; // r1
  char *v64; // r0
  int v65; // r2
  char *v66; // r0
  void *result; // r0
  unsigned int v68; // [sp+Ch] [bp-87Ch]
  unsigned int v69; // [sp+10h] [bp-878h]
  unsigned int v70; // [sp+10h] [bp-878h]
  unsigned int v71; // [sp+14h] [bp-874h]
  unsigned int v72; // [sp+14h] [bp-874h]
  unsigned int v73; // [sp+18h] [bp-870h]
  char *ptr; // [sp+20h] [bp-868h]
  int v75; // [sp+24h] [bp-864h]
  int v76; // [sp+28h] [bp-860h]
  void *v79; // [sp+34h] [bp-854h]
  char *v80; // [sp+34h] [bp-854h]
  int v81; // [sp+38h] [bp-850h]
  int v82; // [sp+3Ch] [bp-84Ch]
  int v83; // [sp+3Ch] [bp-84Ch]
  int *v84; // [sp+40h] [bp-848h]
  char v85[32]; // [sp+44h] [bp-844h] BYREF
  char src[2084]; // [sp+64h] [bp-824h] BYREF

  if ( status_code )
    *status_code = -1;
  v4 = (char *)malloc(0x800u);
  if ( !v4 )
    goto LABEL_162;
  v5 = v4;
  v6 = 2048;
  v7 = (char *)malloc(0x800u);
  if ( !v7 )
  {
    free(v5);
LABEL_162:
    *size = -1;
    return 0;
  }
  ptr = v7;
  v85[0] = 0;
  v76 = 0;
  v75 = -1;
  v69 = 0;
  v82 = 0;
  v68 = 2048;
  v73 = 0;
  v8 = 0;
  v81 = 0;
  v84 = status_code;
  while ( 1 )
  {
    v71 = v8;
    v9 = v82;
    do
    {
      v10 = receivedata(s, src, 2048, 5000, 0);
      if ( v10 < 1 )
        goto end_of_stream;
      v11 = v10;
      if ( v81 )
        goto LABEL_82;
      v83 = v10 + v9;
      if ( v10 + v9 <= v6 )
      {
        v12 = v5;
        v14 = (void *)v6;
      }
      else
      {
        v12 = (const char *)realloc(v5, v10 + v9);
        v13 = 1;
        v14 = (void *)(v11 + v9);
        v15 = 1;
        if ( !v12 )
        {
          free(v5);
          free(ptr);
          *size = -1;
          v15 = 0;
          v12 = v5;
          v14 = (void *)v6;
        }
        if ( !v15 )
        {
          v81 = 0;
          v5 = (char *)v12;
          v6 = (unsigned int)v14;
          continue;
        }
      }
      v79 = v14;
      memcpy((void *)&v12[v9], src, v11);
      v16 = 1;
      v17 = 0;
      if ( v83 >= 2 )
      {
        v17 = 0;
        v18 = 0;
        do
        {
          v19 = (unsigned __int8)v12[v18];
          if ( v19 == 10 )
          {
            v20 = v18 + 1;
            if ( v12[v18 + 1] == 10 )
              v17 = v18 + 2;
          }
          else if ( v19 == 13 )
          {
            v20 = v18 + 1;
            if ( v12[v18 + 1] == 10 )
            {
              v20 = v18 + 2;
              if ( v18 + 2 < v83 && v12[v20] == 13 )
              {
                v20 = v18 + 3;
                if ( v18 + 3 < v83 && v12[v20] == 10 )
                  v17 = v18 + 4;
              }
            }
          }
          else
          {
            v20 = v18;
          }
          v16 = v17 == 0;
          v18 = v20 + 1;
        }
        while ( v20 + 1 < v83 - 1 && !v17 );
      }
      v13 = 2;
      if ( v16 )
      {
        v5 = (char *)v12;
        v6 = (unsigned int)v79;
        v9 = v83;
        v81 = 0;
        continue;
      }
      v81 = v17;
      if ( v17 >= 2 )
      {
        v21 = v17 - 1;
        v22 = 0;
        v23 = 0;
        v24 = 0;
        v25 = 0;
        v26 = v83;
        while ( 1 )
        {
          if ( v24 >= 1 && v23 <= v24 && v12[v25] == 58 )
          {
            v22 = v25;
            do
            {
              v28 = 0;
              if ( v22 < v21 )
                v28 = v12[v22 + 1] == 0x20 || v12[v22 + 1] == 9;
              ++v22;
            }
            while ( v28 );
            v27 = v22 - 1;
          }
          else
          {
            v29 = (unsigned __int8)v12[v25];
            v30 = v29 == 13;
            if ( v29 != 13 )
              v30 = v29 == 10;
            if ( !v30 )
            {
              v27 = v25;
              goto LABEL_39;
            }
            if ( v84 && !v24 )
            {
              if ( v25 < 1 )
                goto LABEL_64;
              v31 = v12 + 1;
              v32 = v25;
              while ( 1 )
              {
                if ( *(v31 - 1) == 32 )
                {
                  if ( *v84 > -1 )
                  {
LABEL_59:
                    v26 = v83;
                    goto LABEL_64;
                  }
                  *v84 = atoi(v31);
                }
                ++v31;
                if ( !--v32 )
                  goto LABEL_59;
              }
            }
            v33 = v23 <= v24;
            if ( v23 > v24 )
              v33 = v22 <= v23;
            if ( !v33 )
            {
              v36 = &v12[v24];
              v37 = v23 - v24;
              if ( !strncasecmp(&v12[v24], "content-length", v23 - v24) )
              {
                v75 = atoi(&v12[v22]);
              }
              else if ( !strncasecmp(v36, "transfer-encoding", v37) )
              {
                v30 = strncasecmp(&v12[v22], "chunked", 7u) == 0;
                v38 = v76;
                if ( v30 )
                  v38 = 1;
                v76 = v38;
              }
            }
LABEL_64:
            v22 = 0;
            if ( v25 < v26 )
            {
              while ( 1 )
              {
                v34 = (unsigned __int8)v12[v25];
                v35 = v34 == 13;
                if ( v34 != 13 )
                  v35 = v34 == 10;
                if ( !v35 )
                  break;
                if ( v26 == ++v25 )
                {
                  v27 = v26;
                  v24 = v26;
                  v23 = v26;
                  goto LABEL_39;
                }
              }
            }
            v27 = v25;
            v24 = v25;
          }
          v23 = v25;
LABEL_39:
          v25 = v27 + 1;
          if ( v27 + 1 >= v21 )
            goto LABEL_79;
        }
      }
      v26 = v83;
LABEL_79:
      v11 = v26 - v81;
      v9 = v26;
      memcpy(src, &v12[v81], v26 - v81);
      v13 = 0;
      v5 = (char *)v12;
      v6 = (unsigned int)v79;
    }
    while ( v13 == 2 );
    if ( v13 )
      return 0;
LABEL_82:
    v82 = v9;
    if ( v81 )
      break;
LABEL_156:
    v8 = v71;
LABEL_157:
    if ( v75 >= 1 && v73 >= v75 )
      goto end_of_stream;
  }
  if ( !v76 )
  {
    v61 = v73;
    v62 = v11;
    if ( v11 + v73 > v75 )
      v62 = v75 - v73;
    if ( v75 <= 0 )
      v62 = v11;
    if ( v62 + v73 <= v68 )
    {
      v64 = ptr;
    }
    else
    {
      v63 = v75;
      if ( v75 < v62 + v73 )
        v63 = v62 + v73;
      if ( v75 < 0 )
        v63 = v62 + v73;
      v68 = v63;
      v64 = (char *)realloc(ptr, v63);
      if ( v64 )
      {
        v65 = 1;
      }
      else
      {
        free(ptr);
        free(v5);
        *size = -1;
        v65 = 0;
        v64 = ptr;
      }
      v61 = v73;
      if ( !v65 )
        return 0;
    }
    ptr = v64;
    memcpy(&v64[v61], src, v62);
    v73 += v62;
    goto LABEL_156;
  }
  v8 = v71;
  if ( v11 < 1 )
  {
    v42 = v73;
    v48 = v69;
    v66 = ptr;
    v58 = 0;
  }
  else
  {
    v39 = 0;
    v40 = v69;
    v41 = ptr;
    while ( 1 )
    {
      v80 = v41;
      v42 = v73;
LABEL_89:
      if ( !v40 )
        break;
      v70 = v40;
LABEL_123:
      v72 = v8;
      v54 = v11 - v39;
      if ( v70 < v11 - v39 )
        v54 = v70;
      v55 = v54 + v73;
      v73 += v54;
      if ( v54 + v42 <= v68 )
      {
        v57 = v80;
      }
      else
      {
        v56 = v75;
        if ( v75 < v55 )
          v56 = v54 + v42;
        if ( v75 < 0 )
          v56 = v54 + v42;
        v68 = v56;
        v57 = (char *)realloc(v80, v56);
        v58 = 1;
        v59 = 1;
        if ( !v57 )
        {
          free(v80);
          free(v5);
          v58 = 1;
          *size = -1;
          v59 = 0;
          v57 = v80;
        }
        if ( !v59 )
        {
          v48 = v70;
          v66 = v57;
          v8 = v72;
          goto LABEL_150;
        }
      }
      v60 = &v57[v42];
      v41 = v57;
      memcpy(v60, &src[v39], v54);
      v40 = v70 - v54;
      v39 += v54;
      v8 = v72;
      if ( v39 >= v11 )
      {
        v58 = 0;
        v48 = v40;
        v66 = v41;
        v42 = v73;
        goto LABEL_150;
      }
    }
    if ( !v8 )
    {
      if ( src[v39] == 13 )
        ++v39;
      if ( v39 < v11 && src[v39] == 10 )
        ++v39;
    }
    if ( v39 < v11 )
    {
      v43 = *_ctype_b_loc();
      while ( v8 <= 0x1E )
      {
        v44 = (unsigned __int8)src[v39];
        if ( (v43[v44] & 0x1000) == 0 )
          break;
        v85[v8 + 1] = 0;
        v85[v8] = v44;
        ++v39;
        ++v8;
        if ( v11 == v39 )
        {
          v39 = v11;
          break;
        }
      }
    }
    v45 = v11;
    if ( v39 > v11 )
      v45 = v39;
    do
    {
      if ( v45 == v39 )
      {
        v39 = v45;
        if ( v45 < v11 )
          goto LABEL_87;
        goto LABEL_88;
      }
      v46 = (unsigned __int8)src[v39++];
      v47 = v46 == 13;
      if ( v46 != 13 )
        v47 = v46 == 10;
    }
    while ( !v47 );
    if ( v46 != 13 )
      --v39;
    if ( v39 >= v11 )
      goto LABEL_88;
LABEL_87:
    if ( src[v39] != 10 )
    {
LABEL_88:
      v40 = 0;
      if ( v39 < v11 )
        goto LABEL_89;
      v48 = 0;
      v58 = 0;
      v66 = v80;
      goto LABEL_150;
    }
    v48 = 0;
    v49 = 0;
    if ( v8 )
    {
      v49 = 0;
      v50 = v85;
      do
      {
        v51 = (unsigned __int8)*v50++;
        v52 = v51 - 0x30;
        v53 = v51 | 0x20;
        if ( (unsigned int)(v51 - 0x30) >= 0xA )
          v52 = v53 - 0x57;
        v49 = v52 + 16 * v49;
        --v8;
      }
      while ( v8 );
    }
    v85[0] = 0;
    v70 = v49;
    if ( v49 )
    {
      ++v39;
      v8 = 0;
      goto LABEL_123;
    }
    v58 = 25;
    v8 = 0;
    v66 = v80;
  }
LABEL_150:
  if ( !v58 )
  {
    v69 = v48;
    ptr = v66;
    v73 = v42;
    goto LABEL_157;
  }
  ptr = v66;
  v73 = v42;
  result = 0;
  if ( v58 == 25 )
  {
end_of_stream:
    free(v5);
    *size = v73;
    if ( v73 )
      return ptr;
    free(ptr);
    return 0;
  }
  return result;
}
