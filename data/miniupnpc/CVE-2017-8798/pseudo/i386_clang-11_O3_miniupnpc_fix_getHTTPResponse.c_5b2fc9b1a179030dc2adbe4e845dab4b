char *__cdecl getHTTPResponse(int s, int *size, int *status_code)
{
  int *v3; // ebx
  char *v4; // eax
  char *v5; // esi
  char *v6; // eax
  size_t v7; // ebp
  unsigned int v8; // ecx
  int v9; // edi
  int v10; // eax
  signed int v11; // ebx
  signed int v12; // edx
  char *v13; // ebp
  int v14; // ebp
  int v15; // edi
  signed int v16; // esi
  char *v17; // eax
  int v18; // eax
  int v19; // ecx
  char v20; // dl
  int v21; // edx
  bool v22; // zf
  int v23; // ebx
  char *v24; // eax
  signed int v25; // ebp
  size_t v26; // eax
  unsigned int v27; // ebx
  const unsigned __int16 *v28; // eax
  unsigned int v29; // ecx
  int v30; // ecx
  signed int v31; // ecx
  signed int v32; // eax
  char v33; // dl
  size_t v34; // ebx
  char *v35; // eax
  int v36; // ecx
  int v37; // edx
  unsigned __int8 v38; // bl
  int v39; // ecx
  size_t v40; // ebx
  size_t v41; // eax
  char *v42; // eax
  int v43; // ebp
  int v44; // eax
  int v45; // edx
  int v46; // ebx
  int v47; // ecx
  char v48; // cl
  char v49; // al
  size_t v50; // ebp
  const char *v51; // ebx
  int *v52; // eax
  int v53; // eax
  int v54; // eax
  int v55; // eax
  int v56; // ecx
  char v57; // al
  char *v58; // eax
  signed int v59; // ebp
  size_t v60; // eax
  const unsigned __int16 *v61; // eax
  unsigned int v62; // ecx
  int v63; // ecx
  signed int v64; // ecx
  signed int v65; // eax
  char v66; // dl
  size_t v67; // ebx
  char *v68; // eax
  int v69; // ecx
  int v70; // edx
  unsigned __int8 v71; // bl
  int v72; // ecx
  size_t v73; // ebx
  char *v74; // eax
  bool v75; // cc
  int v76; // eax
  char *v77; // ebp
  char *v78; // edx
  int v79; // ebx
  int v80; // ecx
  char v81; // cl
  char v82; // al
  size_t v83; // edx
  int v84; // eax
  int v85; // ecx
  char v86; // al
  int v87; // ecx
  signed int v88; // ebx
  char *v89; // edx
  size_t v90; // eax
  char *v91; // eax
  char *v92; // ecx
  char *v93; // ebp
  char *v94; // ebx
  size_t v96; // [esp-8h] [ebp-874h]
  char *s1; // [esp+4h] [ebp-868h]
  char *s1a; // [esp+4h] [ebp-868h]
  char *s1b; // [esp+4h] [ebp-868h]
  char *s1c; // [esp+4h] [ebp-868h]
  char *s1d; // [esp+4h] [ebp-868h]
  signed int v102; // [esp+8h] [ebp-864h]
  signed int v103; // [esp+8h] [ebp-864h]
  int v104; // [esp+8h] [ebp-864h]
  char *v105; // [esp+8h] [ebp-864h]
  char *v106; // [esp+Ch] [ebp-860h]
  int v107; // [esp+Ch] [ebp-860h]
  int v108; // [esp+Ch] [ebp-860h]
  char *v109; // [esp+10h] [ebp-85Ch]
  char *ptr; // [esp+14h] [ebp-858h]
  void *ptra; // [esp+14h] [ebp-858h]
  size_t v112; // [esp+18h] [ebp-854h]
  size_t v113; // [esp+18h] [ebp-854h]
  size_t v114; // [esp+18h] [ebp-854h]
  int v115; // [esp+1Ch] [ebp-850h]
  unsigned int v116; // [esp+20h] [ebp-84Ch]
  unsigned int v117; // [esp+20h] [ebp-84Ch]
  unsigned int v118; // [esp+20h] [ebp-84Ch]
  unsigned int v119; // [esp+20h] [ebp-84Ch]
  unsigned int v120; // [esp+20h] [ebp-84Ch]
  signed int v121; // [esp+24h] [ebp-848h]
  signed int v122; // [esp+28h] [ebp-844h]
  size_t v123; // [esp+28h] [ebp-844h]
  unsigned int v124; // [esp+2Ch] [ebp-840h]
  int v125; // [esp+30h] [ebp-83Ch]
  unsigned int v126; // [esp+34h] [ebp-838h]
  char v127[32]; // [esp+3Ch] [ebp-830h] BYREF
  char src[2064]; // [esp+5Ch] [ebp-810h] BYREF

  if ( status_code )
    *status_code = -1;
  v3 = size;
  v4 = (char *)malloc(0x800u);
  if ( !v4 )
  {
    *size = -1;
    return 0;
  }
  v5 = v4;
  v6 = (char *)malloc(0x800u);
  if ( !v6 )
  {
    free(v5);
    *size = -1;
    return 0;
  }
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v109 = v6;
  v127[0] = 0;
  v126 = 2048;
  v115 = -1;
  v125 = 0;
  v121 = 0;
  v124 = 2048;
  v106 = 0;
LABEL_6:
  v116 = v8;
  v10 = receivedata(s, src, 2048, 5000, 0);
  if ( v10 <= 0 )
    goto end_of_stream;
  v11 = v121;
  v112 = v7;
  v12 = v10;
  v13 = v5;
  do
  {
    if ( v9 )
    {
      v121 = v11;
      v5 = v13;
      v8 = v116;
      v23 = v115;
      if ( !v125 )
        goto LABEL_197;
LABEL_35:
      if ( v12 > 0 )
      {
        v103 = v12;
        v115 = v23;
        if ( v23 < 0 )
        {
          v58 = v109;
          v59 = 0;
          while ( 1 )
          {
            ptr = v58;
            s1 = v106;
            v60 = v112;
LABEL_124:
            if ( !v60 )
              break;
            v114 = v60;
LABEL_152:
            v120 = v8;
            v73 = v12 - v59;
            if ( v114 < v12 - v59 )
              v73 = v114;
            v106 = &s1[v73];
            if ( (unsigned int)&s1[v73] <= v124 )
            {
              v74 = ptr;
            }
            else
            {
              v74 = (char *)realloc(ptr, (size_t)&s1[v73]);
              v124 = (unsigned int)&s1[v73];
              if ( !v74 )
              {
LABEL_221:
                free(ptr);
                goto LABEL_220;
              }
            }
            v109 = v74;
            memcpy(&s1[(_DWORD)v74], &src[v59], v73);
            v12 = v103;
            v59 += v73;
            v112 = v114 - v73;
            v58 = v109;
            v23 = v115;
            v8 = v120;
            if ( v59 >= v103 )
              goto LABEL_162;
          }
          if ( !v8 )
          {
            v59 += src[v59] == 13;
            if ( v59 < v12 )
              v59 += src[v59] == 10;
          }
          v27 = v8;
          if ( v59 < v12 )
          {
            v61 = *_ctype_b_loc();
            v62 = v27;
            while ( 1 )
            {
              v27 = v62;
              if ( v62 > 0x1E )
                break;
              v63 = src[v59];
              if ( (v61[v63] & 0x1000) == 0 )
                break;
              ++v59;
              v127[v27] = v63;
              v127[v27 + 1] = 0;
              v62 = v27 + 1;
              if ( v103 == v59 )
              {
                ++v27;
                v12 = v103;
                v59 = v103;
                goto LABEL_135;
              }
            }
            v12 = v103;
          }
LABEL_135:
          v64 = v12;
          v65 = v59;
          if ( v59 >= v12 )
            v64 = v59;
          while ( v64 != v65 )
          {
            v66 = src[v65++];
            if ( v66 == 13 || v66 == 10 )
            {
              v22 = v66 == 13;
              v12 = v103;
              v59 = v65 - 1;
              v112 = 0;
              if ( v22 )
                v59 = v65;
              if ( v59 >= v103 )
                goto LABEL_161;
              v60 = 0;
              v8 = v27;
              if ( src[v59] != 10 )
                goto LABEL_124;
              if ( v27 )
              {
                v67 = 0;
                v68 = v127;
                do
                {
                  v119 = v8;
                  v69 = *v68;
                  v108 = 16 * v67;
                  v70 = v69 - 48;
                  v71 = v69 - 48;
                  v72 = (v69 | 0x20) - 87;
                  if ( v71 < 0xAu )
                    v72 = v70;
                  ++v68;
                  v67 = v108 + v72;
                  v8 = v119 - 1;
                }
                while ( v119 != 1 );
                v127[0] = 0;
                v114 = v67;
                if ( v67 )
                {
                  v12 = v103;
                  ++v59;
                  v8 = 0;
                  goto LABEL_152;
                }
              }
              else
              {
LABEL_222:
                v127[0] = 0;
              }
LABEL_223:
              v3 = size;
              v109 = ptr;
              v106 = s1;
              goto end_of_stream;
            }
          }
        }
        else
        {
          v24 = v109;
          v25 = 0;
          while ( 1 )
          {
            ptr = v24;
            s1 = v106;
            v26 = v112;
LABEL_39:
            if ( !v26 )
              break;
            v113 = v26;
LABEL_67:
            v118 = v8;
            v40 = v12 - v25;
            if ( v113 < v12 - v25 )
              v40 = v113;
            v106 = &s1[v40];
            if ( (unsigned int)&s1[v40] <= v124 )
            {
              v42 = ptr;
            }
            else
            {
              v41 = v115;
              if ( v115 < (unsigned int)&s1[v40] )
                v41 = (size_t)&s1[v40];
              v124 = v41;
              v42 = (char *)realloc(ptr, v41);
              if ( !v42 )
                goto LABEL_221;
            }
            v109 = v42;
            memcpy(&s1[(_DWORD)v42], &src[v25], v40);
            v12 = v103;
            v25 += v40;
            v112 = v113 - v40;
            v24 = v109;
            v23 = v115;
            v8 = v118;
            if ( v25 >= v103 )
              goto LABEL_162;
          }
          if ( !v8 )
          {
            v25 += src[v25] == 13;
            if ( v25 < v12 )
              v25 += src[v25] == 10;
          }
          v27 = v8;
          if ( v25 < v12 )
          {
            v28 = *_ctype_b_loc();
            v29 = v27;
            while ( 1 )
            {
              v27 = v29;
              if ( v29 > 0x1E )
                break;
              v30 = src[v25];
              if ( (v28[v30] & 0x1000) == 0 )
                break;
              ++v25;
              v127[v27] = v30;
              v127[v27 + 1] = 0;
              v29 = v27 + 1;
              if ( v103 == v25 )
              {
                ++v27;
                v12 = v103;
                v25 = v103;
                goto LABEL_50;
              }
            }
            v12 = v103;
          }
LABEL_50:
          v31 = v12;
          v32 = v25;
          if ( v25 >= v12 )
            v31 = v25;
          while ( v31 != v32 )
          {
            v33 = src[v32++];
            if ( v33 == 13 || v33 == 10 )
            {
              v22 = v33 == 13;
              v12 = v103;
              v25 = v32 - 1;
              v112 = 0;
              if ( v22 )
                v25 = v32;
              if ( v25 >= v103 )
                goto LABEL_161;
              v26 = 0;
              v8 = v27;
              if ( src[v25] != 10 )
                goto LABEL_39;
              if ( v27 )
              {
                v34 = 0;
                v35 = v127;
                do
                {
                  v117 = v8;
                  v36 = *v35;
                  v107 = 16 * v34;
                  v37 = v36 - 48;
                  v38 = v36 - 48;
                  v39 = (v36 | 0x20) - 87;
                  if ( v38 < 0xAu )
                    v39 = v37;
                  ++v35;
                  v34 = v107 + v39;
                  v8 = v117 - 1;
                }
                while ( v117 != 1 );
                v127[0] = 0;
                v113 = v34;
                if ( v34 )
                {
                  v12 = v103;
                  ++v25;
                  v8 = 0;
                  goto LABEL_67;
                }
                goto LABEL_223;
              }
              goto LABEL_222;
            }
          }
        }
        v112 = 0;
LABEL_161:
        v106 = s1;
        v8 = v27;
        v23 = v115;
        v109 = ptr;
      }
LABEL_162:
      v75 = v23 <= 0;
      v3 = size;
      v7 = v112;
      if ( !v75 )
        goto LABEL_210;
      goto LABEL_6;
    }
    v15 = v12 + v11;
    if ( v12 + v11 <= v126 )
    {
      v5 = v13;
    }
    else
    {
      v16 = v12;
      v17 = (char *)realloc(v13, v12 + v11);
      v12 = v16;
      v5 = v17;
      v126 = v15;
      if ( !v17 )
      {
        free(v13);
        free(v109);
        goto LABEL_217;
      }
    }
    v102 = v12;
    memcpy(&v5[v11], src, v12);
    v14 = v15;
    if ( v15 >= 2 )
    {
      v121 = v15;
      v18 = v15 - 1;
      v19 = 0;
      while ( 1 )
      {
        v20 = v5[v19];
        if ( v20 == 10 )
        {
          v22 = v5[v19 + 1] == 10;
          v21 = v19 + 1;
          v9 = v19 + 2;
LABEL_25:
          if ( !v22 )
            v9 = 0;
          goto LABEL_31;
        }
        if ( v20 != 13 )
          goto LABEL_29;
        if ( v5[v19 + 1] != 10 )
          break;
        v21 = v19 + 2;
        if ( v19 + 2 < v121 )
        {
          v9 = 0;
          if ( v5[v21] != 13 )
            goto LABEL_31;
          v21 = v19 + 3;
          if ( v19 + 3 < v121 )
          {
            v22 = v5[v19 + 3] == 10;
            v9 = v19 + 4;
            goto LABEL_25;
          }
        }
LABEL_30:
        v9 = 0;
LABEL_31:
        v19 = v21 + 1;
        if ( v21 + 1 >= v18 || v9 )
        {
          v14 = v121;
          if ( !v9 )
            goto LABEL_9;
          if ( v9 >= 2 )
          {
            ptra = (void *)(v9 - 1);
            if ( status_code )
            {
              v43 = 0;
              s1a = 0;
              v44 = 0;
              v45 = v11 + v102;
              v46 = 0;
              v104 = v45;
              while ( 1 )
              {
                v48 = v5[v43];
                if ( v48 == 58 && (int)s1a > 0 && v44 <= (int)s1a )
                {
                  if ( v43 >= (int)ptra )
                  {
                    v46 = v43 + 1;
                    v47 = v43;
                  }
                  else
                  {
                    v46 = v43 + 1;
                    do
                    {
                      v49 = v5[v46];
                      if ( v49 != 9 && v49 != 32 )
                      {
                        v47 = v46 - 1;
                        goto LABEL_81;
                      }
                      ++v46;
                    }
                    while ( v9 != v46 );
                    v47 = v9 - 1;
                    v46 = v9;
                  }
                  goto LABEL_81;
                }
                if ( v48 == 13 || v48 == 10 )
                  break;
                v47 = v43;
                v43 = v44;
LABEL_81:
                v44 = v43;
                v43 = v47 + 1;
                if ( v47 + 1 >= (int)ptra )
                  goto LABEL_196;
              }
              v122 = v43;
              if ( s1a )
              {
                v50 = v44 - (_DWORD)s1a;
                if ( v44 > (int)s1a && v46 > v44 )
                {
                  s1b = &s1a[(_DWORD)v5];
                  if ( strncasecmp(s1b, "content-length", v50) )
                  {
                    if ( !strncasecmp(s1b, "transfer-encoding", v50) )
                    {
                      v55 = strncasecmp(&v5[v46], "chunked", 7u);
                      v56 = v125;
                      v45 = v104;
                      if ( !v55 )
                        v56 = 1;
                      v125 = v56;
                      v43 = v122;
                      v46 = 0;
                      if ( v122 < v121 )
                      {
LABEL_117:
                        while ( 1 )
                        {
                          v57 = v5[v43];
                          if ( v57 != 13 && v57 != 10 )
                            break;
                          if ( v45 == ++v43 )
                          {
                            v43 = v121;
                            goto LABEL_121;
                          }
                        }
                      }
                    }
                    else
                    {
                      v45 = v104;
                      v43 = v122;
                      v46 = 0;
                      if ( v122 < v121 )
                        goto LABEL_117;
                    }
                    goto LABEL_121;
                  }
                  v54 = strtol(&v5[v46], 0, 10);
                  v45 = v104;
                  v115 = v54;
                }
              }
              else
              {
                v51 = v5 + 1;
                v52 = status_code;
                if ( v43 > 0 )
                {
                  do
                  {
                    if ( *(v51 - 1) == 32 )
                    {
                      if ( *v52 >= 0 )
                        break;
                      v53 = strtol(v51, 0, 10);
                      v45 = v104;
                      *status_code = v53;
                      v52 = status_code;
                    }
                    ++v51;
                    --v43;
                  }
                  while ( v43 );
                }
              }
              v43 = v122;
              v46 = 0;
              if ( v122 < v121 )
                goto LABEL_117;
LABEL_121:
              v47 = v43;
              s1a = (char *)v43;
              goto LABEL_81;
            }
            v76 = 0;
            v77 = 0;
            s1c = 0;
            v78 = (char *)(v11 + v102);
            v79 = 0;
            v105 = v78;
            do
            {
              v81 = v77[(_DWORD)v5];
              if ( v81 == 58 && (int)s1c > 0 && v76 <= (int)s1c )
              {
                if ( (int)v77 >= (int)ptra )
                {
                  v79 = (int)(v77 + 1);
                  v80 = (int)v77;
                }
                else
                {
                  v79 = (int)(v77 + 1);
                  do
                  {
                    v82 = v5[v79];
                    if ( v82 != 32 && v82 != 9 )
                    {
                      v80 = v79 - 1;
                      goto LABEL_166;
                    }
                    ++v79;
                  }
                  while ( v9 != v79 );
                  v80 = v9 - 1;
                  v79 = v9;
                }
              }
              else if ( v81 == 13 || v81 == 10 )
              {
                v83 = v76 - (_DWORD)s1c;
                if ( v76 > (int)s1c && v79 > v76 )
                {
                  s1d = &s1c[(_DWORD)v5];
                  v123 = v83;
                  if ( !strncasecmp(s1d, "content-length", v83) )
                  {
                    v115 = strtol(&v5[v79], 0, 10);
                  }
                  else if ( !strncasecmp(s1d, "transfer-encoding", v123) )
                  {
                    v84 = strncasecmp(&v5[v79], "chunked", 7u);
                    v85 = v125;
                    if ( !v84 )
                      v85 = 1;
                    v125 = v85;
                  }
                }
                v79 = 0;
                if ( (int)v77 < v121 )
                {
                  while ( 1 )
                  {
                    v86 = v77[(_DWORD)v5];
                    if ( v86 != 13 && v86 != 10 )
                      break;
                    if ( v105 == ++v77 )
                    {
                      v77 = (char *)v121;
                      break;
                    }
                  }
                }
                v80 = (int)v77;
                s1c = v77;
              }
              else
              {
                v80 = (int)v77;
                v77 = (char *)v76;
              }
LABEL_166:
              v76 = (int)v77;
              v77 = (char *)(v80 + 1);
            }
            while ( v80 + 1 < (int)ptra );
          }
LABEL_196:
          memcpy(src, &v5[v9], v121 - v9);
          v12 = v121 - v9;
          v8 = v116;
          v23 = v115;
          if ( v125 )
            goto LABEL_35;
LABEL_197:
          v87 = v23;
          v88 = v23 - (_DWORD)v106;
          if ( (unsigned int)&v106[v12] <= v87 )
            v88 = v12;
          if ( v87 <= 0 )
            v88 = v12;
          v89 = v106;
          if ( (unsigned int)&v106[v88] <= v124 )
          {
            v92 = &v106[v88];
            v93 = v109;
          }
          else
          {
            v90 = v87;
            if ( v87 < (unsigned int)&v106[v88] )
              v90 = (size_t)&v106[v88];
            if ( v87 < 0 )
              v90 = (size_t)&v106[v88];
            v124 = v90;
            v91 = (char *)realloc(v109, v90);
            v89 = v106;
            v92 = &v106[v88];
            v93 = v91;
            if ( !v91 )
            {
              free(v109);
LABEL_220:
              free(v5);
LABEL_217:
              *size = -1;
              return 0;
            }
          }
          v96 = v88;
          v94 = v92;
          memcpy(&v89[(_DWORD)v93], src, v96);
          v106 = v94;
          v8 = v116;
          v109 = v93;
          v3 = size;
          v7 = v112;
          if ( v115 > 0 )
          {
LABEL_210:
            if ( (unsigned int)v106 >= v115 )
              goto end_of_stream;
          }
          goto LABEL_6;
        }
      }
      ++v19;
LABEL_29:
      v21 = v19;
      goto LABEL_30;
    }
LABEL_9:
    v9 = 0;
    v11 = v14;
    v12 = receivedata(s, src, 2048, 5000, 0);
    v13 = v5;
  }
  while ( v12 > 0 );
  v3 = size;
end_of_stream:
  free(v5);
  *v3 = (int)v106;
  if ( !v106 )
  {
    free(v109);
    return 0;
  }
  return v109;
}
