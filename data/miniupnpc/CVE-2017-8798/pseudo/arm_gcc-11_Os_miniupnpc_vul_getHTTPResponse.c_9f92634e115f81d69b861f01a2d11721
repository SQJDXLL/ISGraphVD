void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v3; // r5
  char *v4; // r0
  void *v5; // r0
  unsigned int v6; // r7
  char *v7; // r6
  signed int v8; // r10
  signed int v9; // r9
  unsigned int v10; // r4
  int v11; // r0
  signed int v12; // r8
  signed int v13; // r11
  char *v14; // r0
  int v15; // r3
  int v16; // r4
  int v17; // r3
  signed int v18; // r2
  signed int v19; // r9
  signed int v20; // r4
  int v21; // r1
  int v22; // r2
  unsigned int v23; // r3
  bool v24; // cc
  int v25; // r0
  signed int v26; // r8
  char *v27; // r3
  signed int v28; // r1
  bool v29; // zf
  _BOOL4 v30; // r1
  const char *v31; // r4
  bool v32; // cc
  const char *v33; // r9
  int v34; // r0
  int v35; // t1
  signed int v36; // r12
  bool v37; // zf
  int v38; // t1
  int v39; // r0
  int v40; // r4
  bool v41; // zf
  int v42; // r0
  int v43; // r3
  signed int v44; // r9
  char *v45; // r9
  const unsigned __int16 **v46; // r0
  int v47; // r1
  int v48; // r3
  bool v49; // zf
  int v50; // r2
  char *v51; // r1
  bool v52; // cc
  int v53; // r3
  int v54; // t1
  int v55; // r9
  int v56; // r9
  size_t v57; // r2
  int v58; // r3
  int *v59; // r2
  char *v60; // r0
  unsigned int v61; // r2
  int *v62; // r3
  char *v63; // r4
  int content_length; // [sp+0h] [bp-898h] BYREF
  int v66; // [sp+8h] [bp-890h]
  unsigned int content_buf_len; // [sp+Ch] [bp-88Ch]
  int *sizea; // [sp+10h] [bp-888h]
  int *status_codea; // [sp+14h] [bp-884h]
  unsigned int chunksize; // [sp+18h] [bp-880h]
  int chunked; // [sp+1Ch] [bp-87Ch]
  unsigned int content_buf_used; // [sp+20h] [bp-878h]
  unsigned int header_buf_len; // [sp+24h] [bp-874h]
  size_t v74; // [sp+28h] [bp-870h]
  int sa; // [sp+2Ch] [bp-86Ch]
  char *v76; // [sp+30h] [bp-868h]
  int v77; // [sp+34h] [bp-864h]
  char *s2; // [sp+38h] [bp-860h]
  char *v79; // [sp+3Ch] [bp-85Ch]
  char *v80; // [sp+40h] [bp-858h]
  size_t v81; // [sp+44h] [bp-854h]
  char chunksize_buf[32]; // [sp+4Ch] [bp-84Ch] BYREF
  char buf[2048]; // [sp+6Ch] [bp-82Ch] BYREF

  chunksize = (unsigned int)size;
  v77 = s;
  chunked = (int)status_code;
  if ( status_code )
    *status_code = -1;
  v3 = (char *)malloc(0x800u);
  if ( !v3 )
  {
    *(_DWORD *)chunksize = -1;
    return v3;
  }
  v4 = (char *)malloc(0x800u);
  if ( !v4 )
    goto LABEL_6;
  v6 = 0;
  status_codea = (_DWORD *)&loc_800;
  sa = 2048;
  v7 = v3;
  v66 = -1;
  v3 = v4;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  chunksize_buf[0] = 0;
  content_buf_used = 0;
  header_buf_len = 0;
  v76 = chunksize_buf;
  while ( 2 )
  {
    sizea = (int *)buf;
    v11 = receivedata(v77, buf, 2048, 5000, 0);
    v12 = v11;
    if ( v11 <= 0 )
      break;
    if ( v10 )
    {
      v13 = v9;
      content_buf_len = v10;
      goto LABEL_22;
    }
    v13 = v11 + v9;
    if ( v11 + v9 > (unsigned int)sa )
    {
      v14 = (char *)realloc(v7, v11 + v9);
      if ( !v14 )
      {
        free(v7);
LABEL_6:
        v5 = v3;
LABEL_7:
        free(v5);
        v3 = 0;
        *(_DWORD *)chunksize = -1;
        return v3;
      }
      v7 = v14;
      sa = v12 + v9;
    }
    memcpy(&v7[v9], sizea, v12);
    v15 = 0;
    content_buf_len = 0;
    while ( v13 - 1 > v15 )
    {
      if ( content_buf_len )
        goto LABEL_19;
      v21 = (unsigned __int8)v7[v15];
      v22 = v15 + 1;
      if ( v21 == 13 )
      {
        if ( v7[v22] == 10 )
        {
          v22 = v15 + 2;
          if ( v13 > v15 + 2 && v7[v22] == 13 )
          {
            v22 = v15 + 3;
            if ( v13 > v15 + 3 && v7[v22] == 10 )
            {
              v23 = v15 + 4;
LABEL_36:
              content_buf_len = v23;
            }
          }
        }
      }
      else
      {
        if ( v21 != 10 )
        {
          v22 = v15;
          goto LABEL_31;
        }
        if ( v7[v22] == 10 )
        {
          v23 = v15 + 2;
          goto LABEL_36;
        }
      }
LABEL_31:
      v15 = v22 + 1;
    }
    if ( !content_buf_len )
      goto LABEL_38;
LABEL_19:
    v16 = 0;
    v74 = content_buf_len - 1;
    v17 = 0;
    s2 = "content-length";
    v18 = 0;
    v79 = "transfer-encoding";
    v19 = 0;
    v80 = "chunked";
    while ( (int)v74 > v19 )
    {
      v24 = v18 <= v17;
      if ( v18 >= v17 )
        v24 = v18 <= 0;
      v25 = (unsigned __int8)v7[v19];
      v26 = v19;
      if ( v24 || v25 != 58 )
      {
        v29 = v25 == 10;
        if ( v25 != 10 )
          v29 = v25 == 13;
        if ( v29 )
        {
          v30 = v18 == 0;
          if ( !chunked )
            v30 = 0;
          if ( v30 )
          {
            v31 = v7;
            while ( v31 - v7 < v19 )
            {
              v38 = *(unsigned __int8 *)v31++;
              if ( v38 == 32 )
              {
                if ( *(int *)chunked >= 0 )
                  break;
                v39 = atoi(v31);
                *(_DWORD *)chunked = v39;
              }
            }
          }
          else
          {
            v32 = v18 < v17;
            if ( v18 < v17 )
              v32 = v17 < v16;
            if ( v32 )
            {
              v33 = &v7[v18];
              v81 = v17 - v18;
              if ( !strncasecmp(&v7[v18], s2, v17 - v18) )
              {
                v66 = atoi(&v7[v16]);
              }
              else if ( !strncasecmp(v33, v79, v81) )
              {
                v42 = strncasecmp(&v7[v16], v80, 7u);
                v43 = header_buf_len;
                if ( !v42 )
                  v43 = 1;
                header_buf_len = v43;
              }
            }
          }
          while ( 1 )
          {
            v19 = v26;
            if ( v13 <= v26 )
              break;
            v40 = (unsigned __int8)v7[v26++];
            v41 = v40 == 10;
            if ( v40 != 10 )
              v41 = v40 == 13;
            v16 = v41;
            if ( !v41 )
              goto LABEL_76;
          }
          v16 = 0;
LABEL_76:
          v17 = v19;
          v18 = v19;
        }
      }
      else
      {
        v27 = &v7[v19];
        v28 = v19;
        while ( 1 )
        {
          v35 = (unsigned __int8)*++v27;
          v34 = v35;
          v36 = v28;
          v37 = v35 == 9;
          if ( v35 != 9 )
            v37 = v34 == 32;
          ++v28;
          if ( !v37 )
            break;
          if ( (int)v74 <= v28 )
            goto LABEL_63;
        }
        v28 = v36;
LABEL_63:
        v17 = v19;
        v16 = v28 + 1;
        v19 = v28;
      }
      ++v19;
    }
    v12 = v13 - content_buf_len;
    memcpy(sizea, &v7[content_buf_len], v13 - content_buf_len);
LABEL_22:
    if ( !header_buf_len )
    {
      if ( v66 > 0 && v66 < v12 + v8 )
        v12 = v66 - v8;
      if ( v12 + v8 <= (unsigned int)status_codea )
      {
        v63 = v3;
      }
      else
      {
        v62 = (int *)v66;
        if ( v66 < v12 + v8 )
          v62 = (int *)(v12 + v8);
        status_codea = v62;
        v63 = (char *)realloc(v3, (size_t)v62);
        if ( !v63 )
        {
          free(v3);
          v5 = v7;
          goto LABEL_7;
        }
      }
      memcpy(&v63[v8], sizea, v12);
      v8 += v12;
      v3 = v63;
      goto LABEL_103;
    }
    v20 = 0;
LABEL_102:
    while ( v12 > v20 )
    {
      if ( !content_buf_used )
      {
        if ( !v6 )
        {
          if ( *((_BYTE *)&content_length + v20 + 0x6C) == 13 && v12 <= ++v20 )
            break;
          if ( *((_BYTE *)&content_length + v20 + 0x6C) == 10 )
            ++v20;
        }
        v45 = &v76[v6];
        while ( v12 > v20 )
        {
          v46 = _ctype_b_loc();
          v47 = *((unsigned __int8 *)sizea + v20);
          if ( ((v6 <= 0x1E) & ((*v46)[v47] >> 0xC)) == 0 )
          {
            while ( v12 > v20 )
            {
              v48 = *((unsigned __int8 *)sizea + v20);
              v49 = v48 == 10;
              if ( v48 != 10 )
                v49 = v48 == 13;
              if ( v49 )
              {
                if ( *((_BYTE *)&content_length + v20 + 0x6C) == 13 && v12 <= ++v20 )
                  goto LABEL_103;
                if ( *((_BYTE *)&content_length + v20 + 0x6C) != 10 )
                  goto LABEL_102;
                v50 = 0;
                v51 = v76;
                v44 = 0;
                while ( v6 != v50 )
                {
                  v54 = (unsigned __int8)*v51++;
                  v53 = v54;
                  v55 = 16 * v44;
                  if ( (unsigned int)(v54 - 0x30) > 9 )
                  {
                    v53 |= 0x20u;
                    v56 = v55 - 0x57;
                  }
                  else
                  {
                    v56 = v55 - 0x30;
                  }
                  v44 = v53 + v56;
                  ++v50;
                }
                v6 = 0;
                ++v20;
                chunksize_buf[0] = 0;
                if ( !v44 )
                  goto end_of_stream;
                goto LABEL_115;
              }
              ++v20;
            }
            goto LABEL_103;
          }
          *v45 = v47;
          ++v6;
          ++v20;
          *++v45 = 0;
        }
        break;
      }
      v44 = content_buf_used;
LABEL_115:
      v57 = v12 - v20;
      if ( v12 - v20 >= v44 )
        v57 = v44;
      v58 = v8 + v57;
      if ( v8 + v57 > (unsigned int)status_codea )
      {
        v74 = v57;
        v59 = (int *)v66;
        if ( v66 < v58 )
          v59 = (int *)v58;
        content_buf_used = v58;
        status_codea = v59;
        v60 = (char *)realloc(v3, (size_t)v59);
        v58 = content_buf_used;
        v57 = v74;
        if ( !v60 )
        {
          v66 = 0;
          free(v3);
          free(v7);
          v3 = (char *)v66;
          *(_DWORD *)chunksize = -1;
          return v3;
        }
        v3 = v60;
      }
      v74 = v58;
      content_buf_used = v57;
      memcpy(&v3[v8], (char *)sizea + v20, v57);
      v61 = content_buf_used;
      content_buf_used = v44 - content_buf_used;
      v20 += v61;
      v8 = v74;
    }
LABEL_103:
    v52 = v8 <= v66;
    if ( v8 >= v66 )
      v52 = v66 <= 0;
    if ( v52 )
    {
LABEL_38:
      v10 = content_buf_len;
      v9 = v13;
      continue;
    }
    break;
  }
end_of_stream:
  free(v7);
  *(_DWORD *)chunksize = v8;
  if ( !v8 )
  {
    free(v3);
    return 0;
  }
  return v3;
}
