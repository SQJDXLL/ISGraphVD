void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // r0
  char *v5; // r5
  void *v6; // r0
  unsigned int v7; // r1
  unsigned int v8; // r2
  int v9; // r12
  unsigned int v10; // r10
  int v11; // r4
  int v12; // r6
  int v13; // r0
  signed int v14; // r9
  int v15; // r2
  char *v16; // r0
  _BOOL4 v17; // r3
  int v18; // r7
  int v19; // r1
  int v20; // r2
  int v21; // r2
  int *v22; // lr
  int v23; // r4
  int v24; // r6
  int v25; // r1
  int v26; // r9
  int v27; // r8
  int v28; // r2
  int v29; // r2
  int v30; // r1
  bool v31; // zf
  bool v32; // zf
  bool v33; // cc
  char *v34; // r0
  size_t v35; // r9
  int v36; // r0
  const char *v37; // r6
  int v38; // r9
  int v39; // r0
  int v40; // r0
  bool v41; // zf
  int v42; // r8
  int v43; // r6
  int v44; // r1
  int v45; // r4
  int v46; // r9
  int v47; // r2
  int v48; // r2
  int v49; // r1
  bool v50; // zf
  bool v51; // zf
  bool v52; // cc
  char *v53; // r0
  size_t v54; // r4
  int v55; // r0
  int v56; // r0
  bool v57; // zf
  signed int v58; // r7
  const unsigned __int16 **v59; // r0
  int v60; // lr
  const unsigned __int16 *v61; // r0
  int v62; // r1
  int v63; // r0
  bool v64; // zf
  char *v65; // r0
  int v66; // t1
  unsigned int v67; // r6
  int v68; // r2
  int v69; // r1
  unsigned int v70; // r0
  size_t v71; // r6
  char *v72; // r0
  void *v73; // r1
  char *v74; // r2
  const unsigned __int16 **v75; // r0
  int v76; // lr
  const unsigned __int16 *v77; // r0
  int v78; // r1
  int v79; // r0
  bool v80; // zf
  char *v81; // r0
  int v82; // t1
  unsigned int v83; // r6
  int v84; // r2
  int v85; // r1
  unsigned int v86; // r0
  char *v87; // r12
  size_t v88; // r6
  size_t v89; // r1
  char *v90; // r0
  unsigned int v91; // r3
  size_t v92; // r6
  unsigned int v93; // r7
  void *v94; // r8
  size_t v95; // r1
  char *v96; // r0
  char *v97; // r9
  void *v99; // r0
  void *v100; // r0
  char *s1; // [sp+8h] [bp-878h]
  int *v102; // [sp+Ch] [bp-874h]
  int v103; // [sp+10h] [bp-870h]
  unsigned int v104; // [sp+14h] [bp-86Ch]
  int v105; // [sp+18h] [bp-868h]
  void *ptr; // [sp+1Ch] [bp-864h]
  unsigned int v107; // [sp+20h] [bp-860h]
  unsigned int v108; // [sp+24h] [bp-85Ch]
  _BYTE *v109; // [sp+28h] [bp-858h]
  int *v110; // [sp+2Ch] [bp-854h]
  int v111; // [sp+30h] [bp-850h]
  int v112; // [sp+34h] [bp-84Ch]
  unsigned int v113; // [sp+38h] [bp-848h]
  int v114; // [sp+3Ch] [bp-844h]
  char v115; // [sp+40h] [bp-840h] BYREF
  _BYTE v116[3]; // [sp+41h] [bp-83Fh] BYREF
  char src[2080]; // [sp+60h] [bp-820h] BYREF

  v112 = s;
  v110 = status_code;
  if ( status_code )
    *status_code = -1;
  v4 = (char *)malloc(0x800u);
  if ( !v4 )
    goto LABEL_219;
  v5 = v4;
  v113 = 2048;
  v6 = malloc(0x800u);
  if ( !v6 )
  {
    free(v5);
LABEL_219:
    *size = -1;
    return 0;
  }
  ptr = v6;
  v7 = -1;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v102 = size;
  v115 = 0;
  v103 = 0;
  v109 = v116;
  v104 = 2048;
  v108 = 0;
  do
  {
    do
    {
      while ( 1 )
      {
        v107 = v8;
        v105 = v7;
        do
        {
          v12 = v9;
          v13 = receivedata(v112, src, 2048, 5000, 0);
          if ( v13 < 1 )
            goto end_of_stream;
          v14 = v13;
          if ( v11 )
          {
            v9 = v12;
            goto LABEL_119;
          }
          v15 = v113;
          v114 = v13 + v12;
          if ( v13 + v12 <= v113 )
          {
            v16 = v5;
          }
          else
          {
            v16 = (char *)realloc(v5, v13 + v12);
            v15 = v114;
            if ( !v16 )
            {
              free(v5);
              v99 = ptr;
LABEL_220:
              free(v99);
              *v102 = -1;
              return 0;
            }
          }
          v113 = v15;
          v5 = v16;
          memcpy(&v16[v12], src, v14);
          v9 = v114;
          v17 = 1;
          v11 = 0;
          v18 = 0;
          if ( v114 >= 2 )
          {
            v19 = 0;
            do
            {
              v20 = (unsigned __int8)v5[v19];
              if ( v20 == 10 )
              {
                v21 = v19 + 1;
                v18 = 0;
                if ( v5[v19 + 1] == 10 )
                  v18 = v19 + 2;
                goto LABEL_30;
              }
              if ( v20 == 13 )
              {
                v21 = v19 + 1;
                v18 = 0;
                if ( v5[v19 + 1] != 10 )
                  goto LABEL_30;
                v21 = v19 + 2;
                if ( v19 + 2 < v114 )
                {
                  v18 = 0;
                  if ( v5[v21] != 13 )
                    goto LABEL_30;
                  v21 = v19 + 3;
                  if ( v19 + 3 < v114 )
                  {
                    v18 = 0;
                    if ( v5[v21] == 10 )
                      v18 = v19 + 4;
                    goto LABEL_30;
                  }
                }
              }
              else
              {
                v21 = v19;
              }
              v18 = 0;
LABEL_30:
              v17 = v18 == 0;
              v19 = v21 + 1;
            }
            while ( v21 + 1 < v114 - 1 && !v18 );
          }
        }
        while ( v17 );
        if ( v18 >= 2 )
        {
          v22 = v110;
          v111 = v18 - 1;
          if ( v110 )
          {
            v23 = v14 + v12;
            v24 = 0;
            v25 = 0;
            v26 = 0;
            v27 = 0;
            while ( 1 )
            {
              v29 = (unsigned __int8)v5[v27];
              if ( v29 == 58 && v26 >= 1 && v25 <= v26 )
              {
                v24 = v27 + 1;
                if ( v27 < v111 )
                {
                  do
                  {
                    v30 = (unsigned __int8)v5[v24];
                    v31 = v30 == 9;
                    if ( v30 != 9 )
                      v31 = v30 == 32;
                    if ( !v31 )
                    {
                      v28 = v24 - 1;
                      goto LABEL_38;
                    }
                    ++v24;
                  }
                  while ( v18 != v24 );
                  v28 = v111;
                  v25 = v27;
                  v24 = v18;
                  goto LABEL_39;
                }
                v28 = v27;
              }
              else
              {
                v32 = v29 == 13;
                if ( v29 != 13 )
                  v32 = v29 == 10;
                if ( !v32 )
                {
                  v28 = v27;
                  goto LABEL_39;
                }
                if ( v26 )
                {
                  v33 = v25 <= v26;
                  if ( v25 > v26 )
                    v33 = v24 <= v25;
                  if ( !v33 )
                  {
                    v34 = &v5[v26];
                    v35 = v25 - v26;
                    s1 = v34;
                    if ( !strncasecmp(v34, "content-length", v35) )
                    {
                      v105 = strtol(&v5[v24], 0u, 10);
                    }
                    else if ( !strncasecmp(s1, "transfer-encoding", v35) )
                    {
                      v31 = strncasecmp(&v5[v24], "chunked", 7u) == 0;
                      v36 = v103;
                      if ( v31 )
                        v36 = 1;
                      v103 = v36;
                    }
                    v22 = v110;
                    v9 = v114;
                  }
                }
                else
                {
                  v37 = v5 + 1;
                  v38 = v27;
                  if ( v27 >= 1 )
                  {
                    do
                    {
                      if ( *(v37 - 1) == 32 )
                      {
                        if ( *v22 >= 0 )
                          break;
                        v39 = strtol(v37, 0u, 10);
                        v22 = v110;
                        v9 = v114;
                        *v110 = v39;
                      }
                      ++v37;
                      --v38;
                    }
                    while ( v38 );
                  }
                }
                v24 = 0;
                if ( v27 < v9 )
                {
                  while ( 1 )
                  {
                    v40 = (unsigned __int8)v5[v27];
                    v41 = v40 == 13;
                    if ( v40 != 13 )
                      v41 = v40 == 10;
                    if ( !v41 )
                      break;
                    if ( v23 == ++v27 )
                    {
                      v28 = v9;
                      v26 = v9;
                      v25 = v9;
                      goto LABEL_39;
                    }
                  }
                }
                v28 = v27;
                v26 = v27;
              }
LABEL_38:
              v25 = v27;
LABEL_39:
              v27 = v28 + 1;
              if ( v28 + 1 >= v111 )
                goto LABEL_118;
            }
          }
          v42 = v14 + v12;
          v43 = 0;
          v44 = 0;
          v45 = 0;
          v46 = 0;
          while ( 2 )
          {
            v48 = (unsigned __int8)v5[v46];
            if ( v48 == 58 && v45 >= 1 && v44 <= v45 )
            {
              v43 = v46 + 1;
              if ( v46 < v111 )
              {
                do
                {
                  v49 = (unsigned __int8)v5[v43];
                  v50 = v49 == 32;
                  if ( v49 != 32 )
                    v50 = v49 == 9;
                  if ( !v50 )
                  {
                    v47 = v43 - 1;
                    goto LABEL_82;
                  }
                  ++v43;
                }
                while ( v18 != v43 );
                v47 = v111;
                v44 = v46;
                v43 = v18;
LABEL_83:
                v46 = v47 + 1;
                if ( v47 + 1 >= v111 )
                  goto LABEL_118;
                continue;
              }
              v47 = v46;
            }
            else
            {
              v51 = v48 == 13;
              if ( v48 != 13 )
                v51 = v48 == 10;
              if ( !v51 )
              {
                v47 = v46;
                goto LABEL_83;
              }
              v52 = v44 <= v45;
              if ( v44 > v45 )
                v52 = v43 <= v44;
              if ( v52 )
              {
                v43 = 0;
                if ( v46 < v9 )
                  goto LABEL_112;
              }
              else
              {
                v53 = &v5[v45];
                v54 = v44 - v45;
                s1 = v53;
                if ( !strncasecmp(v53, "content-length", v54) )
                {
                  v105 = strtol(&v5[v43], 0u, 10);
                }
                else if ( !strncasecmp(s1, "transfer-encoding", v54) )
                {
                  v31 = strncasecmp(&v5[v43], "chunked", 7u) == 0;
                  v55 = v103;
                  if ( v31 )
                    v55 = 1;
                  v103 = v55;
                }
                v9 = v114;
                v43 = 0;
                if ( v46 < v114 )
                {
                  while ( 1 )
                  {
LABEL_112:
                    v56 = (unsigned __int8)v5[v46];
                    v57 = v56 == 13;
                    if ( v56 != 13 )
                      v57 = v56 == 10;
                    if ( !v57 )
                      break;
                    if ( v42 == ++v46 )
                    {
                      v47 = v9;
                      v45 = v9;
                      v44 = v9;
                      goto LABEL_83;
                    }
                  }
                }
              }
              v47 = v46;
              v45 = v46;
            }
            break;
          }
LABEL_82:
          v44 = v46;
          goto LABEL_83;
        }
LABEL_118:
        v14 = v9 - v18;
        memcpy(src, &v5[v18], v9 - v18);
        v9 = v114;
        v11 = v18;
LABEL_119:
        v8 = v107;
        v114 = v9;
        if ( v103 )
          break;
        v91 = v108;
        v92 = v14;
        if ( v14 + v108 > v105 )
          v92 = v105 - v108;
        if ( v105 <= 0 )
          v92 = v14;
        v93 = v92 + v108;
        if ( v92 + v108 <= v104 )
        {
          v97 = (char *)ptr;
        }
        else
        {
          v94 = ptr;
          v95 = v105;
          if ( v105 < v93 )
            v95 = v92 + v108;
          if ( v105 < 0 )
            v95 = v92 + v108;
          v104 = v95;
          v96 = (char *)realloc(ptr, v95);
          v91 = v108;
          v97 = v96;
          if ( !v96 )
          {
            v100 = v94;
            goto LABEL_227;
          }
        }
        memcpy(&v97[v91], src, v92);
        v9 = v114;
        v8 = v107;
        ptr = v97;
        v108 = v93;
        v7 = v105;
        if ( v105 >= 1 )
          goto LABEL_216;
      }
      if ( v14 >= 1 )
      {
        v58 = 0;
        if ( v105 >= 0 )
        {
          while ( 1 )
          {
            v111 = v108;
            while ( !v8 )
            {
              if ( !v10 )
              {
                if ( src[v58] == 13 )
                  ++v58;
                if ( v58 < v14 && src[v58] == 10 )
                  ++v58;
              }
              if ( v58 < v14 )
              {
                v75 = _ctype_b_loc();
                v9 = v114;
                v76 = (int)v109;
                v77 = *v75;
                while ( v10 <= 0x1E )
                {
                  v78 = (unsigned __int8)src[v58];
                  if ( (v77[v78] & 0x1000) == 0 )
                    break;
                  ++v58;
                  *(_BYTE *)(v76 + v10) = 0;
                  v116[v10++ - 1] = v78;
                  if ( v14 == v58 )
                  {
                    v58 = v14;
                    break;
                  }
                }
              }
              while ( v58 < v14 )
              {
                v79 = (unsigned __int8)src[v58++];
                v80 = v79 == 13;
                if ( v79 != 13 )
                  v80 = v79 == 10;
                if ( v80 )
                {
                  if ( v79 != 13 )
                    --v58;
                  break;
                }
              }
              if ( v58 >= v14 )
              {
LABEL_211:
                v8 = 0;
                v108 = v111;
                goto LABEL_212;
              }
              v8 = 0;
              if ( src[v58] == 10 )
              {
                if ( v10 )
                {
                  v8 = 0;
                  v81 = &v115;
                  do
                  {
                    v82 = (unsigned __int8)*v81++;
                    v83 = v8;
                    v84 = v82 - 0x30;
                    v85 = v82 | 0x20;
                    if ( (unsigned int)(v82 - 0x30) >= 0xA )
                      v84 = v85 - 0x57;
                    --v10;
                    v8 = v84 + 16 * v83;
                  }
                  while ( v10 );
                  v86 = v104;
                  v10 = 0;
                  v115 = 0;
                  if ( v8 )
                  {
                    v87 = (char *)ptr;
                    ++v58;
                    goto LABEL_193;
                  }
                }
                else
                {
LABEL_221:
                  v115 = 0;
                }
LABEL_222:
                v108 = v111;
                goto end_of_stream;
              }
            }
            v87 = (char *)ptr;
            v86 = v104;
LABEL_193:
            v88 = v14 - v58;
            v107 = v8;
            if ( v8 < v14 - v58 )
              v88 = v8;
            v108 = v88 + v111;
            if ( v88 + v111 > v86 )
            {
              ptr = v87;
              v89 = v105;
              if ( v105 < v88 + v111 )
                v89 = v88 + v111;
              v104 = v89;
              v90 = (char *)realloc(v87, v89);
              v73 = ptr;
              v87 = v90;
              if ( !v90 )
                break;
            }
            ptr = v87;
            memcpy(&v87[v111], &src[v58], v88);
            v9 = v114;
            v58 += v88;
            v8 = v107 - v88;
            if ( v58 >= v14 )
              goto LABEL_212;
          }
LABEL_226:
          v100 = v73;
LABEL_227:
          free(v100);
          v99 = v5;
          goto LABEL_220;
        }
        do
        {
          v111 = v108;
          do
          {
            if ( v8 )
            {
              v70 = v104;
              goto LABEL_153;
            }
            if ( !v10 )
            {
              if ( src[v58] == 13 )
                ++v58;
              if ( v58 < v14 && src[v58] == 10 )
                ++v58;
            }
            if ( v58 < v14 )
            {
              v59 = _ctype_b_loc();
              v9 = v114;
              v60 = (int)v109;
              v61 = *v59;
              while ( v10 <= 0x1E )
              {
                v62 = (unsigned __int8)src[v58];
                if ( (v61[v62] & 0x1000) == 0 )
                  break;
                ++v58;
                *(_BYTE *)(v60 + v10) = 0;
                v116[v10++ - 1] = v62;
                if ( v14 == v58 )
                {
                  v58 = v14;
                  break;
                }
              }
            }
            while ( v58 < v14 )
            {
              v63 = (unsigned __int8)src[v58++];
              v64 = v63 == 13;
              if ( v63 != 13 )
                v64 = v63 == 10;
              if ( v64 )
              {
                if ( v63 != 13 )
                  --v58;
                break;
              }
            }
            if ( v58 >= v14 )
              goto LABEL_211;
            v8 = 0;
          }
          while ( src[v58] != 10 );
          if ( !v10 )
            goto LABEL_221;
          v8 = 0;
          v65 = &v115;
          do
          {
            v66 = (unsigned __int8)*v65++;
            v67 = v8;
            v68 = v66 - 0x30;
            v69 = v66 | 0x20;
            if ( (unsigned int)(v66 - 0x30) >= 0xA )
              v68 = v69 - 0x57;
            --v10;
            v8 = v68 + 16 * v67;
          }
          while ( v10 );
          v70 = v104;
          v10 = 0;
          v115 = 0;
          if ( !v8 )
            goto LABEL_222;
          ++v58;
LABEL_153:
          v71 = v14 - v58;
          v107 = v8;
          if ( v8 < v14 - v58 )
            v71 = v8;
          v108 = v71 + v111;
          if ( v71 + v111 <= v70 )
          {
            v74 = (char *)ptr;
          }
          else
          {
            v72 = (char *)realloc(ptr, v71 + v111);
            v73 = ptr;
            v74 = v72;
            v104 = v108;
            if ( !v72 )
              goto LABEL_226;
          }
          ptr = v74;
          memcpy(&v74[v111], &src[v58], v71);
          v9 = v114;
          v58 += v71;
          v8 = v107 - v71;
        }
        while ( v58 < v14 );
      }
LABEL_212:
      v7 = v105;
    }
    while ( v105 < 1 );
LABEL_216:
    ;
  }
  while ( v108 < v7 );
end_of_stream:
  free(v5);
  v31 = v108 == 0;
  *v102 = v108;
  if ( !v31 )
    return ptr;
  free(ptr);
  return 0;
}
