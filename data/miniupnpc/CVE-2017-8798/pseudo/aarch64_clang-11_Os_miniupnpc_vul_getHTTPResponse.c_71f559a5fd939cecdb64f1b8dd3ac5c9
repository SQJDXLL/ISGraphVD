void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  void *result; // x0
  char *v6; // x25
  char *v7; // x0
  int v8; // w21
  int v9; // w19
  unsigned int v10; // w11
  int v11; // w20
  unsigned int v12; // w26
  int v13; // w9
  __int64 v14; // x22
  int v15; // w0
  int v16; // w23
  unsigned int v17; // w27
  char *v18; // x22
  int v19; // w9
  int v20; // w11
  __int64 v21; // x11
  __int64 v22; // x10
  int v23; // w11
  int v24; // w9
  int *v25; // x13
  int v26; // w27
  int v27; // w22
  int v28; // w9
  int v29; // w8
  int v30; // w23
  int v31; // w10
  __int64 v32; // x9
  int v33; // w12
  __int64 v34; // x27
  const char *v35; // x22
  int v36; // w0
  int v37; // w10
  int v38; // w0
  int v39; // w8
  char *v40; // x8
  __int64 v41; // x9
  int v42; // w10
  __int64 v43; // x27
  unsigned int v44; // w21
  const unsigned __int16 *v45; // x10
  __int64 v46; // x8
  __int64 v47; // x15
  char *v48; // x16
  __int64 v49; // x8
  int v50; // w9
  __int64 v51; // x8
  char *v52; // x9
  int v53; // t1
  int v54; // w11
  int v55; // w10
  unsigned int v56; // w28
  int v57; // w9
  size_t v58; // x1
  char *v59; // x0
  int v60; // w11
  int v62; // w22
  size_t v63; // x1
  char *v64; // x0
  char *v65; // x0
  char *v66; // x0
  size_t v67; // [xsp+0h] [xbp-8A0h]
  const char *v68; // [xsp+8h] [xbp-898h]
  int *v69; // [xsp+30h] [xbp-870h]
  int v70; // [xsp+38h] [xbp-868h]
  int v71; // [xsp+3Ch] [xbp-864h]
  char *ptr; // [xsp+40h] [xbp-860h]
  __int64 v73; // [xsp+48h] [xbp-858h]
  unsigned int v74; // [xsp+54h] [xbp-84Ch]
  unsigned int v75; // [xsp+54h] [xbp-84Ch]
  int v76; // [xsp+58h] [xbp-848h]
  int v77; // [xsp+5Ch] [xbp-844h]
  int v78; // [xsp+5Ch] [xbp-844h]
  int v80; // [xsp+70h] [xbp-830h]
  int v81; // [xsp+70h] [xbp-830h]
  char v82[32]; // [xsp+78h] [xbp-828h] BYREF
  char src[2056]; // [xsp+98h] [xbp-808h] BYREF

  if ( status_code )
    *status_code = -1;
  result = malloc(0x800uLL);
  if ( !result )
    goto LABEL_149;
  v6 = (char *)result;
  v7 = (char *)malloc(0x800uLL);
  if ( !v7 )
  {
    free(v6);
    result = 0LL;
LABEL_149:
    *size = -1;
    return result;
  }
  v69 = size;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 2048;
  v13 = -1;
  v14 = 2048LL;
  ptr = v7;
  v70 = 0;
  v76 = 0;
  v82[0] = 0;
  while ( 2 )
  {
    v74 = v10;
    v71 = v13;
    v15 = receivedata((unsigned int)s, src, 2048LL, 5000LL, 0LL);
    if ( v15 < 1 )
      goto end_of_stream;
    v16 = v15;
    v73 = v14;
    v17 = v9;
    v18 = v6;
    while ( 1 )
    {
      if ( v11 )
      {
        v9 = v17;
        v6 = v18;
        goto LABEL_83;
      }
      v9 = v16 + v17;
      if ( v16 + v17 <= v12 )
      {
        v6 = v18;
      }
      else
      {
        v6 = (char *)realloc(v18, (unsigned int)v9);
        v12 = v16 + v17;
        if ( !v6 )
        {
          free(v18);
          v65 = ptr;
LABEL_150:
          free(v65);
          result = 0LL;
          *v69 = -1;
          return result;
        }
      }
      memcpy(&v6[v17], src, (unsigned int)v16);
      if ( v9 > 1 )
        break;
LABEL_34:
      v16 = receivedata((unsigned int)s, src, 2048LL, 5000LL, 0LL);
      v11 = 0;
      v17 = v9;
      v18 = v6;
      if ( v16 < 1 )
        goto end_of_stream;
    }
    v19 = 0;
    do
    {
      v20 = (unsigned __int8)v6[v19];
      if ( v20 == 10 )
      {
        v22 = v19 + 1LL;
        v23 = (unsigned __int8)v6[v22];
        v24 = v19 + 2;
LABEL_23:
        if ( v23 == 10 )
          v11 = v24;
        else
          v11 = 0;
        goto LABEL_26;
      }
      if ( v20 != 13 )
      {
        v11 = 0;
        goto LABEL_29;
      }
      LODWORD(v21) = v19 + 1;
      if ( v6[v19 + 1] != 10 || (v21 = v19 + 2LL, v19 + 2 >= v9) || v6[v21] != 13 )
      {
        v11 = 0;
        v19 = v21;
        goto LABEL_29;
      }
      v22 = v19 + 3LL;
      if ( (int)v22 < v9 )
      {
        v23 = (unsigned __int8)v6[v22];
        v24 = v19 + 4;
        goto LABEL_23;
      }
      v11 = 0;
LABEL_26:
      v19 = v22;
LABEL_29:
      ++v19;
    }
    while ( v19 < v9 - 1 && !v11 );
    if ( !v11 )
      goto LABEL_34;
    if ( v11 >= 2 )
    {
      v25 = status_code;
      v26 = v11 - 1;
      v27 = 0;
      v28 = 0;
      v29 = 0;
      v30 = 0;
      v77 = s;
      do
      {
        v31 = (unsigned __int8)v6[v30];
        v80 = v30;
        if ( v31 == 58 && v29 >= 1 && v28 <= v29 )
        {
          if ( v30 < v26 )
          {
            v32 = 0LL;
            s = v77;
            while ( 1 )
            {
              v33 = (unsigned __int8)v6[v30 + 1 + v32];
              if ( v33 != 32 && v33 != 9 )
                break;
              if ( v11 - 1 - (__int64)v30 == ++v32 )
              {
                v28 = v30;
                v30 = v26;
                v27 = v11;
                goto LABEL_79;
              }
            }
            v30 += v32;
            v27 = v30 + 1;
            v28 = v80;
            goto LABEL_79;
          }
          v27 = v30 + 1;
        }
        else
        {
          if ( v31 != 13 && v31 != 10 )
            goto LABEL_78;
          if ( !v25 || v29 )
          {
            v37 = v28 - v29;
            if ( v28 > v29 && v27 > v28 )
            {
              v67 = v37;
              v68 = &v6[v29];
              if ( !strncasecmp(v68, "content-length", v37) )
              {
                v71 = atoi(&v6[v27]);
              }
              else if ( !strncasecmp(v68, "transfer-encoding", v67) )
              {
                v38 = strncasecmp(&v6[v27], "chunked", 7uLL);
                v39 = v70;
                if ( !v38 )
                  v39 = 1;
                v70 = v39;
              }
              v25 = status_code;
            }
          }
          else if ( v30 >= 1 )
          {
            v34 = (unsigned int)v30;
            v35 = v6 + 1;
            do
            {
              if ( *(v35 - 1) == 32 )
              {
                if ( (*v25 & 0x80000000) == 0 )
                  break;
                v36 = atoi(v35);
                v25 = status_code;
                *status_code = v36;
              }
              --v34;
              ++v35;
            }
            while ( v34 );
            v26 = v11 - 1;
          }
          if ( v30 < v9 )
          {
            v40 = &v6[v30];
            v41 = v9 - (__int64)v30;
            s = v77;
            while ( 1 )
            {
              v42 = (unsigned __int8)*v40;
              if ( v42 != 13 && v42 != 10 )
                break;
              ++v30;
              --v41;
              ++v40;
              if ( !v41 )
              {
                v27 = 0;
                v30 = v9;
                v29 = v9;
                v28 = v9;
                goto LABEL_79;
              }
            }
            v27 = 0;
            v29 = v30;
            v28 = v30;
            goto LABEL_79;
          }
          v27 = 0;
          v29 = v30;
        }
        v28 = v30;
LABEL_78:
        s = v77;
LABEL_79:
        ++v30;
      }
      while ( v30 < v26 );
    }
    v16 = v9 - v11;
    memcpy(src, &v6[v11], v9 - v11);
LABEL_83:
    v10 = v74;
    if ( !v70 )
    {
      v60 = v76;
      if ( v16 + v76 > v71 && v71 > 0 )
        v16 = v71 - v76;
      v62 = v16 + v76;
      if ( v16 + v76 <= (unsigned int)v73 )
      {
        v64 = ptr;
      }
      else
      {
        if ( v71 >= v62 )
          v63 = (unsigned int)v71;
        else
          v63 = (unsigned int)v62;
        v73 = v63;
        v64 = (char *)realloc(ptr, v63);
        if ( !v64 )
        {
          v66 = ptr;
LABEL_157:
          free(v66);
          v65 = v6;
          goto LABEL_150;
        }
        v60 = v76;
      }
      ptr = v64;
      memcpy(&v64[v60], src, v16);
      v10 = v74;
      v76 += v16;
LABEL_145:
      v13 = v71;
      v14 = v73;
      if ( v71 >= 1 && v76 >= v71 )
        goto end_of_stream;
      continue;
    }
    break;
  }
  if ( v16 < 1 )
    goto LABEL_145;
  LODWORD(v43) = 0;
  v78 = s;
  v81 = v76;
  do
  {
LABEL_86:
    if ( v8 )
      goto LABEL_119;
    if ( !v10 )
    {
      v43 = src[(int)v43] == 13 ? (int)v43 + 1LL : (int)v43;
      if ( (int)v43 < v16 && src[v43] == 10 )
        LODWORD(v43) = v43 + 1;
    }
    if ( (int)v43 < v16 )
    {
      v44 = v10;
      v45 = *_ctype_b_loc();
      v46 = 0LL;
      v10 = v16 + v44 - v43;
      while ( (unsigned __int64)v44 + v46 <= 0x1E )
      {
        v47 = (unsigned __int8)src[(int)v43 + v46];
        if ( (v45[v47] & 0x1000) == 0 )
          break;
        v48 = &v82[v44 + 1 + v46++];
        *(v48 - 1) = v47;
        *v48 = 0;
        if ( (unsigned int)v16 - (__int64)(int)v43 == v46 )
        {
          LODWORD(v43) = v16;
          goto LABEL_101;
        }
      }
      LODWORD(v43) = v43 + v46;
      v10 = v44 + v46;
    }
LABEL_101:
    v49 = (int)v43;
    if ( (int)v43 <= (__int64)(unsigned int)v16 )
      v43 = (unsigned int)v16;
    else
      v43 = (int)v43;
    while ( v43 != v49 )
    {
      v50 = (unsigned __int8)src[v49++];
      if ( v50 == 13 || v50 == 10 )
      {
        if ( v50 == 13 )
          LODWORD(v43) = v49;
        else
          LODWORD(v43) = v49 - 1;
        break;
      }
    }
    if ( v16 <= (int)v43 )
    {
      v8 = 0;
      v76 = v81;
      goto LABEL_145;
    }
    v8 = 0;
  }
  while ( src[(int)v43] != 10 );
  if ( v10 )
  {
    v8 = 0;
    v51 = v10;
    v52 = v82;
    do
    {
      v53 = (unsigned __int8)*v52++;
      v54 = v53 - 0x30;
      v55 = (v53 | 0x20) - 0x57;
      if ( (unsigned int)(v53 - 0x30) < 0xA )
        v55 = v54;
      --v51;
      v8 = v55 + 16 * v8;
    }
    while ( v51 );
    v82[0] = 0;
    if ( !v8 )
      goto LABEL_152;
    v10 = 0;
    LODWORD(v43) = v43 + 1;
LABEL_119:
    if ( v8 >= v16 - (int)v43 )
      v56 = v16 - v43;
    else
      v56 = v8;
    v57 = v56 + v81;
    v75 = v10;
    v76 = v56 + v81;
    if ( v56 + v81 <= (unsigned int)v73 )
    {
      v59 = ptr;
    }
    else
    {
      if ( v71 >= v57 )
        v58 = (unsigned int)v71;
      else
        v58 = (unsigned int)v57;
      v73 = v58;
      v59 = (char *)realloc(ptr, v58);
      if ( !v59 )
      {
        v66 = ptr;
        goto LABEL_157;
      }
    }
    ptr = v59;
    memcpy(&v59[v81], &src[(int)v43], v56);
    LODWORD(v43) = v56 + v43;
    v8 -= v56;
    s = v78;
    v10 = v75;
    v81 = v76;
    if ( (int)v43 >= v16 )
      goto LABEL_145;
    goto LABEL_86;
  }
  v82[0] = 0;
LABEL_152:
  v76 = v81;
end_of_stream:
  free(v6);
  *v69 = v76;
  if ( v76 )
    return ptr;
  free(ptr);
  return 0LL;
}
