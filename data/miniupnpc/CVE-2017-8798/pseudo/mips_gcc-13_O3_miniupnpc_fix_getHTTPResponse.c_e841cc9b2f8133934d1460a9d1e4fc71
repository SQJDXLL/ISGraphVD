char *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  void *v4; // $v0
  char *v5; // $t1
  unsigned int v6; // $fp
  unsigned int v7; // $t0
  unsigned int v8; // $s7
  unsigned int v9; // $s1
  char *v10; // $s2
  unsigned int v11; // $s6
  signed int v12; // $s5
  signed int v13; // $a3
  char *v14; // $v0
  signed int v15; // $a3
  int v16; // $a2
  int v17; // $s3
  char *v18; // $v0
  int v19; // $v0
  int v20; // $t5
  signed int v21; // $v0
  int v22; // $a0
  unsigned int v23; // $s3
  char *v24; // $s0
  int *v25; // $s3
  bool v26; // dc
  _BYTE *v27; // $v0
  int *v28; // $s6
  int v29; // $s3
  int v30; // $t4
  int v31; // $a2
  int v32; // $a1
  int v33; // $s1
  int v34; // $s7
  char *v35; // $s2
  char *v36; // $fp
  int v37; // $v0
  int v38; // $s0
  _BOOL4 v39; // $v0
  unsigned int v40; // $s6
  char *v41; // $fp
  signed int v42; // $s1
  signed int v43; // $s2
  size_t v44; // $s5
  char *v45; // $s4
  size_t v46; // $s7
  int v47; // $a0
  char *v48; // $v0
  unsigned int v49; // $v1
  char *v50; // $a1
  unsigned int v51; // $a2
  size_t v52; // $s0
  int v53; // $v0
  _BOOL4 v54; // $v0
  const unsigned __int16 *v55; // $t3
  unsigned int v56; // $v1
  char *v57; // $s0
  unsigned int v58; // $t4
  unsigned int v59; // $a2
  _BOOL4 v60; // $v0
  int v61; // $a1
  char *v62; // $a1
  _BOOL4 v63; // $v0
  int v64; // $v0
  int v65; // $v0
  _BOOL4 v66; // $v0
  _BOOL4 v67; // $v0
  int v68; // $v0
  int v69; // $v1
  int v70; // $a3
  char *v71; // $a0
  char *v72; // $v1
  int v73; // $a1
  int v74; // $a3
  const char *v75; // $s0
  int v76; // $v0
  char *v77; // $v1
  int v78; // $v1
  int *v79; // $s3
  int *v81; // $s3
  unsigned int content_buf_used_0a; // [sp+24h] [-874h]
  unsigned int content_buf_used_0; // [sp+24h] [-874h]
  unsigned int content_buf_used_0b; // [sp+24h] [-874h]
  unsigned int content_buf_used_0c; // [sp+24h] [-874h]
  unsigned int content_buf_used_0d; // [sp+24h] [-874h]
  int content_length; // [sp+28h] [-870h]
  char *chunksize_buf_index_0; // [sp+2Ch] [-86Ch]
  unsigned int chunksize_buf_index_0a; // [sp+2Ch] [-86Ch]
  unsigned int chunksize_buf_index_0b; // [sp+2Ch] [-86Ch]
  unsigned int chunksize_buf_index_0e; // [sp+2Ch] [-86Ch]
  unsigned int chunksize_buf_index_0c; // [sp+2Ch] [-86Ch]
  unsigned int chunksize_buf_index_0f; // [sp+2Ch] [-86Ch]
  unsigned int chunksize_buf_index_0d; // [sp+2Ch] [-86Ch]
  char *content_buf; // [sp+30h] [-868h]
  unsigned int content_buf_used; // [sp+34h] [-864h]
  signed int content_buf_useda; // [sp+34h] [-864h]
  unsigned int content_buf_usedd; // [sp+34h] [-864h]
  unsigned int content_buf_usedb; // [sp+34h] [-864h]
  unsigned int content_buf_usede; // [sp+34h] [-864h]
  unsigned int content_buf_usedc; // [sp+34h] [-864h]
  unsigned int header_buf_used; // [sp+38h] [-860h]
  unsigned int header_buf_useda; // [sp+38h] [-860h]
  char *v104; // [sp+3Ch] [-85Ch]
  unsigned int chunksize_buf_index; // [sp+40h] [-858h]
  unsigned int header_buf_len; // [sp+44h] [-854h]
  int endofheaders; // [sp+48h] [-850h]
  char *v108; // [sp+4Ch] [-84Ch]
  int valuestart; // [sp+50h] [-848h] BYREF
  int *status_codea; // [sp+54h] [-844h]
  char *v111; // [sp+58h] [-840h]
  size_t n; // [sp+5Ch] [-83Ch]
  int *sizea; // [sp+60h] [-838h]
  char *v114; // [sp+64h] [-834h]
  char *v115; // [sp+68h] [-830h]
  _DWORD *v116; // [sp+6Ch] [-82Ch]
  char chunksize_buf[32]; // [sp+74h] [-824h] BYREF
  char buf[2048]; // [sp+94h] [-804h] BYREF
  int v119; // [sp+894h] [-4h]

  v116 = &_stack_chk_guard;
  status_codea = status_code;
  if ( status_code )
    *status_code = -1;
  v4 = malloc(0x800u);
  if ( !v4 )
  {
    *size = -1;
    content_buf = 0;
    goto LABEL_149;
  }
  content_buf_used_0a = (unsigned int)v4;
  content_buf = (char *)malloc(0x800u);
  v5 = (char *)content_buf_used_0a;
  if ( !content_buf )
    goto LABEL_155;
  content_buf_used_0 = 2048;
  header_buf_len = 2048;
  content_length = -1;
  v104 = chunksize_buf;
  v114 = "content-length";
  chunksize_buf[0] = 0;
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  header_buf_used = 0;
  v10 = buf;
  v115 = "transfer-encoding";
  v11 = 0;
  sizea = size;
  while ( 1 )
  {
LABEL_6:
    content_buf_used = v7;
    chunksize_buf_index_0 = v5;
    v12 = receivedata(s, v10, 2048, 5000);
    v5 = chunksize_buf_index_0;
    v7 = content_buf_used;
    if ( v12 <= 0 )
      goto end_of_stream;
    if ( v11 )
    {
      if ( header_buf_used )
        break;
LABEL_24:
      v22 = content_length;
      v23 = v7 + v12;
      if ( content_length <= 0 )
      {
        v24 = content_buf;
        if ( content_buf_used_0 < v23 )
        {
          content_buf_used_0 = v7 + v12;
          if ( content_length )
          {
LABEL_28:
            content_buf_usedd = v7;
            chunksize_buf_index_0b = (unsigned int)v5;
            v24 = (char *)realloc(content_buf, content_buf_used_0);
            v5 = (char *)chunksize_buf_index_0b;
            v7 = content_buf_usedd;
            if ( !v24 )
            {
              size = sizea;
              free(content_buf);
              v5 = (char *)chunksize_buf_index_0b;
              goto LABEL_155;
            }
            goto LABEL_29;
          }
          v22 = v7 + v12;
LABEL_27:
          content_buf_used_0 = v22;
          goto LABEL_28;
        }
      }
      else if ( content_length < v23 )
      {
        v23 = content_length;
        v12 = content_length - v7;
        if ( content_buf_used_0 < content_length )
          goto LABEL_27;
        v24 = content_buf;
      }
      else
      {
        v24 = content_buf;
        if ( content_buf_used_0 < v23 )
          goto LABEL_27;
      }
LABEL_29:
      chunksize_buf_index_0e = (unsigned int)v5;
      memcpy(&v24[v7], v10, v12);
      v5 = (char *)chunksize_buf_index_0e;
      v7 = v23;
      content_buf = v24;
      header_buf_used = 0;
      goto LABEL_30;
    }
    v13 = v12 + v8;
    if ( header_buf_len < v12 + v8 )
    {
      chunksize_buf_index = content_buf_used;
      v14 = (char *)realloc(chunksize_buf_index_0, v12 + v8);
      v13 = v12 + v8;
      v7 = chunksize_buf_index;
      if ( !v14 )
      {
        v81 = sizea;
        free(chunksize_buf_index_0);
        free(content_buf);
        content_buf = 0;
        *v81 = -1;
        goto LABEL_149;
      }
      header_buf_len = v12 + v8;
      v5 = v14;
    }
    chunksize_buf_index = v7;
    content_buf_useda = v13;
    chunksize_buf_index_0a = (unsigned int)v5;
    memcpy(&v5[v8], v10, v12);
    v15 = content_buf_useda;
    v5 = (char *)chunksize_buf_index_0a;
    v7 = chunksize_buf_index;
    v16 = content_buf_useda - 1;
    if ( content_buf_useda < 2 )
    {
LABEL_19:
      v8 = content_buf_useda;
      continue;
    }
    v17 = 0;
    v18 = (char *)chunksize_buf_index_0a;
    while ( 1 )
    {
      while ( 1 )
      {
        v19 = *v18;
        v20 = v17 + 1;
        if ( v19 != 13 )
          break;
LABEL_17:
        v21 = v17 + 2;
        if ( *(_BYTE *)(chunksize_buf_index_0a + v20) == 10 )
        {
          v26 = v21 >= content_buf_useda;
          v27 = (_BYTE *)(chunksize_buf_index_0a + v21);
          if ( !v26 && (v20 = v17 + 3, *v27 == 13) )
          {
            if ( v20 < content_buf_useda )
            {
              v17 += 4;
              if ( *(_BYTE *)(chunksize_buf_index_0a + v20) == 10 )
                goto LABEL_40;
LABEL_21:
              v18 = (char *)(chunksize_buf_index_0a + v17);
              if ( v17 >= v16 )
              {
                v8 = content_buf_useda;
                goto LABEL_6;
              }
            }
            else
            {
              v17 += 4;
              v18 = (char *)(chunksize_buf_index_0a + v17);
              if ( v17 >= v16 )
              {
                v8 = content_buf_useda;
                goto LABEL_6;
              }
            }
          }
          else
          {
            v17 += 3;
            v18 = (char *)(chunksize_buf_index_0a + v17);
            if ( v17 >= v16 )
            {
              v8 = content_buf_useda;
              goto LABEL_6;
            }
          }
        }
        else
        {
          v17 += 2;
          v18 = (char *)(chunksize_buf_index_0a + v17);
          if ( v17 >= v16 )
            goto LABEL_19;
        }
      }
      while ( v19 != 10 )
      {
        if ( v20 >= v16 )
          goto LABEL_19;
        v17 = v20;
        v19 = *(char *)(chunksize_buf_index_0a + v20++);
        if ( v19 == 13 )
          goto LABEL_17;
      }
      v17 += 2;
      if ( *(_BYTE *)(chunksize_buf_index_0a + v20) != 10 )
        goto LABEL_21;
LABEL_40:
      if ( v17 >= v16 )
        break;
      v18 = (char *)(chunksize_buf_index_0a + v17);
      if ( v17 )
        goto LABEL_42;
    }
    v8 = content_buf_useda;
    if ( !v17 )
    {
      v11 = 0;
      continue;
    }
LABEL_42:
    if ( v20 <= 0 )
      goto LABEL_52;
    v28 = status_codea;
    chunksize_buf_index_0c = v9;
    endofheaders = v17;
    v108 = v10;
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v32 = 0;
    v33 = content_buf_useda;
    content_buf_usedb = chunksize_buf_index;
    chunksize_buf_index = v6;
    v34 = v20;
    v35 = v5;
    v36 = v5;
    while ( 2 )
    {
      v37 = *v36;
      v38 = v29 + 1;
      if ( v32 <= 0 )
      {
        if ( v37 != 13 && v37 != 10 )
          goto LABEL_49;
        if ( !v32 && v28 )
        {
          if ( v29 <= 0 )
            goto LABEL_72;
          valuestart = v33;
          v111 = v35;
          v75 = v35 + 1;
          while ( 1 )
          {
            if ( *(v75 - 1) == 32 )
            {
              if ( *v28 >= 0 )
              {
LABEL_67:
                v38 = v29 + 1;
                v33 = valuestart;
                v35 = v111;
                goto LABEL_68;
              }
              *v28 = strtol(v75, 0u, 10);
            }
            if ( &v35[v29 + 1] == ++v75 )
              goto LABEL_67;
          }
        }
        v39 = v29 < v33;
        if ( v32 >= v31 )
          goto LABEL_69;
LABEL_104:
        v67 = v31 < v30;
LABEL_105:
        valuestart = v30;
        if ( v67 )
        {
          n = v31 - v32;
          v111 = &v35[v32];
          if ( strncasecmp(&v35[v32], v114, v31 - v32) )
          {
            if ( !strncasecmp(v111, v115, n) )
            {
              v68 = strncasecmp(&v35[valuestart], "chunked", 7u);
              v69 = header_buf_used;
              if ( !v68 )
                v69 = 1;
              header_buf_used = v69;
              if ( v29 < v33 )
              {
LABEL_72:
                while ( 1 )
                {
                  v53 = *v36;
                  if ( v53 != 13 )
                  {
                    v31 = v29;
                    if ( v53 != 10 )
                      break;
                  }
                  v29 = v38;
                  if ( v38 == v33 )
                  {
                    v29 = v33 + 1;
                    v30 = 0;
                    v31 = v33;
                    v32 = v33;
                    goto LABEL_50;
                  }
                  v36 = &v35[v38++];
                }
              }
              else
              {
                v31 = v29;
              }
              v32 = v29;
              goto LABEL_113;
            }
          }
          else
          {
            content_length = strtol(&v35[valuestart], 0u, 10);
          }
        }
LABEL_68:
        v39 = v29 < v33;
        goto LABEL_69;
      }
      if ( v32 < v31 )
      {
        if ( v37 == 13 )
          goto LABEL_104;
        v26 = v37 != 10;
        v67 = v31 < v30;
        if ( v26 )
          goto LABEL_49;
        goto LABEL_105;
      }
      if ( v37 != 58 )
      {
        if ( v37 == 13 )
          goto LABEL_68;
        v26 = v37 == 10;
        v39 = v29 < v33;
        if ( !v26 )
        {
LABEL_49:
          v29 = v38;
          goto LABEL_50;
        }
LABEL_69:
        v31 = v29;
        if ( v39 )
          goto LABEL_72;
        v32 = v29;
LABEL_113:
        v30 = 0;
        goto LABEL_49;
      }
      v76 = v29;
      if ( v29 >= v34 )
      {
LABEL_141:
        v30 = v76 + 1;
      }
      else
      {
        v77 = &v35[v29];
        while ( 1 )
        {
          v78 = v77[1];
          if ( v78 != 32 )
          {
            v30 = v76 + 1;
            if ( v78 != 9 )
              break;
          }
          v77 = &v35[++v76];
          if ( v76 == v34 )
            goto LABEL_141;
        }
      }
      v31 = v29;
      v29 = v30;
LABEL_50:
      v36 = &v35[v29];
      if ( v29 < v34 )
        continue;
      break;
    }
    v15 = v33;
    v5 = v35;
    v9 = chunksize_buf_index_0c;
    v7 = content_buf_usedb;
    v6 = chunksize_buf_index;
    v17 = endofheaders;
    v10 = v108;
LABEL_52:
    v12 = v15 - v17;
    chunksize_buf_index = v7;
    content_buf_usede = v15;
    chunksize_buf_index_0f = (unsigned int)v5;
    memcpy(v10, &v5[v17], v15 - v17);
    v5 = (char *)chunksize_buf_index_0f;
    v7 = chunksize_buf_index;
    v8 = content_buf_usede;
    v11 = v17;
    if ( !header_buf_used )
      goto LABEL_24;
    if ( v12 > 0 )
      break;
LABEL_30:
    if ( content_length > 0 && v7 >= content_length )
    {
      content_buf_used_0b = v7;
      v25 = sizea;
      free(v5);
      *v25 = content_buf_used_0b;
      goto LABEL_149;
    }
  }
  header_buf_useda = v8;
  chunksize_buf_index = v11;
  chunksize_buf_index_0d = v6;
  v40 = v9;
  v41 = v10;
  v42 = v12;
  v43 = 0;
  v44 = content_buf_used_0;
  v45 = content_buf;
  content_buf_usedc = (unsigned int)v5;
  v46 = v7;
  while ( 2 )
  {
    v49 = v46;
    if ( v40 )
      goto LABEL_62;
    while ( 2 )
    {
      v54 = v43 < v42;
      if ( chunksize_buf_index_0d )
      {
LABEL_78:
        if ( !v54 )
          goto LABEL_98;
      }
      else
      {
        v66 = v43 < v42;
        if ( *((_BYTE *)&valuestart + v43 + 0x44) == 13 )
          v66 = ++v43 < v42;
        if ( !v66 )
          goto LABEL_98;
        if ( *((_BYTE *)&valuestart + v43 + 0x44) == 10 )
        {
          v54 = ++v43 < v42;
          goto LABEL_78;
        }
      }
      v55 = *_ctype_b_loc();
      v56 = chunksize_buf_index_0d;
      v57 = &v104[chunksize_buf_index_0d];
      v58 = v43 - chunksize_buf_index_0d;
      v59 = v42 + chunksize_buf_index_0d - v43;
      do
      {
        v61 = v41[v58 + v56];
        if ( (v55[v61] & 0x10) == 0 )
          break;
        v60 = v43 < v42;
        if ( v56 >= 0x1F )
          goto LABEL_84;
        ++v56;
        *v57 = v61;
        v57[1] = 0;
        ++v43;
        ++v57;
      }
      while ( v59 != v56 );
      v60 = v43 < v42;
LABEL_84:
      if ( !v60 )
        goto LABEL_114;
      v62 = &v41[v43];
      while ( 1 )
      {
        v64 = *v62;
        if ( v64 == 13 )
          break;
        v26 = v64 == 10;
        v63 = v43 < v42;
        if ( v26 )
          goto LABEL_90;
        ++v43;
        ++v62;
        if ( v43 == v42 )
          goto LABEL_114;
      }
      v63 = v43 < v42;
LABEL_90:
      if ( !v63 )
      {
LABEL_114:
        v9 = v40;
        v7 = v46;
        v10 = v41;
        v8 = header_buf_useda;
        v5 = (char *)content_buf_usedc;
        v11 = chunksize_buf_index;
        content_buf_used_0 = v44;
        content_buf = v45;
        v6 = v56;
        header_buf_used = 1;
        goto LABEL_30;
      }
      v65 = *((char *)&valuestart + v43 + 0x44);
      if ( v65 == 13 )
      {
        if ( ++v43 >= v42 )
          goto LABEL_114;
        v65 = *((char *)&valuestart + v43 + 0x44);
      }
      if ( v65 != 10 )
      {
        chunksize_buf_index_0d = v56;
        continue;
      }
      break;
    }
    if ( !v56 )
      goto LABEL_146;
    v70 = 0;
    v71 = v104;
    v72 = &v104[v56];
    do
    {
      while ( 1 )
      {
        v73 = *v71;
        v74 = 16 * v70;
        if ( (unsigned __int8)(v73 - 0x30) >= 0xAu )
          break;
        ++v71;
        v70 = v74 - 48 + v73;
        if ( v72 == v71 )
          goto LABEL_123;
      }
      ++v71;
      v70 = v74 - 87 + (v73 | 0x20);
    }
    while ( v72 != v71 );
LABEL_123:
    chunksize_buf[0] = 0;
    ++v43;
    if ( !v70 )
    {
LABEL_146:
      v5 = (char *)content_buf_usedc;
      v7 = v46;
      content_buf = v45;
end_of_stream:
      content_buf_used_0d = v7;
      v79 = sizea;
      free(v5);
      *v79 = content_buf_used_0d;
      if ( !content_buf_used_0d )
      {
        free(content_buf);
        content_buf = 0;
      }
      goto LABEL_149;
    }
    v49 = v46;
    chunksize_buf_index_0d = 0;
    v40 = v70;
LABEL_62:
    v51 = v42 - v43;
    if ( v40 < v42 - v43 )
      v51 = v40;
    v46 += v51;
    v52 = v51;
    if ( v44 >= v46 )
    {
LABEL_60:
      v50 = &v41[v43];
      v43 += v52;
      memcpy(&v45[v49], v50, v52);
      v40 -= v52;
      if ( v43 < v42 )
        continue;
LABEL_98:
      v9 = v40;
      v7 = v46;
      v10 = v41;
      v8 = header_buf_useda;
      v5 = (char *)content_buf_usedc;
      v11 = chunksize_buf_index;
      content_buf_used_0 = v44;
      content_buf = v45;
      v6 = chunksize_buf_index_0d;
      header_buf_used = 1;
      goto LABEL_30;
    }
    break;
  }
  v47 = content_length;
  if ( content_length >= 0 )
  {
    if ( content_length < v46 )
      v47 = v46;
    v44 = v47;
  }
  else
  {
    v44 = v46;
  }
  content_buf_used_0c = v49;
  v48 = (char *)realloc(v45, v44);
  v49 = content_buf_used_0c;
  if ( v48 )
  {
    v45 = v48;
    goto LABEL_60;
  }
  size = sizea;
  free(v45);
  v5 = (char *)content_buf_usedc;
LABEL_155:
  free(v5);
  content_buf = 0;
  *size = -1;
LABEL_149:
  if ( v119 != *v116 )
    _stack_chk_fail();
  return content_buf;
}
