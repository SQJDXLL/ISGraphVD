void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  void *result; // x0
  char *v6; // x25
  char *v7; // x0
  int v8; // w21
  int v9; // w19
  unsigned int v10; // w16
  int v11; // w20
  unsigned int v12; // w27
  __int64 v13; // x9
  __int64 v14; // x22
  int v15; // w0
  int v16; // w23
  unsigned int v17; // w26
  char *v18; // x22
  int v19; // w9
  int v20; // w11
  __int64 v21; // x11
  __int64 v22; // x10
  int v23; // w11
  int v24; // w9
  int *v25; // x13
  int v26; // w26
  int v27; // w22
  int v28; // w9
  int v29; // w8
  int v30; // w23
  int v31; // w10
  __int64 v32; // x9
  int v33; // w12
  __int64 v34; // x26
  const char *v35; // x22
  int v36; // w0
  int v37; // w10
  int v38; // w0
  int v39; // w8
  char *v40; // x8
  __int64 v41; // x9
  int v42; // w10
  __int64 v43; // x26
  unsigned int v44; // w21
  const unsigned __int16 **v45; // x0
  const unsigned __int16 *v46; // x10
  __int64 v47; // x8
  __int64 v48; // x14
  char *v49; // x15
  __int64 v50; // x8
  int v51; // w9
  __int64 v52; // x8
  char *v53; // x9
  int v54; // t1
  int v55; // w11
  int v56; // w10
  unsigned int v57; // w28
  int v58; // w9
  size_t v59; // x1
  char *v60; // x0
  unsigned int v61; // w11
  int v63; // w22
  size_t v64; // x1
  char *v65; // x0
  char *v66; // x0
  char *v67; // x0
  size_t v68; // [xsp+8h] [xbp-8A8h]
  const char *v69; // [xsp+10h] [xbp-8A0h]
  int *v70; // [xsp+38h] [xbp-878h]
  int v71; // [xsp+44h] [xbp-86Ch]
  __int64 v72; // [xsp+48h] [xbp-868h]
  char *ptr; // [xsp+50h] [xbp-860h]
  __int64 v74; // [xsp+58h] [xbp-858h]
  unsigned int v75; // [xsp+64h] [xbp-84Ch]
  unsigned int v76; // [xsp+64h] [xbp-84Ch]
  int v77; // [xsp+68h] [xbp-848h]
  int v78; // [xsp+6Ch] [xbp-844h]
  int v79; // [xsp+6Ch] [xbp-844h]
  int v81; // [xsp+80h] [xbp-830h]
  unsigned int v82; // [xsp+80h] [xbp-830h]
  char v83[32]; // [xsp+88h] [xbp-828h] BYREF
  char src[2056]; // [xsp+A8h] [xbp-808h] BYREF

  if ( status_code )
    *status_code = -1;
  result = malloc(0x800uLL);
  if ( !result )
    goto LABEL_150;
  v6 = (char *)result;
  v7 = (char *)malloc(0x800uLL);
  if ( !v7 )
  {
    free(v6);
    result = 0LL;
LABEL_150:
    *size = -1;
    return result;
  }
  v70 = size;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 2048;
  v13 = 0xFFFFFFFFLL;
  v14 = 2048LL;
  ptr = v7;
  v71 = 0;
  v77 = 0;
  v83[0] = 0;
  while ( 2 )
  {
    v75 = v10;
    v72 = v13;
    v15 = receivedata((unsigned int)s, src, 2048LL, 5000LL, 0LL);
    if ( v15 < 1 )
      goto end_of_stream;
    v16 = v15;
    v74 = v14;
    v17 = v9;
    v18 = v6;
    while ( 2 )
    {
      if ( v11 )
      {
        v9 = v17;
        v6 = v18;
        goto LABEL_84;
      }
      v9 = v16 + v17;
      if ( v16 + v17 <= v12 )
      {
        v6 = v18;
      }
      else
      {
        v6 = (char *)realloc(v18, (unsigned int)v9);
        v12 = v16 + v17;
        if ( !v6 )
        {
          free(v18);
          v66 = ptr;
LABEL_151:
          free(v66);
          result = 0LL;
          *v70 = -1;
          return result;
        }
      }
      memcpy(&v6[v17], src, (unsigned int)v16);
      if ( v9 <= 1 )
        goto LABEL_9;
      v19 = 0;
      do
      {
        v20 = (unsigned __int8)v6[v19];
        if ( v20 == 10 )
        {
          v22 = v19 + 1LL;
          v23 = (unsigned __int8)v6[v22];
          v24 = v19 + 2;
LABEL_25:
          if ( v23 == 10 )
            v11 = v24;
          else
            v11 = 0;
          goto LABEL_28;
        }
        if ( v20 != 13 )
        {
          v11 = 0;
          goto LABEL_31;
        }
        LODWORD(v21) = v19 + 1;
        if ( v6[v19 + 1] != 10 || (v21 = v19 + 2LL, v19 + 2 >= v9) || v6[v21] != 13 )
        {
          v11 = 0;
          v19 = v21;
          goto LABEL_31;
        }
        v22 = v19 + 3LL;
        if ( (int)v22 < v9 )
        {
          v23 = (unsigned __int8)v6[v22];
          v24 = v19 + 4;
          goto LABEL_25;
        }
        v11 = 0;
LABEL_28:
        v19 = v22;
LABEL_31:
        ++v19;
      }
      while ( v19 < v9 - 1 && !v11 );
      if ( !v11 )
      {
LABEL_9:
        v16 = receivedata((unsigned int)s, src, 2048LL, 5000LL, 0LL);
        v11 = 0;
        v17 = v9;
        v18 = v6;
        if ( v16 < 1 )
          goto end_of_stream;
        continue;
      }
      break;
    }
    if ( v11 >= 2 )
    {
      v25 = status_code;
      v26 = v11 - 1;
      v27 = 0;
      v28 = 0;
      v29 = 0;
      v30 = 0;
      v78 = s;
      while ( 1 )
      {
        v31 = (unsigned __int8)v6[v30];
        v81 = v30;
        if ( v31 == 58 && v29 >= 1 && v28 <= v29 )
          break;
        if ( v31 == 13 || v31 == 10 )
        {
          if ( !v25 || v29 )
          {
            v37 = v28 - v29;
            if ( v28 <= v29 || v27 <= v28 )
              goto LABEL_71;
            v68 = v37;
            v69 = &v6[v29];
            if ( !strncasecmp(v69, "content-length", v37) )
            {
              v72 = strtol(&v6[v27], 0uLL, 10);
            }
            else if ( !strncasecmp(v69, "transfer-encoding", v68) )
            {
              v38 = strncasecmp(&v6[v27], "chunked", 7uLL);
              v39 = v71;
              if ( !v38 )
                v39 = 1;
              v71 = v39;
            }
            v25 = status_code;
            if ( v30 < v9 )
            {
LABEL_72:
              v40 = &v6[v30];
              v41 = v9 - (__int64)v30;
              s = v78;
              do
              {
                v42 = (unsigned __int8)*v40;
                if ( v42 != 13 && v42 != 10 )
                {
                  v27 = 0;
                  v29 = v30;
                  v28 = v30;
                  goto LABEL_39;
                }
                ++v30;
                --v41;
                ++v40;
              }
              while ( v41 );
              v27 = 0;
              v30 = v9;
              v29 = v9;
              v28 = v9;
              goto LABEL_39;
            }
          }
          else
          {
            if ( v30 >= 1 )
            {
              v34 = (unsigned int)v30;
              v35 = v6 + 1;
              do
              {
                if ( *(v35 - 1) == 32 )
                {
                  if ( (*v25 & 0x80000000) == 0 )
                  {
                    v26 = v11 - 1;
                    goto LABEL_71;
                  }
                  v36 = strtol(v35, 0uLL, 10);
                  v25 = status_code;
                  *status_code = v36;
                }
                --v34;
                ++v35;
              }
              while ( v34 );
              v26 = v11 - 1;
              if ( v30 < v9 )
                goto LABEL_72;
              goto LABEL_80;
            }
LABEL_71:
            if ( v30 < v9 )
              goto LABEL_72;
          }
LABEL_80:
          v27 = 0;
          v29 = v30;
LABEL_81:
          s = v78;
LABEL_82:
          v28 = v81;
          goto LABEL_39;
        }
        s = v78;
LABEL_39:
        if ( ++v30 >= v26 )
          goto LABEL_83;
      }
      if ( v30 < v26 )
      {
        v32 = 0LL;
        s = v78;
        do
        {
          v33 = (unsigned __int8)v6[v30 + 1 + v32];
          if ( v33 != 32 && v33 != 9 )
          {
            v30 += v32;
            v27 = v30 + 1;
            goto LABEL_82;
          }
          ++v32;
        }
        while ( v11 - 1 - (__int64)v30 != v32 );
        v28 = v30;
        v30 = v26;
        v27 = v11;
        goto LABEL_39;
      }
      v27 = v30 + 1;
      goto LABEL_81;
    }
LABEL_83:
    v16 = v9 - v11;
    memcpy(src, &v6[v11], v9 - v11);
LABEL_84:
    v10 = v75;
    if ( !v71 )
    {
      v61 = v77;
      if ( v16 + v77 > (int)v72 && (int)v72 > 0 )
        v16 = v72 - v77;
      v63 = v16 + v77;
      if ( v16 + v77 <= (unsigned int)v74 )
      {
        v65 = ptr;
      }
      else
      {
        if ( (int)v72 >= v63 )
          v64 = (unsigned int)v72;
        else
          v64 = (unsigned int)v63;
        v74 = v64;
        v65 = (char *)realloc(ptr, v64);
        if ( !v65 )
        {
          v67 = ptr;
LABEL_158:
          free(v67);
          v66 = v6;
          goto LABEL_151;
        }
        v61 = v77;
      }
      ptr = v65;
      memcpy(&v65[v61], src, v16);
      v10 = v75;
      v77 += v16;
LABEL_146:
      v13 = v72;
      v14 = v74;
      if ( (int)v72 >= 1 && v77 >= (int)v72 )
        goto end_of_stream;
      continue;
    }
    break;
  }
  if ( v16 < 1 )
    goto LABEL_146;
  LODWORD(v43) = 0;
  v79 = s;
  v82 = v77;
  do
  {
LABEL_87:
    if ( v8 )
      goto LABEL_120;
    if ( !v10 )
    {
      v43 = src[(int)v43] == 13 ? (int)v43 + 1LL : (int)v43;
      if ( (int)v43 < v16 && src[v43] == 10 )
        LODWORD(v43) = v43 + 1;
    }
    if ( (int)v43 < v16 )
    {
      v44 = v10;
      v45 = _ctype_b_loc();
      v10 = v16 + v44 - v43;
      v46 = *v45;
      v47 = 0LL;
      while ( (unsigned __int64)v44 + v47 <= 0x1E )
      {
        v48 = (unsigned __int8)src[(int)v43 + v47];
        if ( (v46[v48] & 0x1000) == 0 )
          break;
        v49 = &v83[v44 + 1 + v47++];
        *(v49 - 1) = v48;
        *v49 = 0;
        if ( (unsigned int)v16 - (__int64)(int)v43 == v47 )
        {
          LODWORD(v43) = v16;
          goto LABEL_102;
        }
      }
      LODWORD(v43) = v43 + v47;
      v10 = v44 + v47;
    }
LABEL_102:
    v50 = (int)v43;
    if ( (int)v43 <= (__int64)(unsigned int)v16 )
      v43 = (unsigned int)v16;
    else
      v43 = (int)v43;
    while ( v43 != v50 )
    {
      v51 = (unsigned __int8)src[v50++];
      if ( v51 == 13 || v51 == 10 )
      {
        if ( v51 == 13 )
          LODWORD(v43) = v50;
        else
          LODWORD(v43) = v50 - 1;
        break;
      }
    }
    if ( v16 <= (int)v43 )
    {
      v8 = 0;
      v77 = v82;
      goto LABEL_146;
    }
    v8 = 0;
  }
  while ( src[(int)v43] != 10 );
  if ( v10 )
  {
    v8 = 0;
    v52 = v10;
    v53 = v83;
    do
    {
      v54 = (unsigned __int8)*v53++;
      v55 = v54 - 0x30;
      v56 = (v54 | 0x20) - 0x57;
      if ( (unsigned int)(v54 - 0x30) < 0xA )
        v56 = v55;
      --v52;
      v8 = v56 + 16 * v8;
    }
    while ( v52 );
    v83[0] = 0;
    if ( !v8 )
      goto LABEL_153;
    v10 = 0;
    LODWORD(v43) = v43 + 1;
LABEL_120:
    if ( v8 >= v16 - (int)v43 )
      v57 = v16 - v43;
    else
      v57 = v8;
    v58 = v57 + v82;
    v76 = v10;
    v77 = v57 + v82;
    if ( v57 + v82 <= (unsigned int)v74 )
    {
      v60 = ptr;
    }
    else
    {
      if ( (int)v72 >= v58 )
        v59 = (unsigned int)v72;
      else
        v59 = (unsigned int)v58;
      v74 = v59;
      v60 = (char *)realloc(ptr, v59);
      if ( !v60 )
      {
        v67 = ptr;
        goto LABEL_158;
      }
    }
    ptr = v60;
    memcpy(&v60[v82], &src[(int)v43], v57);
    LODWORD(v43) = v57 + v43;
    v8 -= v57;
    s = v79;
    v10 = v76;
    v82 = v77;
    if ( (int)v43 >= v16 )
      goto LABEL_146;
    goto LABEL_87;
  }
  v83[0] = 0;
LABEL_153:
  v77 = v82;
end_of_stream:
  free(v6);
  *v70 = v77;
  if ( v77 )
    return ptr;
  free(ptr);
  return 0LL;
}
