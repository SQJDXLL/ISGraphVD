void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v4; // r0
  char *v5; // r11
  char *v6; // r0
  unsigned int v7; // r3
  int v8; // r7
  unsigned int v9; // r6
  int v10; // r9
  int v11; // r0
  int v12; // r0
  signed int v13; // r8
  int v14; // r10
  char *v15; // r5
  int v16; // r1
  int v17; // r2
  int v18; // r2
  int *v19; // r3
  int v20; // r12
  int v21; // r10
  int v22; // r5
  int v23; // r1
  int v24; // r4
  int v25; // r8
  int v26; // r2
  int v27; // r1
  bool v28; // zf
  bool v29; // zf
  const char *v30; // r5
  int v31; // r4
  int v32; // r0
  bool v33; // cc
  int v34; // r0
  int v35; // r2
  int v36; // r0
  bool v37; // zf
  signed int v38; // r5
  const unsigned __int16 *v39; // r0
  int v40; // r1
  signed int v41; // r0
  int v42; // r1
  bool v43; // zf
  char *v44; // r0
  char *v45; // r12
  int v46; // t1
  int v47; // r2
  int v48; // r1
  size_t v49; // r10
  size_t v50; // r2
  size_t v51; // r1
  unsigned int v52; // r1
  size_t v53; // r5
  size_t v54; // r1
  char *v55; // r0
  char *v56; // r8
  char *v58; // r0
  unsigned int v59; // r0
  size_t v60; // [sp+Ch] [bp-87Ch]
  unsigned int v61; // [sp+14h] [bp-874h]
  unsigned int v62; // [sp+1Ch] [bp-86Ch]
  int *v63; // [sp+20h] [bp-868h]
  int v64; // [sp+24h] [bp-864h]
  unsigned int v65; // [sp+28h] [bp-860h]
  unsigned int v66; // [sp+28h] [bp-860h]
  int v67; // [sp+2Ch] [bp-85Ch]
  char *ptr; // [sp+30h] [bp-858h]
  void *ptra; // [sp+30h] [bp-858h]
  unsigned int v70; // [sp+34h] [bp-854h]
  unsigned int v73; // [sp+40h] [bp-848h]
  char v74[32]; // [sp+44h] [bp-844h] BYREF
  char src[2084]; // [sp+64h] [bp-824h] BYREF

  if ( status_code )
    *status_code = -1;
  v4 = (char *)malloc(0x800u);
  if ( !v4 )
    goto LABEL_151;
  v5 = v4;
  v73 = 2048;
  v6 = (char *)malloc(0x800u);
  if ( !v6 )
  {
LABEL_149:
    v58 = v5;
    goto LABEL_150;
  }
  ptr = v6;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v63 = size;
  v64 = 0;
  v11 = -1;
  v74[0] = 0;
  v62 = 2048;
  v70 = 0;
  do
  {
    v67 = v11;
    v65 = v7;
    v12 = receivedata(s, src, 2048, 5000, 0);
    if ( v12 < 1 )
      break;
    v13 = v12;
    v14 = v8;
    v15 = v5;
LABEL_8:
    if ( v10 )
    {
      v8 = v14;
      v5 = v15;
      goto LABEL_83;
    }
    v8 = v13 + v14;
    if ( v13 + v14 <= v73 )
    {
      v5 = v15;
    }
    else
    {
      v5 = (char *)realloc(v15, v13 + v14);
      v73 = v13 + v14;
      if ( !v5 )
      {
        free(v15);
        v58 = ptr;
LABEL_150:
        free(v58);
LABEL_151:
        *size = -1;
        return 0;
      }
    }
    memcpy(&v5[v14], src, v13);
    if ( v8 < 2 )
      goto LABEL_32;
    v16 = 0;
    do
    {
      v17 = (unsigned __int8)v5[v16];
      if ( v17 == 10 )
      {
        v18 = v16 + 1;
        v10 = 0;
        if ( v5[v16 + 1] == 10 )
          v10 = v16 + 2;
      }
      else
      {
        if ( v17 != 13 )
        {
          v18 = v16;
LABEL_28:
          v10 = 0;
          goto LABEL_29;
        }
        v18 = v16 + 1;
        v10 = 0;
        if ( v5[v16 + 1] == 10 )
        {
          v18 = v16 + 2;
          if ( v16 + 2 >= v8 )
            goto LABEL_28;
          v10 = 0;
          if ( v5[v18] == 13 )
          {
            v18 = v16 + 3;
            if ( v16 + 3 >= v8 )
              goto LABEL_28;
            v10 = 0;
            if ( v5[v18] == 10 )
              v10 = v16 + 4;
          }
        }
      }
LABEL_29:
      v16 = v18 + 1;
    }
    while ( v18 + 1 < v8 - 1 && !v10 );
    if ( !v10 )
    {
LABEL_32:
      v10 = 0;
      v13 = receivedata(s, src, 2048, 5000, 0);
      v14 = v8;
      v15 = v5;
      if ( v13 <= 0 )
        break;
      goto LABEL_8;
    }
    if ( v10 >= 2 )
    {
      v19 = status_code;
      v20 = v10 - 1;
      v21 = v13 + v14;
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = 0;
      while ( 1 )
      {
        v26 = (unsigned __int8)v5[v25];
        if ( v26 == 58 && v24 >= 1 && v23 <= v24 )
          break;
        v29 = v26 == 13;
        if ( v26 != 13 )
          v29 = v26 == 10;
        if ( v29 )
        {
          if ( !v19 || v24 )
          {
            v33 = v23 <= v24;
            if ( v23 > v24 )
              v33 = v22 <= v23;
            if ( !v33 )
            {
              v60 = v23 - v24;
              if ( !strncasecmp(&v5[v24], "content-length", v23 - v24) )
              {
                v67 = atoi(&v5[v22]);
              }
              else if ( !strncasecmp(&v5[v24], "transfer-encoding", v60) )
              {
                v28 = strncasecmp(&v5[v22], "chunked", 7u) == 0;
                v34 = v64;
                if ( v28 )
                  v34 = 1;
                v64 = v34;
              }
              v19 = status_code;
              goto LABEL_71;
            }
          }
          else if ( v25 >= 1 )
          {
            v30 = v5 + 1;
            v31 = v25;
            do
            {
              if ( *(v30 - 1) == 32 )
              {
                if ( *v19 > -1 )
                  break;
                v32 = atoi(v30);
                v19 = status_code;
                *status_code = v32;
              }
              ++v30;
              --v31;
            }
            while ( v31 );
LABEL_71:
            v20 = v10 - 1;
          }
          v22 = 0;
          if ( v25 < v8 )
          {
            while ( 1 )
            {
              v36 = (unsigned __int8)v5[v25];
              v37 = v36 == 13;
              if ( v36 != 13 )
                v37 = v36 == 10;
              if ( !v37 )
                break;
              if ( v21 == ++v25 )
              {
                v35 = v8;
                v24 = v8;
                v23 = v8;
                goto LABEL_81;
              }
            }
          }
          v35 = v25;
          v24 = v25;
LABEL_80:
          v23 = v25;
          goto LABEL_81;
        }
        v35 = v25;
LABEL_81:
        v25 = v35 + 1;
        if ( v35 + 1 >= v20 )
          goto LABEL_82;
      }
      v22 = v25 + 1;
      if ( v25 < v20 )
      {
        do
        {
          v27 = (unsigned __int8)v5[v22];
          v28 = v27 == 32;
          if ( v27 != 32 )
            v28 = v27 == 9;
          if ( !v28 )
          {
            v35 = v22 - 1;
            goto LABEL_80;
          }
          ++v22;
        }
        while ( v10 != v22 );
        v35 = v20;
        v23 = v25;
        v22 = v10;
        goto LABEL_81;
      }
      v35 = v25;
      goto LABEL_80;
    }
LABEL_82:
    v13 = v8 - v10;
    memcpy(src, &v5[v10], v8 - v10);
LABEL_83:
    v7 = v65;
    if ( v64 )
    {
      if ( v13 >= 1 )
      {
        v38 = 0;
        while ( 1 )
        {
          v61 = v70;
LABEL_87:
          if ( !v7 )
            break;
          size = v63;
          v45 = ptr;
LABEL_119:
          v49 = v13 - v38;
          v66 = v7;
          if ( v7 < v13 - v38 )
            v49 = v7;
          v50 = v49 + v70;
          v70 += v49;
          if ( v49 + v61 > v62 )
          {
            ptra = v45;
            v51 = v67;
            if ( v67 < v50 )
              v51 = v50;
            if ( v67 < 0 )
              v51 = v50;
            v62 = v51;
            v45 = (char *)realloc(v45, v51);
            if ( !v45 )
            {
              free(ptra);
              goto LABEL_149;
            }
          }
          ptr = v45;
          memcpy(&v45[v61], &src[v38], v49);
          v38 += v49;
          v7 = v66 - v49;
          if ( v38 >= v13 )
            goto LABEL_143;
        }
        if ( !v9 )
        {
          if ( src[v38] == 13 )
            ++v38;
          if ( v38 < v13 && src[v38] == 10 )
            ++v38;
        }
        if ( v38 < v13 )
        {
          v39 = *_ctype_b_loc();
          while ( v9 <= 0x1E )
          {
            v40 = (unsigned __int8)src[v38];
            if ( (v39[v40] & 0x1000) == 0 )
              break;
            ++v38;
            v74[v9 + 1] = 0;
            v74[v9++] = v40;
            if ( v13 == v38 )
            {
              v38 = v13;
              break;
            }
          }
        }
        v41 = v13;
        if ( v38 > v13 )
          v41 = v38;
        while ( 1 )
        {
          v7 = 0;
          if ( v41 == v38 )
            break;
          v42 = (unsigned __int8)src[v38++];
          v43 = v42 == 13;
          if ( v42 != 13 )
            v43 = v42 == 10;
          if ( v43 )
          {
            if ( v42 != 13 )
              --v38;
            if ( v38 >= v13 )
              break;
            v7 = 0;
            if ( src[v38] != 10 )
              goto LABEL_87;
            if ( v9 )
            {
              v7 = 0;
              v44 = v74;
              v45 = ptr;
              do
              {
                v46 = (unsigned __int8)*v44++;
                v47 = v46 - 0x30;
                v48 = v46 | 0x20;
                if ( (unsigned int)(v46 - 0x30) >= 0xA )
                  v47 = v48 - 0x57;
                --v9;
                v7 = v47 + 16 * v7;
              }
              while ( v9 );
              size = v63;
              v9 = 0;
              v74[0] = 0;
              if ( v7 )
              {
                ++v38;
                goto LABEL_119;
              }
              v59 = v70;
            }
            else
            {
              size = v63;
              v74[0] = 0;
              v59 = v70;
            }
            v70 = v59;
            goto end_of_stream;
          }
        }
      }
    }
    else
    {
      v52 = v70;
      v53 = v13;
      if ( v13 + v70 > v67 )
        v53 = v67 - v70;
      if ( v67 <= 0 )
        v53 = v13;
      if ( v53 + v70 <= v62 )
      {
        v56 = ptr;
      }
      else
      {
        v54 = v67;
        if ( v67 < v53 + v70 )
          v54 = v53 + v70;
        if ( v67 < 0 )
          v54 = v53 + v70;
        v62 = v54;
        v55 = (char *)realloc(ptr, v54);
        v52 = v70;
        v56 = v55;
        if ( !v55 )
        {
          free(ptr);
          free(v5);
          *v63 = -1;
          return 0;
        }
      }
      memcpy(&v56[v52], src, v53);
      v7 = v65;
      ptr = v56;
      v70 += v53;
    }
LABEL_143:
    v11 = v67;
    size = v63;
  }
  while ( v67 < 1 || v70 < v67 );
end_of_stream:
  free(v5);
  *size = v70;
  if ( v70 )
    return ptr;
  free(ptr);
  return 0;
}
