void *__fastcall getHTTPResponse(int s, int *size, int *status_code)
{
  char *v6; // x0
  char *v7; // x26
  char *v8; // x24
  int v9; // w20
  int v10; // w19
  unsigned int v11; // w25
  int v12; // w9
  int v13; // w0
  int v14; // w27
  unsigned int v15; // w21
  char *v16; // x22
  int v17; // w9
  int v18; // w11
  __int64 v19; // x11
  __int64 v20; // x10
  int v21; // w11
  int v22; // w9
  int *v23; // x27
  int v24; // w28
  int v25; // w23
  int v26; // w9
  int v27; // w8
  int v28; // w24
  const char *v29; // x22
  int v30; // w10
  int v31; // w10
  const char *v32; // x11
  __int64 v33; // x9
  int v34; // w12
  __int64 v35; // x23
  int v36; // w10
  const char *v37; // x22
  size_t v38; // x27
  int v39; // w0
  int v40; // w8
  char *v41; // x8
  __int64 v42; // x9
  int v43; // w10
  unsigned int v44; // w22
  __int64 v45; // x28
  unsigned int v46; // w8
  const unsigned __int16 *v47; // x9
  unsigned __int64 v48; // x12
  __int64 v49; // x10
  char *v50; // x11
  int v51; // w8
  __int64 v52; // x13
  int v53; // w9
  char *v54; // x10
  __int64 v55; // x8
  int v56; // w11
  int v57; // w15
  __int64 v58; // x8
  char *v59; // x9
  unsigned __int8 v60; // w10
  int v61; // t1
  bool v62; // cf
  unsigned __int8 v63; // w12
  int v64; // w11
  unsigned int v65; // w21
  unsigned int v66; // w9
  size_t v68; // x1
  char *v69; // x0
  unsigned int v70; // w11
  int v72; // w22
  unsigned int v73; // w21
  size_t v75; // x28
  char *v76; // x0
  char *v77; // x0
  char *v79; // x0
  int *v80; // [xsp+8h] [xbp-888h]
  int *v81; // [xsp+30h] [xbp-860h]
  unsigned int v82; // [xsp+38h] [xbp-858h]
  int v83; // [xsp+44h] [xbp-84Ch]
  __int64 v84; // [xsp+48h] [xbp-848h]
  unsigned int v85; // [xsp+48h] [xbp-848h]
  char *ptr; // [xsp+50h] [xbp-840h]
  char *ptra; // [xsp+50h] [xbp-840h]
  unsigned int v88; // [xsp+5Ch] [xbp-834h]
  int v89; // [xsp+60h] [xbp-830h]
  unsigned int v90; // [xsp+64h] [xbp-82Ch]
  char v91[32]; // [xsp+68h] [xbp-828h] BYREF
  char src[2056]; // [xsp+88h] [xbp-808h] BYREF

  if ( status_code )
    *status_code = -1;
  v6 = (char *)malloc(0x800uLL);
  if ( !v6 )
    goto LABEL_161;
  v7 = v6;
  v8 = (char *)malloc(0x800uLL);
  if ( !v8 )
  {
    free(v7);
    goto LABEL_162;
  }
  v81 = status_code;
  v9 = 0;
  v10 = 0;
  v11 = 2048;
  v12 = -1;
  v84 = 0LL;
  v90 = 0;
  v88 = 0;
  v91[0] = 0;
  v82 = 2048;
  v83 = s;
  while ( 2 )
  {
    v89 = v12;
    v13 = receivedata((unsigned int)s, src, 2048LL, 5000LL, 0LL);
    if ( v13 < 1 )
    {
end_of_stream:
      free(v7);
      *size = v90;
      if ( !v90 )
      {
        free(v8);
        return 0LL;
      }
      return v8;
    }
    v14 = v13;
    v15 = v9;
    v16 = v7;
    while ( 2 )
    {
      if ( v10 )
      {
        v9 = v15;
        v7 = v16;
        goto LABEL_80;
      }
      v9 = v14 + v15;
      if ( v14 + v15 <= v11 )
      {
        v7 = v16;
      }
      else
      {
        v7 = (char *)realloc(v16, (unsigned int)v9);
        v11 = v14 + v15;
        if ( !v7 )
        {
          free(v16);
          v77 = v8;
          goto LABEL_160;
        }
      }
      memcpy(&v7[v15], src, (unsigned int)v14);
      if ( v9 <= 1 )
        goto LABEL_34;
      v17 = 0;
      do
      {
        v18 = (unsigned __int8)v7[v17];
        if ( v18 == 10 )
        {
          v20 = v17 + 1LL;
          v21 = (unsigned __int8)v7[v20];
          v22 = v17 + 2;
LABEL_23:
          if ( v21 == 10 )
            v10 = v22;
          else
            v10 = 0;
          goto LABEL_26;
        }
        if ( v18 != 13 )
        {
          v10 = 0;
          goto LABEL_29;
        }
        LODWORD(v19) = v17 + 1;
        if ( v7[v17 + 1] != 10 || (v19 = v17 + 2LL, v17 + 2 >= v9) || v7[v19] != 13 )
        {
          v10 = 0;
          v17 = v19;
          goto LABEL_29;
        }
        v20 = v17 + 3LL;
        if ( (int)v20 < v9 )
        {
          v21 = (unsigned __int8)v7[v20];
          v22 = v17 + 4;
          goto LABEL_23;
        }
        v10 = 0;
LABEL_26:
        v17 = v20;
LABEL_29:
        ++v17;
      }
      while ( v17 < v9 - 1 && !v10 );
      if ( !v10 )
      {
LABEL_34:
        v14 = receivedata((unsigned int)s, src, 2048LL, 5000LL, 0LL);
        v10 = 0;
        v15 = v9;
        v16 = v7;
        if ( v14 < 1 )
          goto end_of_stream;
        continue;
      }
      break;
    }
    ptr = v8;
    v80 = size;
    if ( v10 >= 2 )
    {
      v23 = v81;
      v24 = v10 - 1;
      v25 = 0;
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = v7 + 1;
      do
      {
        v30 = (unsigned __int8)v7[v28];
        if ( v27 >= 1 && v26 <= v27 && v30 == 58 )
        {
          v31 = v28;
          if ( v28 < v24 )
          {
            v32 = &v29[v28];
            v31 = v28;
            v33 = v10 - 1 - (__int64)v28;
            while ( 1 )
            {
              v34 = *(unsigned __int8 *)v32;
              if ( v34 != 32 && v34 != 9 )
                break;
              ++v31;
              --v33;
              ++v32;
              if ( !v33 )
              {
                v31 = v10 - 1;
                break;
              }
            }
          }
          v25 = v31 + 1;
        }
        else
        {
          if ( v30 == 13 || v30 == 10 )
          {
            if ( !v23 || v27 )
            {
              v36 = v26 - v27;
              if ( v26 > v27 && v25 > v26 )
              {
                v37 = &v7[v27];
                v38 = v36;
                if ( !strncasecmp(v37, "content-length", v36) )
                {
                  v89 = atoi(&v7[v25]);
                }
                else if ( !strncasecmp(v37, "transfer-encoding", v38) )
                {
                  v39 = strncasecmp(&v7[v25], "chunked", 7uLL);
                  v40 = HIDWORD(v84);
                  if ( !v39 )
                    v40 = 1;
                  HIDWORD(v84) = v40;
                }
                v23 = v81;
                goto LABEL_70;
              }
            }
            else if ( v28 >= 1 )
            {
              v35 = (unsigned int)v28;
              do
              {
                if ( *(v29 - 1) == 32 )
                {
                  if ( (*v23 & 0x80000000) == 0 )
                    break;
                  *v23 = atoi(v29);
                }
                --v35;
                ++v29;
              }
              while ( v35 );
LABEL_70:
              v29 = v7 + 1;
            }
            if ( v28 < v9 )
            {
              v41 = &v7[v28];
              v42 = v9 - (__int64)v28;
              while ( 1 )
              {
                v43 = (unsigned __int8)*v41;
                if ( v43 != 13 && v43 != 10 )
                  break;
                ++v28;
                --v42;
                ++v41;
                if ( !v42 )
                {
                  v25 = 0;
                  v31 = v9;
                  v27 = v9;
                  v28 = v9;
                  goto LABEL_78;
                }
              }
            }
            v25 = 0;
            v31 = v28;
            v27 = v28;
            goto LABEL_78;
          }
          v31 = v28;
          v28 = v26;
        }
LABEL_78:
        v26 = v28;
        v28 = v31 + 1;
      }
      while ( v31 + 1 < v24 );
    }
    v14 = v9 - v10;
    memcpy(src, &v7[v10], v9 - v10);
    size = v80;
    v8 = ptr;
LABEL_80:
    if ( HIDWORD(v84) )
    {
      ptra = v8;
      if ( v14 < 1 )
        goto LABEL_155;
      v44 = v90;
      LODWORD(v45) = 0;
      while ( 2 )
      {
        v46 = v84;
        do
        {
          if ( v46 )
          {
            v85 = v46;
            goto LABEL_122;
          }
          if ( !v88 )
          {
            v45 = src[(int)v45] == 13 ? (int)v45 + 1LL : (int)v45;
            if ( (int)v45 < v14 && src[v45] == 10 )
              LODWORD(v45) = v45 + 1;
          }
          if ( (int)v45 >= v14 )
          {
            v51 = v45;
          }
          else
          {
            v47 = *_ctype_b_loc();
            v48 = v88;
            v49 = (unsigned int)v14 - (__int64)(int)v45;
            v50 = &src[(int)v45];
            v51 = v45;
            while ( v48 <= 0x1E )
            {
              v52 = (unsigned __int8)*v50;
              if ( (v47[v52] & 0x1000) == 0 )
                break;
              v91[v48] = v52;
              v91[++v48] = 0;
              --v49;
              ++v51;
              ++v50;
              if ( !v49 )
              {
                LODWORD(v84) = 0;
                v88 = v14 + v88 - v45;
                goto LABEL_154;
              }
            }
            v88 = v48;
          }
          if ( v51 >= v14 )
          {
            LODWORD(v45) = v51;
          }
          else
          {
            v53 = -v51;
            v54 = &src[v51];
            v55 = (unsigned int)v14 - (__int64)v51;
            while ( 1 )
            {
              v56 = (unsigned __int8)*v54;
              if ( v56 == 10 || v56 == 13 )
                break;
              --v53;
              --v55;
              ++v54;
              if ( !v55 )
                goto LABEL_153;
            }
            LODWORD(v45) = (v56 == 13) - v53;
          }
          if ( (int)v45 >= v14 )
          {
LABEL_153:
            LODWORD(v84) = 0;
LABEL_154:
            v90 = v44;
            goto LABEL_155;
          }
          v46 = 0;
        }
        while ( src[(int)v45] != 10 );
        if ( !v88 )
        {
          v91[0] = 0;
LABEL_168:
          v8 = ptra;
          v90 = v44;
          goto end_of_stream;
        }
        v57 = 0;
        v58 = v88;
        v59 = v91;
        do
        {
          v61 = (unsigned __int8)*v59++;
          v60 = v61;
          v62 = (unsigned int)(v61 - 0x30) >= 0xA;
          v63 = v61 | 0x20;
          if ( (unsigned int)(v61 - 0x30) >= 0xA )
            v64 = -87;
          else
            v64 = -48;
          if ( v62 )
            v60 = v63;
          --v58;
          v57 = v64 + 16 * v57 + v60;
        }
        while ( v58 );
        v91[0] = 0;
        if ( !v57 )
          goto LABEL_168;
        LODWORD(v45) = v45 + 1;
        v85 = v57;
        v88 = 0;
LABEL_122:
        if ( v85 >= v14 - (int)v45 )
          v65 = v14 - v45;
        else
          v65 = v85;
        v66 = v65 + v44;
        v90 = v65 + v44;
        if ( v65 + v44 <= v82 )
        {
          v69 = ptra;
        }
        else
        {
          if ( v89 < v66 || v89 < 0 )
            v68 = v66;
          else
            v68 = (unsigned int)v89;
          v82 = v68;
          v69 = (char *)realloc(ptra, v68);
          if ( !v69 )
          {
            v79 = ptra;
            goto LABEL_165;
          }
        }
        ptra = v69;
        memcpy(&v69[v44], &src[(int)v45], v65);
        v44 += v65;
        LODWORD(v45) = v65 + v45;
        LODWORD(v84) = v85 - v65;
        if ( (int)v45 < v14 )
          continue;
        break;
      }
LABEL_155:
      v12 = v89;
      v8 = ptra;
      s = v83;
      if ( v89 >= 1 && v90 >= v89 )
        goto end_of_stream;
      continue;
    }
    break;
  }
  v70 = v90;
  if ( v14 + v90 <= v89 || v89 <= 0 )
    v72 = v14;
  else
    v72 = v89 - v90;
  v73 = v72 + v90;
  if ( v72 + v90 <= v82 )
    goto LABEL_152;
  if ( v89 < v73 || v89 < 0 )
    v75 = v73;
  else
    v75 = (unsigned int)v89;
  v76 = (char *)realloc(v8, v75);
  if ( v76 )
  {
    v70 = v90;
    v8 = v76;
    v82 = v75;
LABEL_152:
    ptra = v8;
    memcpy(&v8[v70], src, v72);
    v90 += v72;
    goto LABEL_155;
  }
  v79 = v8;
LABEL_165:
  free(v79);
  v77 = v7;
LABEL_160:
  free(v77);
LABEL_161:
  v8 = 0LL;
LABEL_162:
  *size = -1;
  return v8;
}
