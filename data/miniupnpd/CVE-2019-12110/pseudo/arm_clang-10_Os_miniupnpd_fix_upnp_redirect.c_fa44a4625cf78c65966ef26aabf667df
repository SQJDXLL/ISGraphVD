int __fastcall upnp_redirect(
        const char *rhost,
        int eport,
        const char *iaddr,
        int iport,
        const char *protocol,
        const char *desc,
        unsigned int leaseduration)
{
  int v11; // r6
  unsigned int v12; // r8
  int redirect_rule; // r0
  const char *v14; // r6
  int v16; // r7
  bool v17; // zf
  int v18; // r0
  bool v19; // zf
  unsigned int v20; // r1
  int v21; // [sp+28h] [bp-70h]
  unsigned int v22; // [sp+30h] [bp-68h] BYREF
  struct in_addr inp; // [sp+34h] [bp-64h] BYREF
  unsigned __int16 v24; // [sp+3Ah] [bp-5Eh] BYREF
  char s2[32]; // [sp+3Ch] [bp-5Ch] BYREF
  char iaddr_old[32]; // [sp+5Ch] [bp-3Ch] BYREF

  v11 = proto_atoi(protocol);
  if ( inet_aton(iaddr, &inp) <= 0 )
  {
    syslog(3, "inet_aton(%s) FAILED", iaddr);
    return -1;
  }
  else if ( check_upnp_rule_against_permissions(upnppermlist, num_upnpperm, eport, inp.s_addr, iport) )
  {
    v12 = 0;
    v21 = v11;
    s2[0] = 0;
    redirect_rule = get_redirect_rule(ext_if_name, eport, v11, iaddr_old, 32, &v24, 0, 0, s2, 32, &v22, 0, 0);
    v14 = (const char *)&L_str_2;
    if ( desc )
      v14 = desc;
    if ( redirect_rule )
    {
      if ( leaseduration )
        v12 = upnp_time() + leaseduration;
      v22 = v12;
      syslog(6, "redirecting port %hu to %s:%hu protocol %s for: %s", eport, iaddr, iport, protocol, v14);
      return upnp_redirect_internal(rhost, eport, iaddr, iport, v21, v14, v22);
    }
    else
    {
      if ( strcmp(iaddr, iaddr_old) )
        goto LABEL_12;
      v16 = (unsigned __int8)s2[0];
      v17 = rhost == 0;
      if ( !rhost )
        v17 = s2[0] == 0;
      if ( v17 )
        goto LABEL_21;
      if ( !rhost )
        goto LABEL_12;
      v18 = strcmp(rhost, "*");
      v19 = v16 == 0;
      if ( !v16 )
        v19 = v18 == 0;
      if ( v19 || !strcmp(rhost, s2) )
      {
LABEL_21:
        syslog(6, "updating existing port mapping %hu %s (rhost '%s') => %s:%hu", eport, protocol, s2, iaddr_old, v24);
        if ( leaseduration )
          v20 = upnp_time() + leaseduration;
        else
          v20 = 0;
        v22 = v20;
        if ( v24 == iport )
          return update_portmapping_desc_timestamp(ext_if_name, eport, v21, v14, v20);
        else
          return update_portmapping(ext_if_name, eport, v21);
      }
      else
      {
LABEL_12:
        syslog(6, "port %hu %s (rhost '%s') already redirected to %s:%hu", eport, protocol, s2, iaddr_old, v24);
        return -2;
      }
    }
  }
  else
  {
    syslog(6, "redirection permission check failed for %hu->%s:%hu %s", eport, iaddr, iport, protocol);
    return -3;
  }
}
