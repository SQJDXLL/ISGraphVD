int __fastcall upnp_redirect(
        const char *rhost,
        unsigned __int16 eport,
        const char *iaddr,
        unsigned __int16 iport,
        const char *protocol,
        const char *desc,
        unsigned int leaseduration)
{
  int v8; // r7
  int v10; // r4
  unsigned int v11; // r5
  int v13; // r0
  int v14; // r6
  int v15; // [sp+2Ch] [bp-84h]
  unsigned __int16 iport_old; // [sp+3Ah] [bp-76h] BYREF
  in_addr address; // [sp+3Ch] [bp-74h] BYREF
  unsigned int timestamp; // [sp+40h] [bp-70h] BYREF
  char iaddr_old[32]; // [sp+44h] [bp-6Ch] BYREF
  char rhost_old[32]; // [sp+64h] [bp-4Ch] BYREF

  v8 = iport;
  v10 = eport;
  v11 = leaseduration;
  v15 = proto_atoi(protocol);
  if ( inet_aton(iaddr, &address) <= 0 )
  {
    syslog(3, "inet_aton(%s) FAILED", iaddr);
    return -1;
  }
  if ( !check_upnp_rule_against_permissions(upnppermlist, num_upnpperm, v10, address.s_addr, v8) )
  {
    syslog(6, "redirection permission check failed for %hu->%s:%hu %s", v10, iaddr, v8, protocol);
    return -3;
  }
  rhost_old[0] = 0;
  if ( !get_redirect_rule(ext_if_name, v10, v15, iaddr_old, 32, &iport_old, 0, 0, rhost_old, 32, &timestamp, 0, 0) )
  {
    v13 = strcmp(iaddr, iaddr_old);
    v14 = iport_old;
    if ( !v13 )
    {
      if ( rhost && strcmp(rhost, "*") )
        goto LABEL_23;
      if ( !rhost_old[0] )
      {
LABEL_12:
        syslog(
          6,
          "updating existing port mapping %hu %s (rhost '%s') => %s:%hu",
          v10,
          protocol,
          rhost_old,
          iaddr_old,
          v14);
        if ( leaseduration )
          v11 = leaseduration + upnp_time();
        timestamp = v11;
        if ( iport_old == v8 )
          return update_portmapping_desc_timestamp(ext_if_name, v10, v15, desc, v11);
        else
          return update_portmapping(ext_if_name, v10, v15, v8, desc, v11);
      }
      if ( rhost )
      {
LABEL_23:
        if ( !strcmp(rhost, rhost_old) )
          goto LABEL_12;
      }
    }
    syslog(6, "port %hu %s (rhost '%s') already redirected to %s:%hu", v10, protocol, rhost_old, iaddr_old, v14);
    return -2;
  }
  if ( leaseduration )
    v11 = leaseduration + upnp_time();
  timestamp = v11;
  syslog(6, "redirecting port %hu to %s:%hu protocol %s for: %s", v10, iaddr, v8, protocol, desc);
  return upnp_redirect_internal(rhost, v10, iaddr, v8, v15, desc, timestamp);
}
