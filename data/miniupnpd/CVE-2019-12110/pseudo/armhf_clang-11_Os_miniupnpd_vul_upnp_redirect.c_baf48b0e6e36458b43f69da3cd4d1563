int __fastcall upnp_redirect(
        const char *rhost,
        int eport,
        const char *iaddr,
        int iport,
        const char *protocol,
        const char *desc,
        unsigned int leaseduration)
{
  int v11; // r10
  unsigned int v12; // r11
  int v14; // r6
  bool v15; // zf
  int v16; // r0
  bool v17; // zf
  unsigned int v18; // r1
  unsigned int v19; // [sp+28h] [bp-70h] BYREF
  struct in_addr inp; // [sp+2Ch] [bp-6Ch] BYREF
  unsigned __int16 v21; // [sp+32h] [bp-66h] BYREF
  char v22[32]; // [sp+34h] [bp-64h] BYREF
  char s2[68]; // [sp+54h] [bp-44h] BYREF

  v11 = proto_atoi(protocol);
  if ( inet_aton(iaddr, &inp) <= 0 )
  {
    syslog(3, "inet_aton(%s) FAILED", iaddr);
    return -1;
  }
  else if ( check_upnp_rule_against_permissions(upnppermlist, num_upnpperm, eport, inp.s_addr, iport) )
  {
    v12 = 0;
    v22[0] = 0;
    if ( get_redirect_rule(ext_if_name, eport, v11, s2, 32, &v21, 0, 0, v22, 32, &v19, 0, 0) )
    {
      if ( leaseduration )
        v12 = upnp_time() + leaseduration;
      v19 = v12;
      syslog(6, "redirecting port %hu to %s:%hu protocol %s for: %s", eport, iaddr, iport, protocol, desc);
      return upnp_redirect_internal(rhost, eport, iaddr, iport, v11, desc, v19);
    }
    else
    {
      if ( strcmp(iaddr, s2) )
        goto LABEL_10;
      v14 = (unsigned __int8)v22[0];
      v15 = rhost == 0;
      if ( !rhost )
        v15 = v22[0] == 0;
      if ( v15 )
        goto LABEL_19;
      if ( !rhost )
        goto LABEL_10;
      v16 = strcmp(rhost, "*");
      v17 = v14 == 0;
      if ( !v14 )
        v17 = v16 == 0;
      if ( v17 || !strcmp(rhost, v22) )
      {
LABEL_19:
        syslog(6, "updating existing port mapping %hu %s (rhost '%s') => %s:%hu", eport, protocol, v22, s2, v21);
        if ( leaseduration )
          v18 = upnp_time() + leaseduration;
        else
          v18 = 0;
        v19 = v18;
        if ( v21 == iport )
          return update_portmapping_desc_timestamp(ext_if_name, eport, v11, desc, v18);
        else
          return update_portmapping(ext_if_name, eport, v11, iport, desc, v18);
      }
      else
      {
LABEL_10:
        syslog(6, "port %hu %s (rhost '%s') already redirected to %s:%hu", eport, protocol, v22, s2, v21);
        return -2;
      }
    }
  }
  else
  {
    syslog(6, "redirection permission check failed for %hu->%s:%hu %s", eport, iaddr, iport, protocol);
    return -3;
  }
}
