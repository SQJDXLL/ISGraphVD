int __cdecl upnp_redirect(
        const char *rhost,
        unsigned __int16 eport,
        const char *iaddr,
        unsigned __int16 iport,
        const char *protocol,
        const char *desc,
        in_addr leaseduration)
{
  int v7; // esi
  unsigned int v8; // eax
  unsigned __int16 v10; // bp
  int v11; // eax
  unsigned int v12; // eax
  unsigned __int16 v13; // [esp+8h] [ebp-64h] BYREF
  char v14; // [esp+Bh] [ebp-61h]
  unsigned __int16 v15[2]; // [esp+Ch] [ebp-60h]
  int v16; // [esp+10h] [ebp-5Ch]
  unsigned int v17; // [esp+14h] [ebp-58h] BYREF
  struct in_addr inp; // [esp+18h] [ebp-54h] BYREF
  char v19[32]; // [esp+1Ch] [ebp-50h] BYREF
  char s2[48]; // [esp+3Ch] [ebp-30h] BYREF

  v7 = proto_atoi(protocol);
  if ( inet_aton(iaddr, &inp) <= 0 )
  {
    syslog(3, "inet_aton(%s) FAILED", iaddr);
    return -1;
  }
  else if ( check_upnp_rule_against_permissions(upnppermlist, num_upnpperm, eport, inp.s_addr, iport) )
  {
    *(_DWORD *)v15 = iport;
    v19[0] = 0;
    v16 = v7;
    if ( get_redirect_rule(ext_if_name, eport, v7, s2, 32, &v13, 0, 0, v19, 32, &v17, 0, 0) )
    {
      if ( leaseduration.s_addr )
        v8 = leaseduration.s_addr + upnp_time();
      else
        v8 = 0;
      v10 = v15[0];
      v17 = v8;
      syslog(6, "redirecting port %hu to %s:%hu protocol %s for: %s", eport, iaddr, *(_DWORD *)v15, protocol, desc);
      return upnp_redirect_internal(rhost, eport, iaddr, v10, v16, desc, v17);
    }
    else if ( strcmp(iaddr, s2)
           || (rhost || v19[0])
           && (!rhost || ((v14 = v19[0], v11 = strcmp(rhost, "*"), v14) || v11) && strcmp(rhost, v19)) )
    {
      syslog(6, "port %hu %s (rhost '%s') already redirected to %s:%hu", eport, protocol, v19, s2, v13);
      return -2;
    }
    else
    {
      syslog(6, "updating existing port mapping %hu %s (rhost '%s') => %s:%hu", eport, protocol, v19, s2, v13);
      if ( leaseduration.s_addr )
        v12 = leaseduration.s_addr + upnp_time();
      else
        v12 = 0;
      v17 = v12;
      if ( v13 == iport )
        return update_portmapping_desc_timestamp(ext_if_name, eport, v16, desc, v12);
      else
        return update_portmapping(ext_if_name, eport, v16, *(_DWORD *)v15, desc, v12);
    }
  }
  else
  {
    syslog(6, "redirection permission check failed for %hu->%s:%hu %s", eport, iaddr, iport, protocol);
    return -3;
  }
}
