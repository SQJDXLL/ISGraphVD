int __fastcall upnp_redirect(
        const char *rhost,
        unsigned __int16 eport,
        const char *iaddr,
        unsigned __int16 iport,
        const char *protocol,
        const char *desc,
        unsigned int leaseduration)
{
  int v8; // r4
  int v10; // r5
  const char *v11; // r10
  unsigned int v12; // r9
  int v14; // [sp+2Ch] [bp-7Ch]
  unsigned __int16 iport_old; // [sp+32h] [bp-76h] BYREF
  in_addr address; // [sp+34h] [bp-74h] BYREF
  unsigned int timestamp; // [sp+38h] [bp-70h] BYREF
  char iaddr_old[32]; // [sp+3Ch] [bp-6Ch] BYREF
  char rhost_old[32]; // [sp+5Ch] [bp-4Ch] BYREF

  v8 = eport;
  v10 = iport;
  v11 = desc;
  v12 = leaseduration;
  v14 = proto_atoi(protocol);
  if ( inet_aton(iaddr, &address) <= 0 )
  {
    syslog(3, "inet_aton(%s) FAILED", iaddr);
    return -1;
  }
  if ( !check_upnp_rule_against_permissions(upnppermlist, num_upnpperm, v8, address.s_addr, v10) )
  {
    syslog(6, "redirection permission check failed for %hu->%s:%hu %s", v8, iaddr, v10, protocol);
    return -3;
  }
  if ( !desc )
    v11 = (const char *)&LC2;
  rhost_old[0] = 0;
  if ( !get_redirect_rule(ext_if_name, v8, v14, iaddr_old, 32, &iport_old, 0, 0, rhost_old, 32, &timestamp, 0, 0) )
  {
    if ( !strcmp(iaddr, iaddr_old) )
    {
      if ( rhost )
      {
        if ( !strcmp(rhost, "*") && !rhost_old[0] || !strcmp(rhost, rhost_old) )
        {
LABEL_10:
          syslog(
            6,
            "updating existing port mapping %hu %s (rhost '%s') => %s:%hu",
            v8,
            protocol,
            rhost_old,
            iaddr_old,
            iport_old);
          if ( leaseduration )
            v12 = leaseduration + upnp_time();
          timestamp = v12;
          if ( iport_old == v10 )
            return update_portmapping_desc_timestamp(ext_if_name, v8, v14, v11, v12);
          else
            return update_portmapping(ext_if_name, v8, v14, v10, v11, v12);
        }
      }
      else if ( !rhost_old[0] )
      {
        goto LABEL_10;
      }
    }
    syslog(6, "port %hu %s (rhost '%s') already redirected to %s:%hu", v8, protocol, rhost_old, iaddr_old, iport_old);
    return -2;
  }
  if ( leaseduration )
    v12 = leaseduration + upnp_time();
  timestamp = v12;
  syslog(6, "redirecting port %hu to %s:%hu protocol %s for: %s", v8, iaddr, v10, protocol, v11);
  return upnp_redirect_internal(rhost, v8, iaddr, v10, v14, v11, timestamp);
}
