int __fastcall upnp_redirect(
        const char *rhost,
        int eport,
        const char *iaddr,
        int iport,
        int a5,
        int a6,
        int a7,
        int a8,
        const char *protocol,
        const char *desc,
        unsigned int leaseduration)
{
  unsigned int v13; // $s2
  int proto; // $s4
  int v16; // $v0
  unsigned __int16 iport_old; // [sp+52h] [-4Eh]
  in_addr address; // [sp+54h] [-4Ch] BYREF
  unsigned int timestamp; // [sp+58h] [-48h]
  char iaddr_old[32]; // [sp+5Ch] [-44h] BYREF
  char rhost_old[32]; // [sp+7Ch] [-24h] BYREF

  v13 = leaseduration;
  if ( !strcasecmp(protocol, (const char *)&_LC0) )
  {
    proto = 17;
  }
  else
  {
    proto = 136;
    if ( strcasecmp(protocol, "UDPLITE") )
      proto = 6;
  }
  if ( inet_aton(iaddr, &address) <= 0 )
  {
    syslog(3, "inet_aton(%s) FAILED", iaddr);
    return -1;
  }
  if ( !check_upnp_rule_against_permissions(upnppermlist, num_upnpperm, eport, address.s_addr) )
  {
    syslog(6, "redirection permission check failed for %hu->%s:%hu %s", eport, iaddr, iport, protocol);
    return -3;
  }
  rhost_old[0] = 0;
  if ( !get_redirect_rule(ext_if_name, eport, proto, iaddr_old) )
  {
    if ( !strcmp(iaddr, iaddr_old) )
    {
      if ( rhost )
      {
        if ( *rhost == 42 && !rhost[1] )
        {
          v16 = iport_old;
          if ( !rhost_old[0] )
            goto LABEL_14;
        }
        if ( !strcmp(rhost, rhost_old) )
        {
LABEL_13:
          v16 = iport_old;
LABEL_14:
          syslog(
            6,
            "updating existing port mapping %hu %s (rhost '%s') => %s:%hu",
            eport,
            protocol,
            rhost_old,
            iaddr_old,
            v16);
          if ( leaseduration )
            v13 = leaseduration + upnp_time();
          timestamp = v13;
          if ( iport_old == iport )
            return update_portmapping_desc_timestamp(ext_if_name, eport, proto, desc);
          else
            return update_portmapping(ext_if_name, eport, proto, iport);
        }
      }
      else if ( !rhost_old[0] )
      {
        goto LABEL_13;
      }
    }
    syslog(6, "port %hu %s (rhost '%s') already redirected to %s:%hu", eport, protocol, rhost_old, iaddr_old, iport_old);
    return -2;
  }
  if ( leaseduration )
    v13 = leaseduration + upnp_time();
  timestamp = v13;
  syslog(6, "redirecting port %hu to %s:%hu protocol %s for: %s", eport, iaddr, iport, protocol, desc);
  return upnp_redirect_internal(rhost, eport, iaddr, iport, proto, desc, timestamp);
}
