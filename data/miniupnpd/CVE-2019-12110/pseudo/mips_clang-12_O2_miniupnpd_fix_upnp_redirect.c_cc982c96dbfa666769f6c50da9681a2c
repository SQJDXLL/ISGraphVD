int __fastcall upnp_redirect(
        const char *rhost,
        int eport,
        const char *iaddr,
        int iport,
        int a5,
        int a6,
        int a7,
        int a8,
        const char *protocol,
        const char *desc,
        unsigned int leaseduration)
{
  int v15; // $s2
  const char *v16; // $s5
  int redirect_rule; // $v0
  unsigned int v18; // $v0
  int v19; // $s4
  int v21; // $v0
  int v22; // [sp+38h] [-50h]
  unsigned int v23; // [sp+3Ch] [-4Ch]
  struct in_addr v24; // [sp+40h] [-48h] BYREF
  unsigned __int16 v25; // [sp+44h] [-44h]
  char v26[32]; // [sp+48h] [-40h] BYREF
  char v27[32]; // [sp+68h] [-20h] BYREF

  if ( strcasecmp(protocol, "UDP") )
  {
    v15 = 6;
    if ( !strcasecmp(protocol, "UDPLITE") )
      v15 = 136;
  }
  else
  {
    v15 = 17;
  }
  if ( inet_aton(iaddr, &v24) <= 0 )
  {
    syslog(3, "inet_aton(%s) FAILED", iaddr);
    return -1;
  }
  else if ( check_upnp_rule_against_permissions(upnppermlist, num_upnpperm, eport, v24.s_addr) )
  {
    v16 = desc;
    v26[0] = 0;
    redirect_rule = get_redirect_rule(ext_if_name, eport, v15, v27);
    if ( !desc )
      v16 = (const char *)&unk_E90;
    if ( redirect_rule )
    {
      if ( leaseduration )
        v18 = upnp_time() + leaseduration;
      else
        v18 = 0;
      v23 = v18;
      syslog(6, "redirecting port %hu to %s:%hu protocol %s for: %s", eport, iaddr, iport, protocol, v16);
      v19 = -1;
      if ( !disable_port_forwarding
        && add_redirect_rule2(ext_if_name, rhost, eport, iaddr) >= 0
        && add_filter_rule2(ext_if_name, rhost, iaddr, eport) >= 0 )
      {
        if ( v23 && nextruletoclean_timestamp - 1 >= v23 )
          nextruletoclean_timestamp = v23;
        upnp_event_var_change_notify(2);
        return 0;
      }
    }
    else if ( strcmp(iaddr, v27)
           || (rhost || v26[0])
           && (!rhost || ((v22 = (unsigned __int8)v26[0], v21 = strcmp(rhost, "*"), v22) || v21) && strcmp(rhost, v26)) )
    {
      syslog(6, "port %hu %s (rhost '%s') already redirected to %s:%hu", eport, protocol, v26, v27, v25);
      return -2;
    }
    else
    {
      syslog(6, "updating existing port mapping %hu %s (rhost '%s') => %s:%hu", eport, protocol, v26, v27, v25);
      if ( leaseduration )
        upnp_time();
      if ( v25 == iport )
        return update_portmapping_desc_timestamp(ext_if_name, eport, v15, v16);
      else
        return update_portmapping(ext_if_name, eport, v15, iport);
    }
  }
  else
  {
    syslog(6, "redirection permission check failed for %hu->%s:%hu %s", eport, iaddr, iport, protocol);
    return -3;
  }
  return v19;
}
