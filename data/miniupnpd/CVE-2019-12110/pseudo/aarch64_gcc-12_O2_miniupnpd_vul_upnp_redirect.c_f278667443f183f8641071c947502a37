int __fastcall upnp_redirect(
        const char *rhost,
        unsigned __int16 eport,
        const char *iaddr,
        unsigned __int16 iport,
        const char *protocol,
        const char *desc,
        unsigned int leaseduration)
{
  unsigned int v11; // w23
  unsigned int v12; // w24
  unsigned int v13; // w25
  unsigned __int16 iport_old; // [xsp+AEh] [xbp+7Eh]
  in_addr address; // [xsp+B0h] [xbp+80h] BYREF
  unsigned int timestamp; // [xsp+B4h] [xbp+84h]
  char iaddr_old[32]; // [xsp+B8h] [xbp+88h] BYREF
  char rhost_old[32]; // [xsp+D8h] [xbp+A8h] BYREF

  v11 = eport;
  v12 = 17;
  v13 = iport;
  if ( strcasecmp(protocol, "UDP") )
  {
    if ( !strcasecmp(protocol, "UDPLITE") )
      v12 = 136;
    else
      v12 = 6;
  }
  if ( inet_aton(iaddr, &address) <= 0 )
  {
    syslog(3, "inet_aton(%s) FAILED", iaddr);
    return -1;
  }
  if ( !(unsigned int)check_upnp_rule_against_permissions(upnppermlist, num_upnpperm, v11, address.s_addr, v13) )
  {
    syslog(6, "redirection permission check failed for %hu->%s:%hu %s", v11, iaddr, v13, protocol);
    return -3;
  }
  rhost_old[0] = 0;
  if ( !(unsigned int)get_redirect_rule(ext_if_name, v11, v12, iaddr_old) )
  {
    if ( !strcmp(iaddr, iaddr_old) )
    {
      if ( rhost )
      {
        if ( *rhost == 42 && !rhost[1] && !rhost_old[0] || !strcmp(rhost, rhost_old) )
        {
LABEL_14:
          syslog(
            6,
            "updating existing port mapping %hu %s (rhost '%s') => %s:%hu",
            v11,
            protocol,
            rhost_old,
            iaddr_old,
            iport_old);
          if ( leaseduration )
            leaseduration += upnp_time();
          timestamp = leaseduration;
          if ( iport_old == v13 )
            return update_portmapping_desc_timestamp(ext_if_name, v11, v12, desc, leaseduration);
          else
            return update_portmapping(ext_if_name, v11, v12, v13, desc, leaseduration);
        }
      }
      else if ( !rhost_old[0] )
      {
        goto LABEL_14;
      }
    }
    syslog(6, "port %hu %s (rhost '%s') already redirected to %s:%hu", v11, protocol, rhost_old, iaddr_old, iport_old);
    return -2;
  }
  if ( leaseduration )
    leaseduration += upnp_time();
  timestamp = leaseduration;
  syslog(6, "redirecting port %hu to %s:%hu protocol %s for: %s", v11, iaddr, v13, protocol, desc);
  return upnp_redirect_internal(rhost, v11, iaddr, v13, v12, desc, timestamp);
}
