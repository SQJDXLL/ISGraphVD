int __cdecl upnp_redirect(
        const char *rhost,
        unsigned __int16 eport,
        const char *iaddr,
        unsigned __int16 iport,
        const char *protocol,
        const char *desc,
        unsigned int leaseduration)
{
  unsigned int v8; // $v0
  unsigned int v9; // $v0
  unsigned __int16 iport_old; // [sp+52h] [+52h]
  in_addr address; // [sp+54h] [+54h] BYREF
  unsigned int timestamp; // [sp+58h] [+58h]
  int proto; // [sp+60h] [+60h]
  char iaddr_old[32]; // [sp+64h] [+64h] BYREF
  char rhost_old[32]; // [sp+84h] [+84h] BYREF

  proto = proto_atoi(protocol);
  if ( inet_aton(iaddr, &address) > 0 )
  {
    if ( check_upnp_rule_against_permissions(upnppermlist, num_upnpperm, eport, address.s_addr) )
    {
      rhost_old[0] = 0;
      if ( get_redirect_rule(ext_if_name, eport, proto, iaddr_old) )
      {
        if ( leaseduration )
          v9 = upnp_time() + leaseduration;
        else
          v9 = 0;
        timestamp = v9;
        syslog(6, "redirecting port %hu to %s:%hu protocol %s for: %s", eport, iaddr, iport, protocol, desc);
        return upnp_redirect_internal(rhost, eport, iaddr, iport, proto, desc, timestamp);
      }
      else if ( strcmp(iaddr, iaddr_old)
             || (rhost || rhost_old[0])
             && (!rhost || strcmp(rhost, "*") || rhost_old[0])
             && (!rhost || strcmp(rhost, rhost_old)) )
      {
        syslog(
          6,
          "port %hu %s (rhost '%s') already redirected to %s:%hu",
          eport,
          protocol,
          rhost_old,
          iaddr_old,
          iport_old);
        return -2;
      }
      else
      {
        syslog(
          6,
          "updating existing port mapping %hu %s (rhost '%s') => %s:%hu",
          eport,
          protocol,
          rhost_old,
          iaddr_old,
          iport_old);
        if ( leaseduration )
          v8 = upnp_time() + leaseduration;
        else
          v8 = 0;
        timestamp = v8;
        if ( iport == iport_old )
          return update_portmapping_desc_timestamp(ext_if_name, eport, proto, desc);
        else
          return update_portmapping(ext_if_name, eport, proto, iport);
      }
    }
    else
    {
      syslog(6, "redirection permission check failed for %hu->%s:%hu %s", eport, iaddr, iport, protocol);
      return -3;
    }
  }
  else
  {
    syslog(3, "inet_aton(%s) FAILED", iaddr);
    return -1;
  }
}
