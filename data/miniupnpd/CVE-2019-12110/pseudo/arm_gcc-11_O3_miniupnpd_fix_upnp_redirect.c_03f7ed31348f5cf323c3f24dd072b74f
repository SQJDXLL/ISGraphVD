int __fastcall upnp_redirect(
        const char *rhost,
        unsigned __int16 eport,
        const char *iaddr,
        unsigned __int16 iport,
        const char *protocol,
        const char *desc,
        unsigned int leaseduration)
{
  int v8; // r11
  int v9; // r4
  int v11; // r10
  int v12; // r8
  unsigned int v14; // r9
  const char *v15; // [sp+2Ch] [bp-84h]
  unsigned __int16 iport_old; // [sp+3Ah] [bp-76h] BYREF
  in_addr address; // [sp+3Ch] [bp-74h] BYREF
  unsigned int timestamp; // [sp+40h] [bp-70h] BYREF
  char iaddr_old[32]; // [sp+44h] [bp-6Ch] BYREF
  char rhost_old[32]; // [sp+64h] [bp-4Ch] BYREF

  v8 = iport;
  v9 = eport;
  v15 = desc;
  if ( !strcasecmp(protocol, "UDP") )
  {
    v11 = 17;
  }
  else if ( !strcasecmp(protocol, "UDPLITE") )
  {
    v11 = 136;
  }
  else
  {
    v11 = 6;
  }
  if ( inet_aton(iaddr, &address) <= 0 )
  {
    syslog(3, "inet_aton(%s) FAILED", iaddr);
    return -1;
  }
  if ( !check_upnp_rule_against_permissions(upnppermlist, num_upnpperm, v9, address.s_addr, v8) )
  {
    syslog(6, "redirection permission check failed for %hu->%s:%hu %s", v9, iaddr, v8, protocol);
    return -3;
  }
  if ( !desc )
    v15 = (const char *)&LC0;
  rhost_old[0] = 0;
  if ( !get_redirect_rule(ext_if_name, v9, v11, iaddr_old, 32, &iport_old, 0, 0, rhost_old, 32, &timestamp, 0, 0) )
  {
    if ( !strcmp(iaddr, iaddr_old) )
    {
      if ( rhost )
      {
        if ( *rhost == 42 && !rhost[1] && !rhost_old[0] || !strcmp(rhost, rhost_old) )
        {
LABEL_17:
          syslog(
            6,
            "updating existing port mapping %hu %s (rhost '%s') => %s:%hu",
            v9,
            protocol,
            rhost_old,
            iaddr_old,
            iport_old);
          if ( leaseduration )
            leaseduration += upnp_time();
          timestamp = leaseduration;
          if ( iport_old == v8 )
            return update_portmapping_desc_timestamp(ext_if_name, v9, v11, v15, leaseduration);
          else
            return update_portmapping(ext_if_name, v9, v11, v8, v15, leaseduration);
        }
      }
      else if ( !rhost_old[0] )
      {
        goto LABEL_17;
      }
    }
    syslog(6, "port %hu %s (rhost '%s') already redirected to %s:%hu", v9, protocol, rhost_old, iaddr_old, iport_old);
    return -2;
  }
  if ( leaseduration )
    leaseduration += upnp_time();
  timestamp = leaseduration;
  syslog(6, "redirecting port %hu to %s:%hu protocol %s for: %s", v9, iaddr, v8, protocol, v15);
  v14 = timestamp;
  v12 = disable_port_forwarding;
  if ( disable_port_forwarding
    || add_redirect_rule2(ext_if_name, rhost, v9, iaddr, v8, v11, v15, timestamp) < 0
    || add_filter_rule2(ext_if_name, rhost, iaddr, v9, v8, v11, v15) < 0 )
  {
    return -1;
  }
  if ( v14 && v14 <= nextruletoclean_timestamp - 1 )
    nextruletoclean_timestamp = v14;
  upnp_event_var_change_notify(2);
  return v12;
}
