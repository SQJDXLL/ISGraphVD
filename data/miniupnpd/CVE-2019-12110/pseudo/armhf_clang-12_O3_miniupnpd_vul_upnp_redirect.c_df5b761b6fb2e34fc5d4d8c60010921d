int __fastcall upnp_redirect(
        const char *rhost,
        int eport,
        const char *iaddr,
        int iport,
        const char *protocol,
        const char *desc,
        unsigned int leaseduration)
{
  int v11; // r6
  unsigned int v12; // r9
  unsigned int v14; // r9
  int v15; // r8
  bool v16; // zf
  int v17; // r0
  bool v18; // zf
  unsigned int v19; // r1
  unsigned int v20; // [sp+28h] [bp-70h] BYREF
  struct in_addr inp; // [sp+2Ch] [bp-6Ch] BYREF
  unsigned __int16 v22; // [sp+32h] [bp-66h] BYREF
  char v23[32]; // [sp+34h] [bp-64h] BYREF
  char s2[68]; // [sp+54h] [bp-44h] BYREF

  if ( !strcasecmp(protocol, "UDP") )
  {
    v11 = 17;
  }
  else
  {
    v11 = 6;
    if ( !strcasecmp(protocol, "UDPLITE") )
      v11 = 136;
  }
  if ( inet_aton(iaddr, &inp) <= 0 )
  {
    syslog(3, "inet_aton(%s) FAILED", iaddr);
    return -1;
  }
  else if ( check_upnp_rule_against_permissions(upnppermlist, num_upnpperm, eport, inp.s_addr, iport) )
  {
    v12 = 0;
    v23[0] = 0;
    if ( get_redirect_rule(ext_if_name, eport, v11, s2, 32, &v22, 0, 0, v23, 32, &v20, 0, 0) )
    {
      if ( leaseduration )
        v12 = upnp_time() + leaseduration;
      v20 = v12;
      syslog(6, "redirecting port %hu to %s:%hu protocol %s for: %s", eport, iaddr, iport, protocol, desc);
      if ( disable_port_forwarding )
        return -1;
      v14 = v20;
      if ( add_redirect_rule2(ext_if_name, rhost, eport, iaddr, iport, v11, desc, v20) < 0
        || add_filter_rule2(ext_if_name, rhost, iaddr, eport, iport, v11, desc) < 0 )
      {
        return -1;
      }
      else
      {
        if ( v14 )
        {
          if ( nextruletoclean_timestamp - 1 >= v14 )
            nextruletoclean_timestamp = v14;
        }
        upnp_event_var_change_notify(2);
        return 0;
      }
    }
    else
    {
      if ( strcmp(iaddr, s2) )
        goto LABEL_16;
      v15 = (unsigned __int8)v23[0];
      v16 = rhost == 0;
      if ( !rhost )
        v16 = v23[0] == 0;
      if ( v16 )
        goto LABEL_31;
      if ( !rhost )
        goto LABEL_16;
      v17 = strcmp(rhost, "*");
      v18 = v15 == 0;
      if ( !v15 )
        v18 = v17 == 0;
      if ( v18 || !strcmp(rhost, v23) )
      {
LABEL_31:
        syslog(6, "updating existing port mapping %hu %s (rhost '%s') => %s:%hu", eport, protocol, v23, s2, v22);
        if ( leaseduration )
          v19 = upnp_time() + leaseduration;
        else
          v19 = 0;
        v20 = v19;
        if ( v22 == iport )
          return update_portmapping_desc_timestamp(ext_if_name, eport, v11, desc, v19);
        else
          return update_portmapping(ext_if_name, eport, v11, iport, desc, v19);
      }
      else
      {
LABEL_16:
        syslog(6, "port %hu %s (rhost '%s') already redirected to %s:%hu", eport, protocol, v23, s2, v22);
        return -2;
      }
    }
  }
  else
  {
    syslog(6, "redirection permission check failed for %hu->%s:%hu %s", eport, iaddr, iport, protocol);
    return -3;
  }
}
