int __fastcall upnp_redirect(
        const char *rhost,
        unsigned __int16 eport,
        const char *iaddr,
        unsigned __int16 iport,
        const char *protocol,
        const char *desc,
        unsigned int leaseduration)
{
  unsigned int v10; // ebx
  int v12; // eax
  __int64 v13; // r15
  unsigned int proto; // [rsp+24h] [rbp-A4h]
  unsigned __int16 iport_old; // [rsp+3Eh] [rbp-8Ah] BYREF
  in_addr address; // [rsp+40h] [rbp-88h] BYREF
  unsigned int timestamp; // [rsp+44h] [rbp-84h] BYREF
  char iaddr_old[32]; // [rsp+48h] [rbp-80h] BYREF
  char rhost_old[32]; // [rsp+68h] [rbp-60h] BYREF
  unsigned __int64 v21; // [rsp+88h] [rbp-40h]

  v10 = leaseduration;
  v21 = __readfsqword(0x28u);
  proto = proto_atoi(protocol);
  if ( inet_aton(iaddr, &address) <= 0 )
  {
    syslog(3, "inet_aton(%s) FAILED", iaddr);
    return -1;
  }
  if ( !(unsigned int)check_upnp_rule_against_permissions(upnppermlist, num_upnpperm, eport, address.s_addr, iport) )
  {
    syslog(6, "redirection permission check failed for %hu->%s:%hu %s", eport, iaddr, iport, protocol);
    return -3;
  }
  if ( !desc )
    desc = (const char *)&LC2;
  rhost_old[0] = 0;
  if ( !(unsigned int)get_redirect_rule(
                        ext_if_name,
                        eport,
                        proto,
                        iaddr_old,
                        32LL,
                        &iport_old,
                        0LL,
                        0LL,
                        rhost_old,
                        32LL,
                        &timestamp,
                        0LL,
                        0LL,
                        eport) )
  {
    v12 = strcmp(iaddr, iaddr_old);
    v13 = iport_old;
    if ( !v12 )
    {
      if ( rhost && strcmp(rhost, "*") )
        goto LABEL_25;
      if ( !rhost_old[0] )
      {
LABEL_14:
        syslog(
          6,
          "updating existing port mapping %hu %s (rhost '%s') => %s:%hu",
          eport,
          protocol,
          rhost_old,
          iaddr_old,
          v13);
        if ( leaseduration )
          v10 = upnp_time() + leaseduration;
        timestamp = v10;
        if ( iport_old == iport )
          return update_portmapping_desc_timestamp(ext_if_name, eport, proto, desc, v10);
        else
          return update_portmapping(ext_if_name, eport, proto, iport, desc, v10);
      }
      if ( rhost )
      {
LABEL_25:
        if ( !strcmp(rhost, rhost_old) )
          goto LABEL_14;
      }
    }
    syslog(6, "port %hu %s (rhost '%s') already redirected to %s:%hu", eport, protocol, rhost_old, iaddr_old, v13);
    return -2;
  }
  if ( leaseduration )
    v10 = upnp_time() + leaseduration;
  timestamp = v10;
  syslog(6, "redirecting port %hu to %s:%hu protocol %s for: %s", eport, iaddr, iport, protocol, desc);
  return upnp_redirect_internal(rhost, eport, iaddr, iport, proto, desc, timestamp);
}
