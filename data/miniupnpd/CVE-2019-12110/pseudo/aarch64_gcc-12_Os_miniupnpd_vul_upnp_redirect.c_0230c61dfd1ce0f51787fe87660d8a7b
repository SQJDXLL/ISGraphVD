int __fastcall upnp_redirect(
        const char *rhost,
        unsigned __int16 eport,
        const char *iaddr,
        unsigned __int16 iport,
        const char *protocol,
        const char *desc,
        unsigned int leaseduration)
{
  unsigned int v8; // w24
  unsigned int v9; // w20
  unsigned int v14; // w25
  int v16; // w0
  unsigned __int16 iport_old; // [xsp+AEh] [xbp+7Eh]
  in_addr address; // [xsp+B0h] [xbp+80h] BYREF
  unsigned int timestamp; // [xsp+B4h] [xbp+84h]
  char iaddr_old[32]; // [xsp+B8h] [xbp+88h] BYREF
  char rhost_old[32]; // [xsp+D8h] [xbp+A8h] BYREF

  v8 = iport;
  v9 = eport;
  v14 = proto_atoi(protocol);
  if ( inet_aton(iaddr, &address) <= 0 )
  {
    syslog(3, "inet_aton(%s) FAILED", iaddr);
    return -1;
  }
  if ( !(unsigned int)check_upnp_rule_against_permissions(upnppermlist, num_upnpperm, v9, address.s_addr, v8) )
  {
    syslog(6, "redirection permission check failed for %hu->%s:%hu %s", v9, iaddr, v8, protocol);
    return -3;
  }
  rhost_old[0] = 0;
  if ( !(unsigned int)get_redirect_rule(ext_if_name, v9, v14, iaddr_old) )
  {
    if ( !strcmp(iaddr, iaddr_old) )
    {
      if ( rhost )
      {
        if ( !strcmp(rhost, "*") && !rhost_old[0] )
          goto LABEL_11;
        v16 = strcmp(rhost, rhost_old);
      }
      else
      {
        v16 = (unsigned __int8)rhost_old[0];
      }
      if ( !v16 )
      {
LABEL_11:
        syslog(
          6,
          "updating existing port mapping %hu %s (rhost '%s') => %s:%hu",
          v9,
          protocol,
          rhost_old,
          iaddr_old,
          iport_old);
        if ( leaseduration )
          leaseduration += upnp_time();
        timestamp = leaseduration;
        if ( iport_old == v8 )
          return update_portmapping_desc_timestamp(ext_if_name, v9, v14, desc, leaseduration);
        else
          return update_portmapping(ext_if_name, v9, v14, v8, desc, leaseduration);
      }
    }
    syslog(6, "port %hu %s (rhost '%s') already redirected to %s:%hu", v9, protocol, rhost_old, iaddr_old, iport_old);
    return -2;
  }
  if ( leaseduration )
    leaseduration += upnp_time();
  timestamp = leaseduration;
  syslog(6, "redirecting port %hu to %s:%hu protocol %s for: %s", v9, iaddr, v8, protocol, desc);
  return upnp_redirect_internal(rhost, v9, iaddr, v8, v14, desc, timestamp);
}
