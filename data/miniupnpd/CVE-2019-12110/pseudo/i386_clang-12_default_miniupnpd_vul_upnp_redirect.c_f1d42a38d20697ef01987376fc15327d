int __cdecl upnp_redirect(
        const char *rhost,
        unsigned __int16 eport,
        const char *iaddr,
        unsigned __int16 iport,
        const char *protocol,
        const char *desc,
        unsigned int leaseduration)
{
  unsigned int v8; // [esp+44h] [ebp-74h]
  unsigned int v9; // [esp+48h] [ebp-70h]
  unsigned int timestamp; // [esp+54h] [ebp-64h] BYREF
  in_addr address; // [esp+58h] [ebp-60h] BYREF
  unsigned __int16 iport_old; // [esp+5Eh] [ebp-5Ah] BYREF
  char rhost_old[32]; // [esp+60h] [ebp-58h] BYREF
  char iaddr_old[32]; // [esp+80h] [ebp-38h] BYREF
  int proto; // [esp+A4h] [ebp-14h]

  proto = proto_atoi(protocol);
  if ( inet_aton(iaddr, &address) > 0 )
  {
    if ( check_upnp_rule_against_permissions(upnppermlist, num_upnpperm, eport, address.s_addr, iport) )
    {
      rhost_old[0] = 0;
      if ( get_redirect_rule(
             ext_if_name,
             eport,
             proto,
             iaddr_old,
             32,
             &iport_old,
             0,
             0,
             rhost_old,
             32,
             &timestamp,
             0,
             0) )
      {
        if ( leaseduration )
          v8 = leaseduration + upnp_time();
        else
          v8 = 0;
        timestamp = v8;
        syslog(6, "redirecting port %hu to %s:%hu protocol %s for: %s", eport, iaddr, iport, protocol, desc);
        return upnp_redirect_internal(rhost, eport, iaddr, iport, proto, desc, timestamp);
      }
      else if ( !strcmp(iaddr, iaddr_old)
             && (!rhost && !rhost_old[0]
              || rhost && !strcmp(rhost, "*") && !rhost_old[0]
              || rhost && !strcmp(rhost, rhost_old)) )
      {
        syslog(
          6,
          "updating existing port mapping %hu %s (rhost '%s') => %s:%hu",
          eport,
          protocol,
          rhost_old,
          iaddr_old,
          iport_old);
        if ( leaseduration )
          v9 = leaseduration + upnp_time();
        else
          v9 = 0;
        timestamp = v9;
        if ( iport == iport_old )
          return update_portmapping_desc_timestamp(ext_if_name, eport, proto, desc, timestamp);
        else
          return update_portmapping(ext_if_name, eport, proto, iport, desc, timestamp);
      }
      else
      {
        syslog(
          6,
          "port %hu %s (rhost '%s') already redirected to %s:%hu",
          eport,
          protocol,
          rhost_old,
          iaddr_old,
          iport_old);
        return -2;
      }
    }
    else
    {
      syslog(6, "redirection permission check failed for %hu->%s:%hu %s", eport, iaddr, iport, protocol);
      return -3;
    }
  }
  else
  {
    syslog(3, "inet_aton(%s) FAILED", iaddr);
    return -1;
  }
}
