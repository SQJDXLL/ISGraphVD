int __fastcall upnp_redirect(
        const char *rhost,
        int eport,
        const char *iaddr,
        int iport,
        int a5,
        int a6,
        int a7,
        int a8,
        const char *protocol,
        const char *desc,
        unsigned int leaseduration)
{
  int v15; // $s2
  unsigned int v16; // $v0
  int v17; // $s4
  int v19; // $s6
  int v20; // $v0
  unsigned int v21; // [sp+3Ch] [-4Ch]
  struct in_addr v22; // [sp+40h] [-48h] BYREF
  unsigned __int16 v23; // [sp+44h] [-44h]
  char v24[32]; // [sp+48h] [-40h] BYREF
  char v25[32]; // [sp+68h] [-20h] BYREF

  if ( !strcasecmp(protocol, "UDP") )
  {
    v15 = 17;
  }
  else
  {
    v15 = 6;
    if ( !strcasecmp(protocol, "UDPLITE") )
      v15 = 136;
  }
  if ( inet_aton(iaddr, &v22) <= 0 )
  {
    syslog(3, "inet_aton(%s) FAILED", iaddr);
    return -1;
  }
  else if ( check_upnp_rule_against_permissions(upnppermlist, num_upnpperm, eport, v22.s_addr) )
  {
    v24[0] = 0;
    if ( get_redirect_rule(ext_if_name, eport, v15, v25) )
    {
      if ( leaseduration )
        v16 = upnp_time() + leaseduration;
      else
        v16 = 0;
      v21 = v16;
      syslog(6, "redirecting port %hu to %s:%hu protocol %s for: %s", eport, iaddr, iport, protocol, desc);
      v17 = -1;
      if ( !disable_port_forwarding
        && add_redirect_rule2(ext_if_name, rhost, eport, iaddr) >= 0
        && add_filter_rule2(ext_if_name, rhost, iaddr, eport) >= 0 )
      {
        if ( v21 && nextruletoclean_timestamp - 1 >= v21 )
          nextruletoclean_timestamp = v21;
        upnp_event_var_change_notify(2);
        return 0;
      }
    }
    else if ( strcmp(iaddr, v25)
           || ((v19 = (unsigned __int8)v24[0], rhost) || v24[0])
           && (!rhost || ((v20 = strcmp(rhost, "*"), v19) || v20) && strcmp(rhost, v24)) )
    {
      syslog(6, "port %hu %s (rhost '%s') already redirected to %s:%hu", eport, protocol, v24, v25, v23);
      return -2;
    }
    else
    {
      syslog(6, "updating existing port mapping %hu %s (rhost '%s') => %s:%hu", eport, protocol, v24, v25, v23);
      if ( leaseduration )
        upnp_time();
      if ( v23 == iport )
        return update_portmapping_desc_timestamp(ext_if_name, eport, v15, desc);
      else
        return update_portmapping(ext_if_name, eport, v15, iport);
    }
  }
  else
  {
    syslog(6, "redirection permission check failed for %hu->%s:%hu %s", eport, iaddr, iport, protocol);
    return -3;
  }
  return v17;
}
