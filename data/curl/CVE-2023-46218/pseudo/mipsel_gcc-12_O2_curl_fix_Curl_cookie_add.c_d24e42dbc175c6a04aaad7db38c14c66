Cookie *__fastcall Curl_cookie_add(
        Curl_easy *data,
        CookieInfo *c,
        _BOOL4 httpheader,
        int noexpire,
        int a5,
        int a6,
        int a7,
        int a8,
        const char *lineptr,
        const char *domain,
        const char *path,
        bool secure)
{
  char *v13; // $s6
  time_t v14; // $v0
  bool v16; // dc
  Cookie *v17; // $s0
  int v18; // $s2
  size_t v19; // $s7
  int v20; // $v0
  void (*v21)(Cookie *); // $t9
  unsigned __int8 prefix; // $v0
  int v23; // $v0
  CookieInfo *v24; // $v0
  char *v25; // $v1
  void (*v26)(Cookie *); // $t9
  bool running; // $v1
  CookieInfo *v28; // $a0
  int lastct; // $v0
  size_t v30; // $v0
  Cookie **v31; // $s7
  Cookie *v32; // $fp
  int livecookie; // $s5
  Cookie *v34; // $s4
  Cookie *v35; // $s1
  char *v36; // $a0
  char *v37; // $a1
  const char *spath; // $s6
  char *v39; // $v0
  void (*v40)(Cookie *); // $a3
  size_t v41; // $a2
  char *v43; // $v0
  char *v44; // $v0
  char *v45; // $v0
  char *v46; // $a0
  int v47; // $v0
  int v48; // $s7
  char *v49; // $a0
  char *v50; // $v0
  char *v51; // $s2
  int v52; // $v0
  void (*v53)(Cookie *); // $a2
  int v54; // $v0
  const char *v55; // $a0
  char *v56; // $v0
  int v57; // $v0
  int (__fastcall *v58)(const char *); // $t9
  int v59; // $v0
  int v60; // $s1
  char *v61; // $a0
  int v62; // $v0
  int v63; // $s7
  char *v64; // $a0
  int v65; // $a1
  char *v66; // $a0
  int v67; // $v0
  int v68; // $s1
  void (*v69)(Cookie *); // $a2
  unsigned int v70; // $a1
  int v71; // $v0
  size_t v72; // $fp
  _BYTE *v73; // $s3
  size_t v74; // $v0
  char *v75; // $s4
  char *v76; // $v0
  int v77; // $v0
  void (*v78)(Cookie *); // $t9
  _BOOL4 v79; // $v0
  void (*v80)(Cookie *); // $t3
  int v81; // $v0
  curl_off_t expires; // $v0
  time_t v83; // $a2
  int v84; // $a0
  time_t v85; // $a0
  unsigned int v86; // $a0
  int v87; // $v0
  unsigned int v88; // $v0
  _BYTE *v89; // $v0
  char *v90; // $v0
  int v91; // $v0
  char *v92; // $s2
  int v93; // $v0
  void (__fastcall *v94)(char *); // $t9
  char *value; // $a0
  const char *v96; // $v0
  const char *name; // $s2
  int v98; // $v0
  char *v99; // $v1
  int v100; // $v0
  char *v101; // $v0
  Cookie *next; // $v0
  int v103; // $v0
  char *v104; // $a0
  char *v105; // $a1
  char *v106; // $a0
  char *v107; // $a1
  Cookie *v108; // $v1
  char *v109; // $a0
  void (__fastcall *v110)(char *); // $t9
  Cookie *v111; // $v0
  Cookie *v112; // $v1
  Cookie *v113; // $a3
  char *v114; // $a2
  char *v115; // $a1
  char *v116; // $a0
  const char *v117; // $a2
  int v118; // $v0
  __int64 v119; // $v0
  CookieInfo *v120; // $a0
  int v121; // $v0
  int is_ipnum; // $s2
  int v123; // $v0
  const char *v124; // $s1
  char *v125; // $a2
  char *v126; // $v0
  const char *v127; // $s2
  int v128; // $v0
  size_t v129; // $s1
  char *v130; // $a0
  char *v131; // $v0
  int v132; // $v0
  int v133; // $v0
  char *v134; // $v1
  void *v135; // $v0
  int v136; // $v0
  void (*v137)(Cookie *); // [sp+30h] [-B8h] BYREF
  CookieInfo *ca; // [sp+34h] [-B4h]
  Curl_easy *dataa; // [sp+38h] [-B0h]
  _DWORD *v140; // [sp+3Ch] [-ACh]
  void (*v141)(Cookie *); // [sp+40h] [-A8h]
  char *hostname; // [sp+44h] [-A4h]
  _BOOL4 v143; // [sp+48h] [-A0h]
  const char *v144; // [sp+4Ch] [-9Ch]
  time_t now; // [sp+50h] [-98h]
  const char *v146; // [sp+54h] [-94h]
  const char *v147; // [sp+58h] [-90h]
  int badcookie; // [sp+5Ch] [-8Ch]
  char *tok_buf; // [sp+60h] [-88h] BYREF
  char date[128]; // [sp+64h] [-84h] BYREF
  int v151; // [sp+E4h] [-4h]

  hostname = (char *)domain;
  v140 = &_stack_chk_guard;
  v144 = path;
  dataa = data;
  v143 = secure;
  ca = c;
  v13 = (char *)lineptr;
  v14 = time(0u);
  v16 = data->req.setcookies >= 0x32u;
  now = v14;
  if ( v16 )
    goto LABEL_49;
  v17 = (Cookie *)Curl_ccalloc(1, 48);
  if ( !v17 )
    goto LABEL_49;
  if ( httpheader )
  {
    if ( strlen(lineptr) < 0x1389 )
    {
      v18 = *lineptr;
      v141 = freecookie;
      v146 = "path";
      badcookie = 0;
      v147 = "domain";
      if ( v18 )
        goto LABEL_6;
LABEL_88:
      v19 = strcspn(v13, ";\t\r\n=");
      if ( !v19 )
      {
LABEL_12:
        v20 = badcookie;
LABEL_13:
        v21 = (void (*)(Cookie *))MEMORY[0xB3C0];
        if ( v20 )
          goto LABEL_47;
        if ( !v17->domain )
        {
          if ( hostname )
          {
            v132 = Curl_cstrdup(hostname);
            v17->domain = (char *)v132;
            if ( !v132 )
            {
              v21 = freecookie;
              goto LABEL_47;
            }
          }
        }
        if ( !v17->path )
        {
          v124 = v144;
          if ( v144 )
          {
            v125 = strchr(v144, 63);
            v126 = v125 ? (char *)Curl_memrchr(v144, 47, v125 - v144) : strrchr(v124, 47);
            if ( v126 )
            {
              v127 = v144;
              v128 = v126 - v144;
              v129 = v128 + 1;
              v130 = (char *)Curl_cmalloc(v128 + 2);
              v17->path = v130;
              if ( !v130 )
                goto LABEL_46;
              memcpy(v130, v127, v129);
              v17->path[v129] = 0;
              v131 = sanitize_cookie_path(v17->path);
              v17->spath = v131;
              if ( !v131 )
              {
                v21 = freecookie;
                goto LABEL_47;
              }
            }
          }
        }
        if ( !v17->name )
          goto LABEL_46;
        ++dataa->req.setcookies;
        goto LABEL_18;
      }
LABEL_89:
      v69 = (void (*)(Cookie *))&v13[v19];
      while ( 1 )
      {
        v70 = v19--;
        v71 = v13[v19];
        if ( v71 != 32 && v71 != 9 )
          break;
        if ( !v19 )
        {
          v72 = 0;
          if ( *(_BYTE *)v69 == 61 )
            goto LABEL_94;
          v75 = (char *)v69;
          v73 = 0;
          v80 = 0;
          if ( !v17->name )
          {
LABEL_164:
            if ( v80 )
            {
              Curl_cfree(0);
              v93 = Curl_strndup(v13, v19);
              v94 = (void (__fastcall *)(char *))Curl_cfree;
              value = v17->value;
              v17->name = (char *)v93;
              v94(value);
              v96 = (const char *)Curl_strndup(v73, v72);
              name = v17->name;
              v17->value = (char *)v96;
              if ( name )
              {
                if ( v96 )
                {
                  if ( v96[strcspn(v96, badoctets_0)] || name[strcspn(name, badoctets_0)] )
                  {
                    v21 = (void (*)(Cookie *))MEMORY[0xB3C0];
                    if ( (*(_DWORD *)(&dataa->set.connect_only + 3) & 0x2000) != 0 )
                    {
                      Curl_infof(dataa, "invalid octets in name/value, cookie dropped");
                      goto LABEL_46;
                    }
LABEL_47:
                    v26 = (void (*)(Cookie *))((char *)v21 + (__int16)freecookie);
LABEL_48:
                    v26(v17);
                    goto LABEL_49;
                  }
LABEL_119:
                  v18 = *v75;
                  v13 = v75;
                  goto LABEL_120;
                }
              }
            }
LABEL_46:
            v21 = freecookie;
            goto LABEL_47;
          }
LABEL_103:
          if ( !v72 )
          {
            if ( v19 == 6 )
            {
              v137 = v80;
              if ( !curl_strnequal("secure", v13, 6) )
              {
                if ( v137 )
                  curl_strnequal("domain", v13, 6);
                goto LABEL_119;
              }
              if ( v143 || !ca->running )
              {
                v17->secure = 1;
                v18 = *v75;
                v13 = v75;
                goto LABEL_120;
              }
              goto LABEL_46;
            }
            if ( !v80 || v19 != 4 )
              goto LABEL_119;
LABEL_177:
            if ( !curl_strnequal(v146, v13, 4) )
              goto LABEL_119;
            Curl_cfree(v17->path);
            v100 = Curl_strndup(v73, v72);
            v17->path = (char *)v100;
            if ( v100 )
            {
              Curl_cfree(v17->spath);
              v101 = sanitize_cookie_path(v17->path);
              v17->spath = v101;
              if ( !v101 )
              {
                v21 = (void (*)(Cookie *))MEMORY[0xB3C0];
                goto LABEL_47;
              }
              goto LABEL_119;
            }
            goto LABEL_46;
          }
          if ( v19 == 4 )
            goto LABEL_177;
          if ( v19 != 6 || !curl_strnequal(v147, v13, 6) )
            goto LABEL_119;
          if ( *v73 == 46 )
          {
            ++v73;
            --v72;
          }
          if ( v72 == 9 && curl_strnequal(v73, "localhost", 9) )
          {
            v90 = hostname;
            goto LABEL_189;
          }
          v89 = memchr(v73, 46, v72);
          if ( v89 && (v16 = v72 - (v89 - v73) >= 2, v90 = hostname, v16) )
          {
LABEL_189:
            if ( !v90 )
            {
              is_ipnum = Curl_host_is_ipnum(v73);
              Curl_cfree(v17->domain);
              v123 = Curl_strndup(v73, v72);
              v17->domain = (char *)v123;
              if ( v123 )
              {
                if ( !is_ipnum )
                  v17->tailmatch = 1;
                goto LABEL_119;
              }
              goto LABEL_46;
            }
            if ( !Curl_host_is_ipnum(hostname) )
              goto LABEL_191;
LABEL_158:
            v92 = hostname;
            if ( !strncmp(v73, hostname, v72) && strlen(v92) == v72 )
            {
              Curl_cfree(v17->domain);
              v121 = Curl_strndup(v73, v72);
              v17->domain = (char *)v121;
              if ( !v121 )
              {
                v21 = freecookie;
                goto LABEL_47;
              }
              goto LABEL_119;
            }
          }
          else
          {
            v91 = Curl_host_is_ipnum(":");
            hostname = ":";
            if ( v91 )
              goto LABEL_158;
LABEL_191:
            if ( cookie_tailmatch(v73, v72, hostname) )
            {
              Curl_cfree(v17->domain);
              v103 = Curl_strndup(v73, v72);
              v17->domain = (char *)v103;
              if ( v103 )
              {
                v17->tailmatch = 1;
                goto LABEL_119;
              }
              goto LABEL_46;
            }
          }
          if ( (*(_DWORD *)(&dataa->set.connect_only + 3) & 0x2000) != 0 )
          {
            Curl_infof(dataa, "skipped cookie with bad tailmatch domain: %s", v73);
            v13 = v75;
            v18 = *v75;
          }
          else
          {
            v18 = *v75;
            v13 = v75;
          }
          badcookie = httpheader;
          goto LABEL_120;
        }
      }
      v19 = v70;
      if ( *(_BYTE *)v69 == 61 )
      {
LABEL_94:
        v73 = (char *)v69 + 1;
        v137 = v69;
        v74 = strcspn((const char *)v69 + 1, (const char *)v141 + 0x301C);
        v72 = v74;
        v75 = &v73[v74];
        if ( v74 )
        {
          v70 = 9;
          v76 = (char *)v137 + v74;
          while ( 1 )
          {
            v77 = *v76;
            if ( v77 != 32 && v77 != 9 )
              break;
            --v72;
            v76 = (char *)v137 + v72;
            if ( !v72 )
            {
              v78 = (void (*)(Cookie *))MEMORY[0xB3C0];
              if ( v19 >= 0xFFF )
                goto LABEL_142;
              v79 = v19 < 7;
              goto LABEL_101;
            }
          }
          v70 = 9;
          while ( 1 )
          {
            v87 = (char)*v73;
            if ( v87 != 32 && v87 != 9 )
              break;
            --v72;
            ++v73;
            if ( !v72 )
            {
              v78 = (void (*)(Cookie *))MEMORY[0xB3C0];
              if ( v19 < 0xFFF )
              {
                v88 = v19;
                goto LABEL_140;
              }
LABEL_142:
              ((void (__fastcall *)(Cookie *, unsigned int))((char *)v78 + (__int16)freecookie))(v17, v70);
LABEL_143:
              if ( (*(_DWORD *)(&dataa->set.connect_only + 3) & 0x2000) != 0 )
                Curl_infof(dataa, "oversized cookie dropped, name/val %zu + %zu bytes", v19, v72);
LABEL_49:
              v34 = 0;
              goto LABEL_50;
            }
          }
          if ( memchr(v73, 9, v72) )
          {
            freecookie(v17);
            if ( (*(_DWORD *)(&dataa->set.connect_only + 3) & 0x2000) != 0 )
              Curl_infof(dataa, "cookie contains TAB, dropping");
            goto LABEL_49;
          }
          if ( v19 < 0xFFF )
          {
            v88 = v72 + v19;
            if ( v72 >= 0xFFF )
            {
              ((void (__fastcall *)(Cookie *, unsigned int))(MEMORY[0xB3C0] + (__int16)freecookie))(v17, v70);
              goto LABEL_143;
            }
LABEL_140:
            v16 = v88 < 0x1001;
            v79 = v19 < 7;
            if ( v16 )
            {
LABEL_101:
              v80 = (void (*)(Cookie *))httpheader;
              if ( !v79 )
              {
LABEL_113:
                if ( v18 == 95 && v13[1] == 95 )
                {
                  v137 = v80;
                  v98 = curl_strnequal("__Secure-", v13, 9);
                  v80 = v137;
                  if ( v98 )
                  {
                    v99 = v17->name;
                    v17->prefix |= 1u;
                    if ( !v99 )
                      goto LABEL_164;
                    goto LABEL_115;
                  }
                  v133 = curl_strnequal("__Host-", v13, 7);
                  v80 = v137;
                  if ( v133 )
                  {
                    v134 = v17->name;
                    v17->prefix |= 2u;
                    if ( !v134 )
                      goto LABEL_164;
LABEL_115:
                    if ( !v72 )
                    {
                      if ( v19 == 8 )
                      {
                        if ( !curl_strnequal("httponly", v13, 8) )
                          goto LABEL_119;
                        v17->httponly = 1;
                        v18 = *v75;
                        v13 = v75;
                        goto LABEL_120;
                      }
                      if ( !v80 )
                        goto LABEL_119;
                    }
                    if ( v19 != 7 || curl_strnequal("version", v13, 7) )
                      goto LABEL_119;
                    if ( !curl_strnequal("max-age", v13, 7) )
                    {
                      if ( curl_strnequal("expires", v13, 7) && !v17->expires && v72 < 0x80 )
                      {
                        v135 = memcpy(date, v73, v72);
                        *((_BYTE *)&v137 + v72 + 0x34) = 0;
                        v136 = Curl_getdate_capped(v135);
                        if ( v136 )
                        {
                          if ( v136 >> 0x1F == -1 )
                          {
                            LODWORD(v17->expires) = 0;
                            HIDWORD(v17->expires) = 0;
                          }
                          else
                          {
                            v17->expires = v136;
                          }
                        }
                        else
                        {
                          LODWORD(v17->expires) = 1;
                          HIDWORD(v17->expires) = 0;
                        }
                      }
                      goto LABEL_119;
                    }
                    if ( *v73 == 34 )
                      ++v73;
                    v81 = curlx_strtoofft(v73, 0, 10, &v17->expires);
                    if ( v81 != 1 )
                    {
                      if ( v81 == 2 )
                        goto LABEL_264;
                      if ( v81 )
                        goto LABEL_119;
                      expires = v17->expires;
                      if ( !expires )
                      {
LABEL_264:
                        LODWORD(v17->expires) = 1;
                        HIDWORD(v17->expires) = 0;
                        v18 = *v75;
                        v13 = v75;
                        goto LABEL_120;
                      }
                      v83 = now >> 0x1F;
                      v84 = 0x7FFFFFFF - (now >> 0x1F);
                      if ( v84 >= SHIDWORD(expires) )
                      {
                        v16 = HIDWORD(expires) != v84;
                        v85 = now;
                        if ( v16 || (v85 = now, ~now >= (unsigned int)expires) )
                        {
                          v86 = expires + v85;
                          LODWORD(v17->expires) = v86;
                          HIDWORD(v17->expires) = (v86 < (unsigned int)expires) + HIDWORD(expires) + v83;
                          v18 = *v75;
                          v13 = v75;
                          goto LABEL_120;
                        }
                      }
                    }
                    LODWORD(v17->expires) = -1;
                    HIDWORD(v17->expires) = 0x7FFFFFFF;
                    v18 = *v75;
                    v13 = v75;
LABEL_120:
                    v20 = badcookie;
                    if ( v18 )
                    {
                      while ( 1 )
                      {
                        while ( v18 == 32 || v18 == 9 )
                        {
                          v18 = *++v13;
                          if ( !v18 )
                            goto LABEL_12;
                        }
                        v20 = badcookie;
                        if ( v18 != 59 )
                          break;
                        do
                        {
                          v18 = *++v13;
                          if ( !v18 )
                            goto LABEL_88;
LABEL_6:
                          ;
                        }
                        while ( v18 == 32 || v18 == 9 );
                        v19 = strcspn(v13, ";\t\r\n=");
                        if ( v19 )
                          goto LABEL_89;
                      }
                    }
                    goto LABEL_13;
                  }
                }
                if ( !v17->name )
                  goto LABEL_164;
                goto LABEL_115;
              }
LABEL_102:
              if ( !v17->name )
                goto LABEL_164;
              goto LABEL_103;
            }
          }
        }
        else
        {
          v80 = (void (*)(Cookie *))httpheader;
          if ( v19 < 0xFFF )
          {
            v73 += v74;
LABEL_112:
            if ( v19 >= 7 )
              goto LABEL_113;
            goto LABEL_102;
          }
        }
      }
      else
      {
        v75 = (char *)v69;
        if ( v70 < 0xFFF )
        {
          v73 = 0;
          v80 = 0;
          v72 = 0;
          goto LABEL_112;
        }
        v72 = 0;
      }
      v78 = freecookie;
      goto LABEL_142;
    }
LABEL_243:
    Curl_cfree(v17);
    goto LABEL_49;
  }
  tok_buf = 0;
  if ( !strncmp(lineptr, "#HttpOnly_", 0xAu) )
  {
    v13 = (char *)(lineptr + 10);
    v17->httponly = 1;
  }
  if ( *v13 == 35 )
    goto LABEL_243;
  v43 = strchr(v13, 13);
  if ( v43 )
    *v43 = 0;
  v44 = strchr(v13, 10);
  if ( v44 )
    *v44 = 0;
  v45 = strtok_r(v13, "\t", &tok_buf);
  v46 = v45;
  if ( !v45 )
    goto LABEL_46;
  if ( *v45 == 46 )
    v46 = v45 + 1;
  v47 = Curl_cstrdup(v46);
  v17->domain = (char *)v47;
  v48 = v47;
  v49 = strtok_r(0u, "\t", &tok_buf);
  if ( !v49 )
  {
    httpheader = v48 == 0;
    v62 = 1;
    goto LABEL_249;
  }
  if ( !v48 )
    goto LABEL_46;
  v17->tailmatch = curl_strequal(v49, "TRUE") != 0;
  v50 = strtok_r(0u, "\t", &tok_buf);
  v51 = v50;
  if ( !v50 )
    goto LABEL_46;
  v52 = strcmp("TRUE", v50);
  v53 = (void (*)(Cookie *))Curl_cstrdup;
  if ( v52 && (v137 = (void (*)(Cookie *))Curl_cstrdup, v54 = strcmp("FALSE", v51), v53 = v137, v54) )
  {
    v55 = (const char *)((int (__fastcall *)(char *))v137)(v51);
    v17->path = (char *)v55;
    if ( !v55 )
      goto LABEL_197;
    v56 = sanitize_cookie_path(v55);
    v17->spath = v56;
    v137 = (void (*)(Cookie *))v56;
    v51 = strtok_r(0u, "\t", &tok_buf);
    if ( !v51 )
    {
      httpheader = v137 == 0;
      v62 = 3;
      goto LABEL_249;
    }
    if ( !v137 )
      goto LABEL_70;
  }
  else
  {
    v137 = freecookie;
    v57 = ((int (__fastcall *)(const char *))v53)("/");
    v58 = (int (__fastcall *)(const char *))Curl_cstrdup;
    v17->path = (char *)v57;
    v60 = v57;
    v59 = v58("/");
    v17->spath = (char *)v59;
    if ( v59 )
      httpheader = v60 == 0;
    else
      httpheader = 1;
  }
  v17->secure = 0;
  if ( !curl_strequal(v51, "TRUE") )
    goto LABEL_74;
  if ( !v143 && !ca->running )
  {
LABEL_197:
    strtok_r(0u, "\t", &tok_buf);
    freecookie(v17);
    goto LABEL_49;
  }
  v17->secure = 1;
LABEL_74:
  v61 = strtok_r(0u, "\t", &tok_buf);
  v62 = 4;
  if ( !v61 )
  {
LABEL_249:
    if ( httpheader )
      goto LABEL_46;
    if ( v62 != 7 )
    {
      freecookie(v17);
      goto LABEL_49;
    }
    goto LABEL_18;
  }
  if ( httpheader )
    goto LABEL_46;
  v63 = curlx_strtoofft(v61, 0, 10, &v17->expires);
  v64 = strtok_r(0u, "\t", &tok_buf);
  if ( !v64 )
  {
    httpheader = v63 != 0;
    v62 = 5;
    goto LABEL_249;
  }
  v21 = (void (*)(Cookie *))MEMORY[0xB3C0];
  if ( v63 )
    goto LABEL_47;
  v65 = Curl_cstrdup(v64);
  v17->name = (char *)v65;
  if ( v65 )
  {
    if ( curl_strnequal("__Secure-", v65, 9) )
    {
      v17->prefix |= 1u;
    }
    else if ( curl_strnequal("__Host-", v17->name, 7) )
    {
      v17->prefix |= 2u;
    }
    v66 = strtok_r(0u, "\t", &tok_buf);
    if ( v66 )
    {
      v67 = Curl_cstrdup(v66);
      v17->value = (char *)v67;
      v68 = v67;
      if ( strtok_r(0u, "\t", &tok_buf) )
      {
        if ( !v68 )
          goto LABEL_46;
        while ( strtok_r(0u, "\t", &tok_buf) )
          ;
        v21 = (void (*)(Cookie *))MEMORY[0xB3C0];
        goto LABEL_47;
      }
      httpheader = v68 == 0;
      v62 = 7;
      goto LABEL_249;
    }
  }
  else
  {
    strtok_r(0u, "\t", &tok_buf);
    httpheader = 1;
  }
  v118 = Curl_cstrdup(&_LC1);
  v17->value = (char *)v118;
  if ( !v118 )
    goto LABEL_46;
  if ( httpheader )
  {
LABEL_70:
    ((void (__fastcall *)(Cookie *))(MEMORY[0xB3C0] + (__int16)freecookie))(v17);
    goto LABEL_49;
  }
LABEL_18:
  prefix = v17->prefix;
  if ( (prefix & 1) != 0 )
  {
    v23 = prefix & 2;
    if ( !v17->secure )
      goto LABEL_46;
    v16 = v23 == 0;
    v24 = ca;
    if ( !v16 )
    {
LABEL_21:
      v25 = v17->path;
      v21 = (void (*)(Cookie *))MEMORY[0xB3C0];
      if ( !v25 )
        goto LABEL_47;
      v26 = (void (*)(Cookie *))(MEMORY[0xB3C0] + (__int16)freecookie);
      if ( *v25 != 47 )
        goto LABEL_48;
      if ( v25[1] )
        goto LABEL_46;
      v24 = ca;
      if ( v17->tailmatch )
        goto LABEL_46;
    }
  }
  else
  {
    v16 = (prefix & 2) == 0;
    v24 = ca;
    if ( !v16 )
    {
      if ( !v17->secure )
      {
        freecookie(v17);
        goto LABEL_49;
      }
      goto LABEL_21;
    }
  }
  running = v24->running;
  v28 = ca;
  if ( !running && v24->newsession )
  {
    v28 = ca;
    if ( !v17->expires )
      goto LABEL_46;
  }
  lastct = v28->lastct;
  v17->livecookie = running;
  v28->lastct = ++lastct;
  v17->creationtime = lastct;
  if ( !noexpire )
    remove_expired(v28);
  v30 = cookiehash(v17->domain);
  v31 = &ca->cookies[v30];
  v32 = *v31;
  if ( !*v31 )
  {
    if ( ca->running )
    {
      v34 = v17;
      if ( (*(_DWORD *)(&dataa->set.connect_only + 3) & 0x2000) != 0 )
      {
LABEL_235:
        livecookie = 0;
        v117 = "Added";
        goto LABEL_236;
      }
    }
    else
    {
      v34 = v17;
    }
    goto LABEL_263;
  }
  livecookie = 0;
  v34 = 0;
  v35 = 0;
  while ( 1 )
  {
    if ( !curl_strequal(v32->name, v17->name) )
      goto LABEL_182;
    v36 = v32->domain;
    v37 = v17->domain;
    if ( v36 )
    {
      if ( !v37 || !curl_strequal(v36, v37) )
        goto LABEL_182;
    }
    else if ( v37 )
    {
      goto LABEL_182;
    }
    spath = v32->spath;
    if ( spath )
    {
      v137 = (void (*)(Cookie *))v17->spath;
      if ( v137 )
      {
        if ( v32->secure && !v17->secure && !v143 )
        {
          v39 = strchr(spath + 1, 47);
          v40 = v137;
          if ( v39 )
          {
            v41 = v39 - spath;
          }
          else
          {
            v41 = strlen(spath);
            v40 = v137;
          }
          if ( curl_strnequal(spath, v40, v41) )
          {
            v21 = (void (*)(Cookie *))MEMORY[0xB3C0];
            if ( (*(_DWORD *)(&dataa->set.connect_only + 3) & 0x2000) == 0 )
              goto LABEL_47;
            Curl_infof(
              dataa,
              "cookie '%s' for domain '%s' dropped, would overlay an existing cookie",
              v17->name,
              v17->domain);
            goto LABEL_46;
          }
        }
      }
    }
LABEL_182:
    if ( v35 || !curl_strequal(v32->name, v17->name) )
      goto LABEL_183;
    v104 = v32->domain;
    v105 = v17->domain;
    if ( v104 )
    {
      if ( !v105 || !curl_strequal(v104, v105) || v32->tailmatch != v17->tailmatch )
      {
LABEL_203:
        if ( !livecookie )
          goto LABEL_213;
      }
      v106 = v32->spath;
      goto LABEL_205;
    }
    if ( v105 )
      goto LABEL_203;
    v106 = v32->spath;
LABEL_205:
    v107 = v17->spath;
    if ( v106 )
      break;
LABEL_209:
    if ( (v106 == 0) != (v107 == 0) )
      goto LABEL_213;
    livecookie = v17->livecookie;
    v34 = v32;
    if ( v17->livecookie )
    {
      v35 = v17;
    }
    else
    {
      v21 = (void (*)(Cookie *))MEMORY[0xB3C0];
      if ( v32->livecookie )
        goto LABEL_47;
      v35 = v17;
      livecookie = 1;
    }
LABEL_183:
    next = v32->next;
    if ( !v32->next )
      goto LABEL_214;
LABEL_184:
    v32 = next;
  }
  if ( v107 && curl_strequal(v106, v107) )
  {
    v106 = v32->spath;
    v107 = v17->spath;
    goto LABEL_209;
  }
LABEL_213:
  next = v32->next;
  livecookie = 0;
  if ( v32->next )
    goto LABEL_184;
LABEL_214:
  if ( v35 )
  {
    v108 = v34->next;
    v109 = v34->name;
    v110 = (void (__fastcall *)(char *))Curl_cfree;
    v35->creationtime = v34->creationtime;
    v35->next = v108;
    v110(v109);
    Curl_cfree(v34->value);
    Curl_cfree(v34->domain);
    Curl_cfree(v34->path);
    Curl_cfree(v34->spath);
    v111 = v35;
    v112 = v34;
    do
    {
      v113 = v111->next;
      v114 = v111->name;
      v115 = v111->value;
      v116 = v111->path;
      v111 = (Cookie *)((char *)v111 + 16);
      v112->next = v113;
      v112->name = v114;
      v112->value = v115;
      v112->path = v116;
      v112 = (Cookie *)((char *)v112 + 16);
    }
    while ( v111 != &v35[1] );
    Curl_cfree(v35);
  }
  else
  {
    v34 = v17;
  }
  if ( ca->running && (*(_DWORD *)(&dataa->set.connect_only + 3) & 0x2000) != 0 )
  {
    if ( !livecookie )
      goto LABEL_235;
    v117 = "Replaced";
LABEL_236:
    Curl_infof(
      dataa,
      "%s cookie %s=\"%s\" for domain %s, path %s, expire %lld",
      v117,
      v34->name,
      v34->value,
      v34->domain,
      v34->path,
      v34->expires);
    if ( !livecookie )
    {
      if ( v32 )
      {
LABEL_238:
        v32->next = v34;
        goto LABEL_239;
      }
LABEL_263:
      *v31 = v34;
LABEL_239:
      ++ca->numcookies;
    }
  }
  else if ( !livecookie )
  {
    goto LABEL_238;
  }
  HIDWORD(v119) = v34->expires;
  LODWORD(v119) = HIDWORD(v34->expires);
  if ( v119 && __SPAIR64__(v119, HIDWORD(v119)) < ca->next_expiration )
  {
    v120 = ca;
    LODWORD(ca->next_expiration) = HIDWORD(v119);
    HIDWORD(v120->next_expiration) = v119;
  }
LABEL_50:
  if ( v151 != *v140 )
    _stack_chk_fail();
  return v34;
}
