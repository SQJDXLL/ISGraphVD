CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  FILE *v8; // r0
  char *v9; // r4
  int v11; // r0
  int v12; // r0
  int v13; // r5
  FILE *v14; // r0
  stat sb; // [sp+0h] [bp-100h] BYREF
  stat nsb; // [sp+68h] [bp-98h] BYREF
  unsigned __int8 randsuffix[9]; // [sp+D0h] [bp-30h] BYREF

  *tempname = 0;
  if ( stat64(filename, &sb, fh, 0) != -1 && (sb.st_mode & 0xF000) == 0x8000 )
  {
    data = (Curl_easy *)Curl_rand_hex(data, randsuffix, 9);
    if ( data )
    {
      v9 = 0;
    }
    else
    {
      v11 = curl_maprintf("%s.%s.tmp", filename, (const char *)randsuffix);
      v9 = (char *)v11;
      if ( !v11 )
      {
        data = (Curl_easy *)(&loc_18 + 3);
        goto LABEL_18;
      }
      v12 = open64(v11, 193, 384);
      v13 = v12;
      if ( v12 == -1 )
        goto LABEL_19;
      if ( fstat64(v12, &nsb) == -1
        || nsb.st_uid != sb.st_uid
        || nsb.st_gid != sb.st_gid
        || fchmod(v13, sb.st_mode) != -1 )
      {
        v14 = fdopen(v13, "w");
        *fh = v14;
        if ( v14 )
        {
          *tempname = v9;
          return (CURLcode)data;
        }
      }
      close(v13);
      unlink(v9);
      data = (Curl_easy *)(&loc_14 + 3);
    }
LABEL_18:
    Curl_cfree(v9);
    *tempname = 0;
    return (CURLcode)data;
  }
  v8 = (FILE *)fopen64(filename, "w");
  v9 = (char *)v8;
  if ( v8 )
    data = 0;
  *fh = v8;
  if ( !v8 )
  {
LABEL_19:
    data = (Curl_easy *)(&loc_14 + 3);
    goto LABEL_18;
  }
  return (CURLcode)data;
}
