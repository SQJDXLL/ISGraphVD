CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  int v8; // r3
  size_t v9; // r4
  int v10; // r2
  const char *v11; // r1
  const char *v12; // r5
  char *v13; // r4
  size_t v14; // r3
  FILE *v15; // r0
  int v16; // r0
  CURLcode v17; // r10
  int v18; // r0
  int v19; // r0
  int v20; // r10
  FILE *v21; // r0
  stat sb; // [sp+8h] [bp-68h] BYREF
  stat nsb; // [sp+70h] [bp+0h] BYREF
  unsigned __int8 randbuf[41]; // [sp+D8h] [bp+68h] BYREF

  *tempname = 0;
  Curl_dyn_init(&nsb, 8000000, &curl_maprintf + 8);
  v9 = strlen(filename);
  if ( !v9 )
  {
    v10 = 0;
    v11 = filename;
    goto LABEL_3;
  }
  while ( 1 )
  {
    v14 = v9--;
    if ( filename[v9] == 47 )
      break;
    if ( !v9 )
      goto LABEL_10;
  }
  do
  {
    v9 = v14;
    if ( !v14 )
      break;
    --v14;
  }
  while ( filename[v14] == 47 );
LABEL_10:
  if ( Curl_dyn_addn(&nsb, filename, v9, v14) )
    goto LABEL_4;
  if ( v9 )
  {
    v10 = 1;
    v11 = (const char *)&LC0;
LABEL_3:
    if ( Curl_dyn_addn(&nsb, v11, v10, v8) )
    {
LABEL_4:
      v12 = 0;
LABEL_5:
      v13 = (char *)v12;
      goto LABEL_30;
    }
  }
  v12 = (const char *)Curl_dyn_ptr(&nsb);
  if ( !v12 )
    goto LABEL_5;
  v15 = (FILE *)fopen64(filename, "w");
  v13 = (char *)v15;
  *fh = v15;
  if ( !v15 )
    goto LABEL_30;
  v16 = fileno(v15);
  if ( fstat64(v16, &sb) != -1 && (sb.st_mode & 0xF000) == 0x8000 )
  {
    fclose(*fh);
    v13 = 0;
    *fh = 0;
    v17 = Curl_rand_alnum(data);
    if ( v17 )
    {
LABEL_32:
      Curl_cfree(v13);
      Curl_cfree(v12);
      return v17;
    }
    v18 = curl_maprintf("%s%s.tmp", v12, (const char *)randbuf);
    v13 = (char *)v18;
    if ( !v18 )
    {
      v17 = CURLE_OUT_OF_MEMORY;
      goto LABEL_32;
    }
    v19 = open64(v18, 193, 384);
    v20 = v19;
    if ( v19 == -1 )
    {
LABEL_30:
      v17 = CURLE_WRITE_ERROR;
      goto LABEL_32;
    }
    if ( fstat64(v19, &nsb) != -1 && nsb.st_uid == sb.st_uid && nsb.st_gid == sb.st_gid && fchmod(v20, sb.st_mode) == -1
      || (v21 = fdopen(v20, "w"), (*fh = v21) == 0) )
    {
      close(v20);
      unlink(v13);
      goto LABEL_30;
    }
    Curl_cfree(v12);
    *tempname = v13;
  }
  else
  {
    Curl_cfree(v12);
  }
  return 0;
}
