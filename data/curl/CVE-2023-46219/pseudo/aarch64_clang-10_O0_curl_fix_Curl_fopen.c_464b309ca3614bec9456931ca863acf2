// local variable allocation has failed, the output may be wrong!
CURLcode __cdecl Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  int v4; // w0
  FILE *v5; // x0
  struct stat v7; // [xsp+10h] [xbp-170h] BYREF
  char *v8; // [xsp+90h] [xbp-F0h]
  int fd; // [xsp+9Ch] [xbp-E4h]
  struct stat buf; // [xsp+A0h] [xbp-E0h] BYREF
  const char *v11; // [xsp+120h] [xbp-60h]
  char v12[21]; // [xsp+12Bh] [xbp-55h] BYREF
  _BYTE randbuf_9[36]; // [xsp+154h] [xbp-2Ch] OVERLAPPED
  char **tempnamea; // [xsp+178h] [xbp-8h]

  *(_QWORD *)&randbuf_9[28] = data;
  *(_QWORD *)&randbuf_9[20] = filename;
  *(_QWORD *)&randbuf_9[12] = fh;
  *(_QWORD *)&randbuf_9[4] = tempname;
  *(_DWORD *)randbuf_9 = 23;
  v11 = 0LL;
  fd = -1;
  *tempname = 0LL;
  v8 = dirslash(*(const char **)&randbuf_9[20]);
  if ( v8 )
  {
    **(_QWORD **)&randbuf_9[12] = fopen(*(const char **)&randbuf_9[20], "w");
    if ( **(_QWORD **)&randbuf_9[12] )
    {
      v4 = fileno(**(FILE ***)&randbuf_9[12]);
      if ( fstat(v4, &buf) == -1 || (buf.st_mode & 0xF000) != 0x8000 )
      {
        Curl_cfree(v8);
        HIDWORD(tempnamea) = 0;
        return HIDWORD(tempnamea);
      }
      fclose(**(FILE ***)&randbuf_9[12]);
      **(_QWORD **)&randbuf_9[12] = 0LL;
      *(_DWORD *)randbuf_9 = Curl_rand_alnum(*(_QWORD *)&randbuf_9[28], v12, 41LL);
      if ( !*(_DWORD *)randbuf_9 )
      {
        v11 = (const char *)curl_maprintf("%s%s.tmp", v8, v12);
        if ( v11 )
        {
          *(_DWORD *)randbuf_9 = 23;
          fd = open(v11, 193, 384LL);
          if ( fd != -1
            && (fstat(fd, &v7) == -1
             || v7.st_uid != buf.st_uid
             || v7.st_gid != buf.st_gid
             || fchmod(fd, buf.st_mode) != -1) )
          {
            v5 = fdopen(fd, "w");
            **(_QWORD **)&randbuf_9[12] = v5;
            if ( **(_QWORD **)&randbuf_9[12] )
            {
              Curl_cfree(v8);
              **(_QWORD **)&randbuf_9[4] = v11;
              HIDWORD(tempnamea) = 0;
              return HIDWORD(tempnamea);
            }
          }
        }
        else
        {
          *(_DWORD *)randbuf_9 = 27;
        }
      }
    }
  }
  if ( fd != -1 )
  {
    close(fd);
    unlink(v11);
  }
  Curl_cfree(v11);
  Curl_cfree(v8);
  HIDWORD(tempnamea) = *(_DWORD *)randbuf_9;
  return HIDWORD(tempnamea);
}
