CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  size_t v8; // r0
  size_t v9; // r2
  const char *v10; // r3
  const char *v11; // r10
  FILE *v12; // r0
  char *v13; // r4
  int v14; // r0
  CURLcode v15; // r8
  int v17; // t1
  size_t v18; // r0
  const char *v19; // r3
  int v20; // t1
  int v21; // r0
  int v22; // r0
  int v23; // r8
  FILE *v24; // r0
  stat sb; // [sp+0h] [bp-128h] BYREF
  stat nsb; // [sp+68h] [bp-C0h] BYREF
  unsigned __int8 randbuf[41]; // [sp+D0h] [bp-58h] BYREF

  *tempname = 0;
  Curl_dyn_init(&nsb, 8000000);
  v8 = strlen(filename);
  v9 = v8;
  if ( v8 )
  {
    v10 = &filename[v8];
    while ( 1 )
    {
      v17 = *(unsigned __int8 *)--v10;
      v18 = v9--;
      if ( v17 == 47 )
        break;
      if ( !v9 )
        goto LABEL_13;
    }
    v9 = v18;
LABEL_13:
    v19 = &filename[v9];
    while ( 1 )
    {
      if ( !v9 )
      {
        if ( !Curl_dyn_addn(&nsb, filename, 0) )
          goto LABEL_4;
        goto LABEL_18;
      }
      v20 = *(unsigned __int8 *)--v19;
      if ( v20 != 47 )
        break;
      --v9;
    }
    if ( !Curl_dyn_addn(&nsb, filename, v9) && !Curl_dyn_addn(&nsb, &LC0, 1) )
      goto LABEL_4;
    goto LABEL_18;
  }
  if ( Curl_dyn_addn(&nsb, filename, 0) )
  {
LABEL_18:
    v11 = 0;
    v13 = 0;
    v15 = CURLE_WRITE_ERROR;
LABEL_19:
    Curl_cfree(v13);
    Curl_cfree(v11);
    return v15;
  }
LABEL_4:
  v11 = (const char *)Curl_dyn_ptr(&nsb);
  if ( !v11 )
  {
    v13 = 0;
    v15 = CURLE_WRITE_ERROR;
    goto LABEL_19;
  }
  v12 = (FILE *)fopen64(filename, "w");
  v13 = (char *)v12;
  *fh = v12;
  if ( !v12 )
    goto LABEL_31;
  v14 = fileno(v12);
  if ( fstat64(v14, &sb) == -1 || (sb.st_mode & 0xF000) != 0x8000 )
  {
    Curl_cfree(v11);
    return 0;
  }
  fclose(*fh);
  v13 = 0;
  *fh = 0;
  v15 = Curl_rand_alnum(data, randbuf, 41);
  if ( v15 )
    goto LABEL_19;
  v21 = curl_maprintf("%s%s.tmp", v11, (const char *)randbuf);
  v13 = (char *)v21;
  if ( !v21 )
  {
    v15 = CURLE_OUT_OF_MEMORY;
    goto LABEL_19;
  }
  v22 = open64(v21, 193, 384);
  v23 = v22;
  if ( v22 == -1 )
  {
LABEL_31:
    v15 = CURLE_WRITE_ERROR;
    goto LABEL_19;
  }
  if ( fstat64(v22, &nsb) != -1 && nsb.st_uid == sb.st_uid && nsb.st_gid == sb.st_gid && fchmod(v23, sb.st_mode) == -1
    || (v24 = fdopen(v23, "w"), (*fh = v24) == 0) )
  {
    close(v23);
    unlink(v13);
    v15 = CURLE_WRITE_ERROR;
    goto LABEL_19;
  }
  Curl_cfree(v11);
  *tempname = v13;
  return 0;
}
