CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  FILE *v8; // x0
  char *v9; // x20
  CURLcode v10; // w23
  Curl_easy *v12; // x0
  const char *v13; // x0
  int v14; // w0
  int v15; // w19
  FILE *v16; // x0
  stat sb; // [xsp+48h] [xbp+48h] BYREF
  stat nsb; // [xsp+C8h] [xbp+C8h] BYREF
  unsigned __int8 randsuffix[9]; // [xsp+148h] [xbp+148h] BYREF

  *tempname = 0LL;
  if ( stat_0(filename, &sb) != -1 && (sb.st_mode & 0xF000) == 0x8000 )
  {
    v12 = data;
    v9 = 0LL;
    v10 = (unsigned int)Curl_rand_hex(v12, randsuffix, 9LL);
    if ( v10 == CURLE_OK )
    {
      v13 = (const char *)curl_maprintf("%s.%s.tmp", filename, (const char *)randsuffix);
      v9 = (char *)v13;
      if ( !v13 )
      {
        v10 = CURLE_OUT_OF_MEMORY;
        goto LABEL_14;
      }
      v14 = open(v13, 193, 384LL);
      v15 = v14;
      if ( v14 == -1 )
        goto LABEL_15;
      if ( fstat(v14, &nsb) == -1 || *(_QWORD *)&nsb.st_uid != *(_QWORD *)&sb.st_uid || fchmod(v15, sb.st_mode) != -1 )
      {
        v16 = fdopen(v15, "w");
        *fh = v16;
        if ( v16 )
        {
          *tempname = v9;
          return v10;
        }
      }
      close(v15);
      v10 = CURLE_WRITE_ERROR;
      unlink(v9);
    }
LABEL_14:
    Curl_cfree(v9);
    *tempname = 0LL;
    return v10;
  }
  v8 = fopen(filename, "w");
  *fh = v8;
  v9 = (char *)v8;
  v10 = CURLE_OK;
  if ( !v8 )
  {
LABEL_15:
    v10 = CURLE_WRITE_ERROR;
    goto LABEL_14;
  }
  return v10;
}
