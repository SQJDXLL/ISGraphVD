int __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  FILE *v8; // $s0
  int v9; // $s1
  int v10; // $v0
  int v11; // $v0
  int v12; // $v0
  int v13; // $a0
  CURLcode (*v14)(Curl_easy *, const char *, FILE **, char **); // $a1
  int v15; // $v0
  FILE *v16; // $v0
  int fd; // [sp+1Ch] [-158h]
  int fda; // [sp+1Ch] [-158h]
  stat sb; // [sp+20h] [-154h] BYREF
  stat nsb; // [sp+C0h] [-B4h] BYREF
  unsigned __int8 randsuffix[9]; // [sp+160h] [-14h] BYREF

  *tempname = 0;
  if ( stat64(filename, &sb) == -1 || (sb.st_mode & 0xF000) != 0x8000 )
  {
    v8 = (FILE *)fopen64(filename, &_LC0);
    *fh = v8;
    v9 = 0;
    if ( v8 )
      return v9;
    goto LABEL_4;
  }
  v9 = Curl_rand_hex(data, randsuffix, 9);
  v8 = 0;
  if ( v9 )
    goto LABEL_17;
  v10 = curl_maprintf("%s.%s.tmp", filename, randsuffix);
  v8 = (FILE *)v10;
  if ( !v10 )
  {
    v9 = 27;
    goto LABEL_17;
  }
  v11 = open64(v10, 1281, 384);
  if ( v11 != -1 )
  {
    fd = v11;
    v12 = fstat64(v11, &nsb);
    v13 = fd;
    if ( v12 != -1 )
    {
      v14 = (CURLcode (*)(Curl_easy *, const char *, FILE **, char **))MEMORY[0x8298];
      if ( nsb.st_uid != sb.st_uid || nsb.st_gid != sb.st_gid )
      {
LABEL_13:
        fda = v13;
        v16 = fdopen(v13, (const char *)v14 + (__int16)&_LC0);
        *fh = v16;
        v13 = fda;
        if ( v16 )
        {
          *tempname = (char *)v8;
          return v9;
        }
        goto LABEL_18;
      }
      v15 = fchmod(fd, sb.st_mode);
      v13 = fd;
      if ( v15 == -1 )
      {
LABEL_18:
        v9 = 23;
        close(v13);
        unlink((const char *)v8);
        goto LABEL_17;
      }
    }
    v14 = Curl_fopen;
    goto LABEL_13;
  }
LABEL_4:
  v9 = 23;
LABEL_17:
  Curl_cfree(v8);
  *tempname = 0;
  return v9;
}
