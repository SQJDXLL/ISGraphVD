CURLcode __cdecl Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  FILE *name; // ebp
  int v6; // eax
  int v7; // eax
  int v8; // edx
  int v9; // eax
  int v10; // edx
  FILE *v11; // eax
  int v12; // eax
  CURLcode v13; // [esp+18h] [ebp-F4h]
  int fd; // [esp+1Ch] [ebp-F0h]
  int fda; // [esp+1Ch] [ebp-F0h]
  stat sb; // [esp+20h] [ebp-ECh] BYREF
  stat nsb; // [esp+80h] [ebp-8Ch] BYREF
  unsigned __int8 randsuffix[9]; // [esp+E3h] [ebp-29h] BYREF
  unsigned int v19; // [esp+ECh] [ebp-20h]

  v19 = __readgsdword(0x14u);
  *tempname = 0;
  if ( stat64(filename, &sb) == -1 || (sb.st_mode & 0xF000) != 0x8000 )
  {
    name = (FILE *)fopen64(filename, "w");
    *fh = name;
    if ( name )
      return 0;
LABEL_16:
    v6 = 23;
    goto LABEL_15;
  }
  name = 0;
  v6 = Curl_rand_hex(data, randsuffix, 9);
  if ( !v6 )
  {
    v7 = curl_maprintf("%s.%s.tmp", filename, randsuffix);
    name = (FILE *)v7;
    if ( !v7 )
    {
      v6 = 27;
      goto LABEL_15;
    }
    v8 = open64(v7, 193, 384);
    if ( v8 == -1 )
      goto LABEL_16;
    fd = v8;
    v9 = fstat64(v8, &nsb);
    v10 = fd;
    if ( v9 == -1
      || nsb.st_uid != sb.st_uid
      || nsb.st_gid != sb.st_gid
      || (v12 = fchmod(fd, sb.st_mode), v10 = fd, v12 != -1) )
    {
      fda = v10;
      v11 = fdopen(v10, "w");
      v10 = fda;
      *fh = v11;
      if ( v11 )
      {
        *tempname = (char *)name;
        return 0;
      }
    }
    close(v10);
    unlink((const char *)name);
    v6 = 23;
  }
LABEL_15:
  v13 = v6;
  Curl_cfree(name);
  *tempname = 0;
  return v13;
}
