CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  size_t v8; // x0
  size_t v9; // x2
  size_t v10; // x0
  const char *v11; // x20
  char *v12; // x19
  CURLcode v13; // w23
  FILE *v15; // x0
  int v16; // w0
  size_t i; // x2
  const char *v18; // x0
  int v19; // w0
  int v20; // w23
  FILE *v21; // x0
  char v22[32]; // [xsp+58h] [xbp+58h] BYREF
  stat sb; // [xsp+78h] [xbp+78h] BYREF
  stat nsb; // [xsp+F8h] [xbp+F8h] BYREF
  unsigned __int8 randbuf[41]; // [xsp+178h] [xbp+178h] BYREF

  *tempname = 0LL;
  Curl_dyn_init(v22, 8000000LL, fh, &_stack_chk_guard, 0LL);
  v8 = strlen(filename);
  if ( v8 )
  {
    v9 = v8;
    while ( 1 )
    {
      v10 = v9--;
      if ( filename[v9] == 47 )
        break;
      if ( !v9 )
        goto LABEL_5;
    }
    for ( i = v10; i; --i )
    {
      if ( filename[i - 1] != 47 )
      {
        if ( !(unsigned int)Curl_dyn_addn(v22, filename, i) && !(unsigned int)Curl_dyn_addn(v22, &unk_2E8, 1LL) )
          goto LABEL_10;
        goto LABEL_6;
      }
    }
LABEL_5:
    if ( (unsigned int)Curl_dyn_addn(v22, filename, 0LL) )
      goto LABEL_6;
  }
  else if ( (unsigned int)Curl_dyn_addn(v22, filename, 0LL) )
  {
LABEL_6:
    v11 = 0LL;
    v12 = 0LL;
    v13 = CURLE_WRITE_ERROR;
    goto LABEL_7;
  }
LABEL_10:
  v11 = (const char *)Curl_dyn_ptr(v22);
  if ( v11 )
  {
    v15 = fopen(filename, "w");
    *fh = v15;
    v12 = (char *)v15;
    if ( v15 )
    {
      v16 = fileno(v15);
      if ( fstat(v16, &sb) == -1 || (sb.st_mode & 0xF000) != 0x8000 )
      {
        v13 = CURLE_OK;
        Curl_cfree(v11);
        return v13;
      }
      v12 = 0LL;
      fclose(*fh);
      *fh = 0LL;
      v13 = (unsigned int)Curl_rand_alnum(data, randbuf, 41LL);
      if ( v13 == CURLE_OK )
      {
        v18 = (const char *)curl_maprintf("%s%s.tmp", v11, (const char *)randbuf);
        v12 = (char *)v18;
        if ( v18 )
        {
          v19 = open(v18, 193, 384LL);
          v20 = v19;
          if ( v19 == -1 )
          {
            v13 = CURLE_WRITE_ERROR;
          }
          else
          {
            if ( fstat(v19, &nsb) == -1
              || *(_QWORD *)&nsb.st_uid != *(_QWORD *)&sb.st_uid
              || fchmod(v20, sb.st_mode) != -1 )
            {
              v21 = fdopen(v20, "w");
              *fh = v21;
              if ( v21 )
              {
                v13 = CURLE_OK;
                Curl_cfree(v11);
                *tempname = v12;
                return v13;
              }
            }
            close(v20);
            v13 = CURLE_WRITE_ERROR;
            unlink(v12);
          }
        }
        else
        {
          v13 = CURLE_OUT_OF_MEMORY;
        }
      }
    }
    else
    {
      v13 = CURLE_WRITE_ERROR;
    }
  }
  else
  {
    v12 = 0LL;
    v13 = CURLE_WRITE_ERROR;
  }
LABEL_7:
  Curl_cfree(v12);
  Curl_cfree(v11);
  return v13;
}
