CURLcode __cdecl Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  size_t v4; // eax
  size_t v5; // eax
  size_t v6; // ecx
  size_t v7; // edi
  CURLcode v9; // ebp
  char *v10; // eax
  int v11; // edi
  FILE *v13; // eax
  int v14; // eax
  __mode_t mode; // esi
  int v16; // eax
  int v17; // eax
  int v18; // eax
  int v19; // esi
  FILE *v20; // eax
  int v21; // [esp+14h] [ebp-108h]
  char *name; // [esp+18h] [ebp-104h]
  char v23[16]; // [esp+20h] [ebp-FCh] BYREF
  __mode_t v24; // [esp+30h] [ebp-ECh]
  int v25; // [esp+38h] [ebp-E4h]
  int v26; // [esp+3Ch] [ebp-E0h]
  char v27[24]; // [esp+80h] [ebp-9Ch] BYREF
  int v28; // [esp+98h] [ebp-84h]
  int v29; // [esp+9Ch] [ebp-80h]
  char v30[57]; // [esp+E3h] [ebp-39h] BYREF

  *tempname = 0;
  Curl_dyn_init(v23, 8000000);
  v4 = strlen(filename);
  if ( v4 )
  {
    v5 = v4 + 1;
    do
    {
      v6 = v5;
      if ( v5 == 1 )
        break;
      --v5;
    }
    while ( filename[v6 - 2] != 47 );
    while ( v6 != 1 )
    {
      v7 = v6 - 1;
      if ( filename[v6-- - 2] != 47 )
        goto LABEL_9;
    }
  }
  v7 = 0;
LABEL_9:
  if ( !Curl_dyn_addn(v23, filename, v7) && (!v7 || !Curl_dyn_addn(v23, "/", 1)) )
  {
    v11 = Curl_dyn_ptr(v23);
    v10 = 0;
    if ( !v11 )
    {
      v11 = 0;
      v9 = CURLE_WRITE_ERROR;
      goto LABEL_11;
    }
    v13 = (FILE *)fopen64(filename, "w");
    *fh = v13;
    if ( !v13 )
    {
      v9 = CURLE_WRITE_ERROR;
      v10 = 0;
      goto LABEL_11;
    }
    v14 = fileno(v13);
    if ( fstat64(v14, v23) != -1 )
    {
      mode = v24;
      if ( (v24 & 0xF000) == 0x8000 )
      {
        fclose(*fh);
        *fh = 0;
        v16 = Curl_rand_alnum(data, v30, 41);
        if ( v16 )
        {
          v9 = v16;
          v10 = 0;
          goto LABEL_11;
        }
        v17 = curl_maprintf("%s%s.tmp", v11, v30);
        if ( !v17 )
        {
          v9 = CURLE_OUT_OF_MEMORY;
          v10 = 0;
          goto LABEL_11;
        }
        name = (char *)v17;
        v18 = open64(v17, 193, 384);
        if ( v18 == -1 )
        {
          v9 = CURLE_WRITE_ERROR;
          v10 = name;
          goto LABEL_11;
        }
        v21 = v18;
        v9 = CURLE_WRITE_ERROR;
        if ( fstat64(v18, v27) != -1 && v28 == v25 && v29 == v26 && fchmod(v21, mode) == -1 )
        {
          v19 = v21;
        }
        else
        {
          v19 = v21;
          v20 = fdopen(v21, "w");
          *fh = v20;
          if ( v20 )
          {
            Curl_cfree(v11);
            *tempname = name;
            return 0;
          }
        }
        close(v19);
        unlink(name);
        v10 = name;
        goto LABEL_11;
      }
    }
    Curl_cfree(v11);
    return 0;
  }
  v9 = CURLE_WRITE_ERROR;
  v10 = 0;
  v11 = 0;
LABEL_11:
  Curl_cfree(v10);
  Curl_cfree(v11);
  return v9;
}
