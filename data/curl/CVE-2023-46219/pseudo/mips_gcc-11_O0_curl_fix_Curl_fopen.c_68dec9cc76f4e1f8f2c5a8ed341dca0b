CURLcode __cdecl Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  int v4; // $v0
  int v6; // $v0
  int v7; // $v0
  int result; // [sp+28h] [+28h]
  char *tempstore; // [sp+2Ch] [+2Ch]
  int fd; // [sp+30h] [+30h]
  char *dir; // [sp+34h] [+34h]
  stat sb; // [sp+38h] [+38h] BYREF
  stat nsb; // [sp+D8h] [+D8h] BYREF
  unsigned __int8 randbuf[41]; // [sp+178h] [+178h] BYREF

  result = 23;
  tempstore = 0;
  fd = -1;
  *tempname = 0;
  dir = dirslash(filename);
  if ( dir )
  {
    *fh = (FILE *)fopen64(filename, &unk_9F4);
    if ( *fh )
    {
      v4 = fileno(*fh);
      if ( fstat64(v4, &sb) == -1 || (sb.st_mode & 0xF000) != 0x8000 )
      {
        Curl_cfree(dir);
        return 0;
      }
      fclose(*fh);
      *fh = 0;
      result = Curl_rand_alnum(data, randbuf, 41);
      if ( !result )
      {
        v6 = curl_maprintf("%s%s.tmp", dir, randbuf);
        tempstore = (char *)v6;
        if ( v6 )
        {
          result = 23;
          v7 = open64(v6, 1281, 384);
          fd = v7;
          if ( v7 != -1
            && (fstat64(v7, &nsb) == -1
             || nsb.st_uid != sb.st_uid
             || nsb.st_gid != sb.st_gid
             || fchmod(fd, sb.st_mode) != -1) )
          {
            *fh = (FILE *)fdopen(fd, &unk_9F4);
            if ( *fh )
            {
              Curl_cfree(dir);
              *tempname = tempstore;
              return 0;
            }
          }
        }
        else
        {
          result = 27;
        }
      }
    }
  }
  if ( fd != -1 )
  {
    close(fd);
    unlink(tempstore);
  }
  Curl_cfree(tempstore);
  Curl_cfree(dir);
  return result;
}
