CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  size_t v6; // rax
  size_t v7; // rcx
  size_t v8; // rax
  size_t v9; // rbx
  __int64 v11; // rcx
  CURLcode v12; // r13d
  char *v13; // rbp
  const char *v14; // r14
  FILE **v16; // rbx
  __int64 v17; // rax
  FILE *v18; // rax
  int v19; // eax
  CURLcode v20; // eax
  const char *v21; // rax
  int v22; // eax
  int v23; // r12d
  FILE *v24; // rax
  __mode_t mode; // [rsp+Ch] [rbp-18Ch]
  struct stat buf; // [rsp+10h] [rbp-188h] BYREF
  char v27[56]; // [rsp+A0h] [rbp-F8h] BYREF
  struct stat v28; // [rsp+D8h] [rbp-C0h] BYREF

  *tempname = 0LL;
  Curl_dyn_init(&buf, 8000000LL);
  v6 = strlen(filename);
  if ( v6 )
  {
    v8 = v6 + 1;
    do
    {
      v7 = v8;
      if ( v8 == 1 )
        break;
      --v8;
    }
    while ( filename[v7 - 2] != 47 );
    while ( v7 != 1 )
    {
      v9 = v7 - 1;
      if ( filename[v7-- - 2] != 47 )
        goto LABEL_9;
    }
  }
  v9 = 0LL;
LABEL_9:
  if ( (unsigned int)Curl_dyn_addn(&buf, filename, v9, v7) || v9 && (unsigned int)Curl_dyn_addn(&buf, "/", 1LL, v11) )
  {
    v12 = CURLE_WRITE_ERROR;
LABEL_11:
    v13 = 0LL;
    v14 = 0LL;
    goto LABEL_12;
  }
  v16 = fh;
  v17 = Curl_dyn_ptr(&buf);
  v12 = CURLE_WRITE_ERROR;
  if ( !v17 )
    goto LABEL_11;
  v14 = (const char *)v17;
  v18 = fopen(filename, "w");
  *v16 = v18;
  if ( v18 )
  {
    v19 = fileno(v18);
    if ( fstat(v19, &buf) == -1 || (buf.st_mode & 0xF000) != 0x8000 )
    {
      Curl_cfree(v14);
      return 0;
    }
    mode = buf.st_mode;
    fclose(*v16);
    *v16 = 0LL;
    v20 = (unsigned int)Curl_rand_alnum(data, v27, 41LL);
    if ( v20 )
    {
      v13 = 0LL;
      v12 = v20;
    }
    else
    {
      v21 = (const char *)curl_maprintf("%s%s.tmp", v14, v27);
      if ( v21 )
      {
        v13 = (char *)v21;
        v22 = open(v21, 193, 384LL);
        if ( v22 != -1 )
        {
          v23 = v22;
          if ( fstat(v22, &v28) == -1 || v28.st_uid != buf.st_uid || v28.st_gid != buf.st_gid || fchmod(v23, mode) != -1 )
          {
            v24 = fdopen(v23, "w");
            *v16 = v24;
            if ( v24 )
            {
              Curl_cfree(v14);
              *tempname = v13;
              return 0;
            }
          }
          close(v23);
          unlink(v13);
        }
      }
      else
      {
        v12 = CURLE_OUT_OF_MEMORY;
        v13 = 0LL;
      }
    }
  }
  else
  {
    v13 = 0LL;
  }
LABEL_12:
  Curl_cfree(v13);
  Curl_cfree(v14);
  return v12;
}
