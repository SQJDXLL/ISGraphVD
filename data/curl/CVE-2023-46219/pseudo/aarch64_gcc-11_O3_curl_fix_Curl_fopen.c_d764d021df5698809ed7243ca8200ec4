CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  size_t v8; // x0
  const char *v9; // x23
  FILE *v10; // x0
  char *v11; // x19
  int v12; // w0
  CURLcode v13; // w22
  size_t v15; // x4
  size_t v16; // x2
  const char *v17; // x0
  int v18; // w0
  int v19; // w25
  FILE *v20; // x0
  char v21[32]; // [xsp+58h] [xbp+58h] BYREF
  stat sb; // [xsp+78h] [xbp+78h] BYREF
  stat nsb; // [xsp+F8h] [xbp+F8h] BYREF
  unsigned __int8 randbuf[41]; // [xsp+178h] [xbp+178h] BYREF

  *tempname = 0LL;
  Curl_dyn_init(v21, 8000000LL, fh, 0LL);
  v8 = strlen(filename);
  if ( v8 )
  {
    while ( 1 )
    {
      v15 = v8--;
      if ( filename[v8] == 47 )
        break;
      if ( !v8 )
      {
LABEL_11:
        if ( !(unsigned int)Curl_dyn_addn(v21, filename, 0LL) )
          goto LABEL_3;
        goto LABEL_12;
      }
    }
    while ( 1 )
    {
      v16 = v15--;
      if ( filename[v15] != 47 )
        break;
      if ( !v15 )
        goto LABEL_11;
    }
    if ( !(unsigned int)Curl_dyn_addn(v21, filename, v16) && !(unsigned int)Curl_dyn_addn(v21, &unk_2D8, 1LL) )
      goto LABEL_3;
    goto LABEL_12;
  }
  if ( (unsigned int)Curl_dyn_addn(v21, filename, 0LL) )
  {
LABEL_12:
    v9 = 0LL;
    v11 = 0LL;
    v13 = CURLE_WRITE_ERROR;
LABEL_13:
    Curl_cfree(v11);
    Curl_cfree(v9);
    return v13;
  }
LABEL_3:
  v9 = (const char *)Curl_dyn_ptr(v21);
  if ( !v9 )
  {
    v11 = 0LL;
    v13 = CURLE_WRITE_ERROR;
    goto LABEL_13;
  }
  v10 = fopen(filename, "w");
  *fh = v10;
  v11 = (char *)v10;
  if ( !v10 )
  {
    v13 = CURLE_WRITE_ERROR;
    goto LABEL_13;
  }
  v12 = fileno(v10);
  if ( fstat(v12, &sb) != -1 && (sb.st_mode & 0xF000) == 0x8000 )
  {
    v11 = 0LL;
    fclose(*fh);
    *fh = 0LL;
    v13 = (unsigned int)Curl_rand_alnum(data, randbuf, 41LL);
    if ( v13 == CURLE_OK )
    {
      v17 = (const char *)curl_maprintf("%s%s.tmp", v9, (const char *)randbuf);
      v11 = (char *)v17;
      if ( v17 )
      {
        v18 = open(v17, 193, 384LL);
        v19 = v18;
        if ( v18 == -1 )
        {
          v13 = CURLE_WRITE_ERROR;
        }
        else
        {
          if ( fstat(v18, &nsb) == -1
            || *(_QWORD *)&nsb.st_uid != *(_QWORD *)&sb.st_uid
            || fchmod(v19, sb.st_mode) != -1 )
          {
            v20 = fdopen(v19, "w");
            *fh = v20;
            if ( v20 )
            {
              Curl_cfree(v9);
              *tempname = v11;
              return v13;
            }
          }
          close(v19);
          v13 = CURLE_WRITE_ERROR;
          unlink(v11);
        }
      }
      else
      {
        v13 = CURLE_OUT_OF_MEMORY;
      }
    }
    goto LABEL_13;
  }
  v13 = CURLE_OK;
  Curl_cfree(v9);
  return v13;
}
