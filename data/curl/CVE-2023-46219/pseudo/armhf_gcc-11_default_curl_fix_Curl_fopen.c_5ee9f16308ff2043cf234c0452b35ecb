CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  size_t v8; // r0
  const char *v9; // r3
  const char *v10; // r10
  FILE *v11; // r0
  char *v12; // r4
  int v13; // r0
  CURLcode v14; // r8
  int v16; // t1
  size_t v17; // r12
  const char *v18; // r3
  int v19; // t1
  size_t v20; // r2
  int v21; // r0
  int v22; // r0
  int v23; // r11
  FILE *v24; // r0
  stat sb; // [sp+0h] [bp-128h] BYREF
  stat nsb; // [sp+68h] [bp-C0h] BYREF
  unsigned __int8 randbuf[41]; // [sp+D0h] [bp-58h] BYREF

  *tempname = 0;
  Curl_dyn_init(&nsb, 8000000);
  v8 = strlen(filename);
  if ( v8 )
  {
    v9 = &filename[v8];
    while ( 1 )
    {
      v16 = *(unsigned __int8 *)--v9;
      v17 = v8--;
      if ( v16 == 47 )
        break;
      if ( !v8 )
      {
LABEL_12:
        if ( !Curl_dyn_addn(&nsb, filename, 0) )
          goto LABEL_4;
        goto LABEL_13;
      }
    }
    v18 = &filename[v17];
    while ( 1 )
    {
      v19 = *(unsigned __int8 *)--v18;
      v20 = v17--;
      if ( v19 != 47 )
        break;
      if ( !v17 )
        goto LABEL_12;
    }
    if ( !Curl_dyn_addn(&nsb, filename, v20) && !Curl_dyn_addn(&nsb, &LC0, 1) )
      goto LABEL_4;
    goto LABEL_13;
  }
  if ( Curl_dyn_addn(&nsb, filename, 0) )
  {
LABEL_13:
    v10 = 0;
    v12 = 0;
    v14 = CURLE_WRITE_ERROR;
LABEL_14:
    Curl_cfree(v12);
    Curl_cfree(v10);
    return v14;
  }
LABEL_4:
  v10 = (const char *)Curl_dyn_ptr(&nsb);
  if ( !v10 )
  {
    v12 = 0;
    v14 = CURLE_WRITE_ERROR;
    goto LABEL_14;
  }
  v11 = (FILE *)fopen64(filename, "w");
  v12 = (char *)v11;
  *fh = v11;
  if ( !v11 )
  {
LABEL_29:
    v14 = CURLE_WRITE_ERROR;
    goto LABEL_14;
  }
  v13 = fileno(v11);
  if ( fstat64(v13, &sb) != -1 && (sb.st_mode & 0xF000) == 0x8000 )
  {
    fclose(*fh);
    v12 = 0;
    *fh = 0;
    v14 = Curl_rand_alnum(data, randbuf, 41);
    if ( v14 )
      goto LABEL_14;
    v21 = curl_maprintf("%s%s.tmp", v10, (const char *)randbuf);
    v12 = (char *)v21;
    if ( !v21 )
    {
      v14 = CURLE_OUT_OF_MEMORY;
      goto LABEL_14;
    }
    v22 = open64(v21, 193, 384);
    v23 = v22;
    if ( v22 != -1 )
    {
      if ( fstat64(v22, &nsb) == -1
        || nsb.st_uid != sb.st_uid
        || nsb.st_gid != sb.st_gid
        || fchmod(v23, sb.st_mode) != -1 )
      {
        v24 = fdopen(v23, "w");
        *fh = v24;
        if ( v24 )
        {
          Curl_cfree(v10);
          *tempname = v12;
          return v14;
        }
      }
      close(v23);
      unlink(v12);
      v14 = CURLE_WRITE_ERROR;
      goto LABEL_14;
    }
    goto LABEL_29;
  }
  v14 = CURLE_OK;
  Curl_cfree(v10);
  return v14;
}
