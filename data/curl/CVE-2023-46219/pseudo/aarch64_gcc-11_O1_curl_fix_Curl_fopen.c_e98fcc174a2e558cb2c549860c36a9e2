CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  size_t v8; // x2
  const char *v9; // x23
  FILE *v10; // x0
  char *v11; // x19
  int v12; // w0
  CURLcode v13; // w22
  size_t v15; // x0
  const char *v16; // x0
  int v17; // w0
  int v18; // w24
  FILE *v19; // x0
  char v20[32]; // [xsp+48h] [xbp+48h] BYREF
  stat sb; // [xsp+68h] [xbp+68h] BYREF
  stat nsb; // [xsp+E8h] [xbp+E8h] BYREF
  unsigned __int8 randbuf[41]; // [xsp+168h] [xbp+168h] BYREF

  *tempname = 0LL;
  Curl_dyn_init(v20, 8000000LL);
  v8 = strlen(filename);
  if ( v8 )
  {
    do
    {
      v15 = v8--;
      if ( filename[v8] == 47 )
      {
        v8 = v15;
        goto LABEL_14;
      }
    }
    while ( v8 );
    while ( 1 )
    {
LABEL_14:
      if ( !v8 )
      {
        if ( !(unsigned int)Curl_dyn_addn(v20, filename, 0LL) )
          goto LABEL_3;
        goto LABEL_33;
      }
      if ( filename[v8 - 1] != 47 )
        break;
      --v8;
    }
    if ( !(unsigned int)Curl_dyn_addn(v20, filename, v8) && !(unsigned int)Curl_dyn_addn(v20, &unk_2C0, 1LL) )
      goto LABEL_3;
    goto LABEL_33;
  }
  if ( (unsigned int)Curl_dyn_addn(v20, filename, 0LL) )
  {
LABEL_33:
    v9 = 0LL;
    v11 = 0LL;
    v13 = CURLE_WRITE_ERROR;
    goto LABEL_34;
  }
LABEL_3:
  v9 = (const char *)Curl_dyn_ptr(v20);
  if ( !v9 )
  {
    v11 = 0LL;
    v13 = CURLE_WRITE_ERROR;
    goto LABEL_34;
  }
  v10 = fopen(filename, "w");
  v11 = (char *)v10;
  *fh = v10;
  if ( !v10 )
  {
    v13 = CURLE_WRITE_ERROR;
    goto LABEL_34;
  }
  v12 = fileno(v10);
  if ( fstat(v12, &sb) != -1 && (sb.st_mode & 0xF000) == 0x8000 )
  {
    fclose(*fh);
    *fh = 0LL;
    v13 = (unsigned int)Curl_rand_alnum(data, randbuf, 41LL);
    v11 = 0LL;
    if ( v13 == CURLE_OK )
    {
      v16 = (const char *)curl_maprintf("%s%s.tmp", v9, (const char *)randbuf);
      v11 = (char *)v16;
      if ( v16 )
      {
        v17 = open(v16, 193, 384LL);
        v18 = v17;
        if ( v17 == -1 )
        {
          v13 = CURLE_WRITE_ERROR;
        }
        else
        {
          if ( fstat(v17, &nsb) == -1
            || *(_QWORD *)&nsb.st_uid != *(_QWORD *)&sb.st_uid
            || fchmod(v18, sb.st_mode) != -1 )
          {
            v19 = fdopen(v18, "w");
            *fh = v19;
            if ( v19 )
            {
              Curl_cfree(v9);
              *tempname = v11;
              return v13;
            }
          }
          close(v18);
          unlink(v11);
          v13 = CURLE_WRITE_ERROR;
        }
      }
      else
      {
        v13 = CURLE_OUT_OF_MEMORY;
      }
    }
LABEL_34:
    Curl_cfree(v11);
    Curl_cfree(v9);
    return v13;
  }
  Curl_cfree(v9);
  return 0;
}
