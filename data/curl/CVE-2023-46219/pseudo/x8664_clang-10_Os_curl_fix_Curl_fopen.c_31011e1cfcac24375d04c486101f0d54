CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  size_t v6; // rax
  size_t v7; // rax
  size_t v8; // rbx
  CURLcode v10; // r13d
  char *v11; // rbp
  const char *v12; // r14
  FILE **v14; // rbx
  __int64 v15; // rax
  FILE *v16; // rax
  int v17; // eax
  CURLcode v18; // eax
  const char *v19; // rax
  int v20; // eax
  int v21; // r12d
  FILE *v22; // rax
  __mode_t mode; // [rsp+Ch] [rbp-18Ch]
  struct stat buf; // [rsp+10h] [rbp-188h] BYREF
  char v25[56]; // [rsp+A0h] [rbp-F8h] BYREF
  struct stat v26; // [rsp+D8h] [rbp-C0h] BYREF

  *tempname = 0LL;
  Curl_dyn_init(&buf, 8000000LL);
  v6 = strlen(filename);
  if ( v6 )
  {
    v7 = v6 + 1;
    do
    {
      v8 = v7;
      if ( v7 == 1 )
        break;
      --v7;
    }
    while ( filename[v8 - 2] != 47 );
    while ( v8 != 1 )
    {
      if ( filename[v8-- - 2] != 47 )
        goto LABEL_9;
    }
  }
  v8 = 0LL;
LABEL_9:
  if ( (unsigned int)Curl_dyn_addn(&buf, filename, v8) || v8 && (unsigned int)Curl_dyn_addn(&buf, "/", 1LL) )
  {
    v10 = CURLE_WRITE_ERROR;
  }
  else
  {
    v14 = fh;
    v15 = Curl_dyn_ptr(&buf);
    v10 = CURLE_WRITE_ERROR;
    if ( v15 )
    {
      v12 = (const char *)v15;
      v16 = fopen(filename, "w");
      *v14 = v16;
      if ( v16 )
      {
        v17 = fileno(v16);
        if ( fstat(v17, &buf) == -1 || (buf.st_mode & 0xF000) != 0x8000 )
        {
          Curl_cfree(v12);
          return 0;
        }
        mode = buf.st_mode;
        fclose(*v14);
        *v14 = 0LL;
        v18 = (unsigned int)Curl_rand_alnum(data, v25, 41LL);
        if ( v18 )
        {
          v11 = 0LL;
          v10 = v18;
          goto LABEL_12;
        }
        v19 = (const char *)curl_maprintf("%s%s.tmp", v12, v25);
        if ( v19 )
        {
          v11 = (char *)v19;
          v20 = open(v19, 193, 384LL);
          if ( v20 == -1 )
            goto LABEL_12;
          v21 = v20;
          if ( fstat(v20, &v26) != -1 && v26.st_uid == buf.st_uid && v26.st_gid == buf.st_gid && fchmod(v21, mode) == -1
            || (v22 = fdopen(v21, "w"), (*v14 = v22) == 0LL) )
          {
            close(v21);
            unlink(v11);
            goto LABEL_12;
          }
          Curl_cfree(v12);
          *tempname = v11;
          return 0;
        }
        v10 = CURLE_OUT_OF_MEMORY;
      }
      v11 = 0LL;
      goto LABEL_12;
    }
  }
  v11 = 0LL;
  v12 = 0LL;
LABEL_12:
  Curl_cfree(v11);
  Curl_cfree(v12);
  return v10;
}
