CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  char *v6; // rbx
  CURLcode v7; // r14d
  const char *v9; // rax
  int v10; // eax
  int v11; // ebp
  FILE *v12; // rax
  stat sb; // [rsp+0h] [rbp-168h] BYREF
  stat nsb; // [rsp+90h] [rbp-D8h] BYREF
  unsigned __int8 randsuffix[9]; // [rsp+12Fh] [rbp-39h] BYREF
  unsigned __int64 v16; // [rsp+138h] [rbp-30h]

  v16 = __readfsqword(0x28u);
  *tempname = 0LL;
  if ( stat_0(filename, &sb) != -1 && (sb.st_mode & 0xF000) == 0x8000 )
  {
    v7 = (unsigned int)Curl_rand_hex(data, randsuffix, 9LL);
    v6 = 0LL;
    if ( v7 == CURLE_OK )
    {
      v9 = (const char *)curl_maprintf("%s.%s.tmp", filename, (const char *)randsuffix);
      v6 = (char *)v9;
      if ( v9 )
      {
        v10 = open(v9, 193, 384LL);
        v11 = v10;
        if ( v10 == -1 )
        {
          v7 = CURLE_WRITE_ERROR;
        }
        else
        {
          if ( fstat(v10, &nsb) == -1
            || nsb.st_uid != sb.st_uid
            || nsb.st_gid != sb.st_gid
            || fchmod(v11, sb.st_mode) != -1 )
          {
            v12 = fdopen(v11, "w");
            *fh = v12;
            if ( v12 )
            {
              *tempname = v6;
              return v7;
            }
          }
          close(v11);
          unlink(v6);
          v7 = CURLE_WRITE_ERROR;
        }
      }
      else
      {
        v7 = CURLE_OUT_OF_MEMORY;
      }
    }
    goto LABEL_8;
  }
  v6 = (char *)fopen(filename, "w");
  *fh = (FILE *)v6;
  if ( !v6 )
  {
    v7 = CURLE_WRITE_ERROR;
LABEL_8:
    Curl_cfree(v6);
    *tempname = 0LL;
    return v7;
  }
  return 0;
}
