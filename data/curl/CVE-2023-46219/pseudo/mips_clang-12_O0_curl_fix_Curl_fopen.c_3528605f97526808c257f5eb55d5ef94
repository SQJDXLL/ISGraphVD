int __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  int v4; // $v0
  FILE *v5; // $v0
  char v7[32]; // [sp+18h] [+18h] BYREF
  int v8; // [sp+38h] [+38h]
  int v9; // [sp+3Ch] [+3Ch]
  char *v10; // [sp+B8h] [+B8h]
  int v11; // [sp+BCh] [+BCh]
  char v12[24]; // [sp+C0h] [+C0h] BYREF
  __mode_t v13; // [sp+D8h] [+D8h]
  int v14; // [sp+E0h] [+E0h]
  int v15; // [sp+E4h] [+E4h]
  const char *v16; // [sp+160h] [+160h]
  char v17[44]; // [sp+164h] [+164h] BYREF
  int v18; // [sp+190h] [+190h]
  char **v19; // [sp+194h] [+194h]
  FILE **v20; // [sp+198h] [+198h]
  char *path; // [sp+19Ch] [+19Ch]
  Curl_easy *v22; // [sp+1A0h] [+1A0h]

  v22 = data;
  path = (char *)filename;
  v20 = fh;
  v19 = tempname;
  v18 = 23;
  v16 = 0;
  v11 = -1;
  *tempname = 0;
  v10 = dirslash(path);
  if ( v10 )
  {
    *v20 = (FILE *)((int (__fastcall *)(char *, const char *))fopen64)(path, "w");
    if ( *v20 )
    {
      v4 = fileno(*v20);
      if ( ((int (__fastcall *)(int, char *))fstat64)(v4, v12) == -1 || (v13 & 0xF000) != 0x8000 )
      {
        Curl_cfree(v10);
        return 0;
      }
      fclose(*v20);
      *v20 = 0;
      v18 = ((int (__fastcall *)(Curl_easy *, char *, int))Curl_rand_alnum)(v22, v17, 41);
      if ( !v18 )
      {
        v16 = (const char *)curl_maprintf("%s%s.tmp", v10, v17);
        if ( v16 )
        {
          v18 = 23;
          v11 = open64(v16, 1281, 384);
          if ( v11 != -1
            && (((int (__fastcall *)(int, char *))fstat64)(v11, v7) == -1
             || v8 != v14
             || v9 != v15
             || fchmod(v11, v13) != -1) )
          {
            v5 = fdopen(v11, "w");
            *v20 = v5;
            if ( *v20 )
            {
              Curl_cfree(v10);
              *v19 = (char *)v16;
              return 0;
            }
          }
        }
        else
        {
          v18 = 27;
        }
      }
    }
  }
  if ( v11 != -1 )
  {
    close(v11);
    unlink(v16);
  }
  Curl_cfree(v16);
  Curl_cfree(v10);
  return v18;
}
