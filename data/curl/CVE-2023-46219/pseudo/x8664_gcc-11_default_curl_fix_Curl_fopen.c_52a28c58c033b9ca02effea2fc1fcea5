CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  size_t v6; // rax
  const char *v7; // r14
  FILE *v8; // rax
  char *v9; // r13
  int v10; // eax
  CURLcode v11; // r12d
  size_t v13; // rdx
  size_t v14; // r8
  const char *v15; // rax
  int v16; // eax
  int v17; // edi
  FILE *v18; // rax
  int fd; // [rsp+8h] [rbp-1C0h]
  char v20[32]; // [rsp+10h] [rbp-1B8h] BYREF
  stat sb; // [rsp+30h] [rbp-198h] BYREF
  stat nsb; // [rsp+C0h] [rbp-108h] BYREF
  unsigned __int8 randbuf[41]; // [rsp+150h] [rbp-78h] BYREF
  unsigned __int64 v24; // [rsp+188h] [rbp-40h]

  v24 = __readfsqword(0x28u);
  *tempname = 0LL;
  Curl_dyn_init(v20, 8000000LL);
  v6 = strlen(filename);
  if ( v6 )
  {
    while ( 1 )
    {
      v13 = v6--;
      if ( filename[v6] == 47 )
        break;
      if ( !v6 )
      {
LABEL_11:
        if ( !(unsigned int)Curl_dyn_addn(v20, filename, 0LL) )
          goto LABEL_3;
        goto LABEL_12;
      }
    }
    while ( 1 )
    {
      v14 = v13--;
      if ( filename[v13] != 47 )
        break;
      if ( !v13 )
        goto LABEL_11;
    }
    if ( !(unsigned int)Curl_dyn_addn(v20, filename, v14) && !(unsigned int)Curl_dyn_addn(v20, &LC0, 1LL) )
      goto LABEL_3;
    goto LABEL_12;
  }
  if ( (unsigned int)Curl_dyn_addn(v20, filename, 0LL) )
  {
LABEL_12:
    v7 = 0LL;
    v9 = 0LL;
    v11 = CURLE_WRITE_ERROR;
    goto LABEL_13;
  }
LABEL_3:
  v7 = (const char *)Curl_dyn_ptr(v20);
  if ( !v7 )
  {
    v9 = 0LL;
    v11 = CURLE_WRITE_ERROR;
    goto LABEL_13;
  }
  v8 = fopen(filename, "w");
  *fh = v8;
  v9 = (char *)v8;
  if ( !v8 )
  {
LABEL_27:
    v11 = CURLE_WRITE_ERROR;
    goto LABEL_13;
  }
  v10 = fileno(v8);
  if ( fstat(v10, &sb) != -1 && (sb.st_mode & 0xF000) == 0x8000 )
  {
    v9 = 0LL;
    fclose(*fh);
    *fh = 0LL;
    v11 = (unsigned int)Curl_rand_alnum(data, randbuf, 41LL);
    if ( v11 == CURLE_OK )
    {
      v15 = (const char *)curl_maprintf("%s%s.tmp", v7, (const char *)randbuf);
      v9 = (char *)v15;
      if ( !v15 )
      {
        v11 = CURLE_OUT_OF_MEMORY;
        goto LABEL_13;
      }
      v16 = open(v15, 193, 384LL);
      if ( v16 != -1 )
      {
        fd = v16;
        v17 = v16;
        if ( fstat(v16, &nsb) == -1
          || nsb.st_uid != sb.st_uid
          || nsb.st_gid != sb.st_gid
          || (v17 = fd, fchmod(fd, sb.st_mode) != -1) )
        {
          v18 = fdopen(v17, "w");
          *fh = v18;
          if ( v18 )
          {
            Curl_cfree(v7);
            *tempname = v9;
            return v11;
          }
        }
        close(v17);
        v11 = CURLE_WRITE_ERROR;
        unlink(v9);
        goto LABEL_13;
      }
      goto LABEL_27;
    }
LABEL_13:
    Curl_cfree(v9);
    Curl_cfree(v7);
    return v11;
  }
  v11 = CURLE_OK;
  Curl_cfree(v7);
  return v11;
}
