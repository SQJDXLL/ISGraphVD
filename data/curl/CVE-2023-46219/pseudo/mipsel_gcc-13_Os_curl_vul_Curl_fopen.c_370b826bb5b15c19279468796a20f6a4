int __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  FILE *v8; // $s0
  int v9; // $s1
  int v10; // $v0
  int v11; // $v0
  int v12; // $s1
  CURLcode (*v13)(Curl_easy *, const char *, FILE **, char **); // $a1
  FILE *v14; // $v0
  stat sb; // [sp+18h] [-154h] BYREF
  stat nsb; // [sp+B8h] [-B4h] BYREF
  unsigned __int8 randsuffix[9]; // [sp+158h] [-14h] BYREF

  *tempname = 0;
  if ( stat64(filename, &sb) == -1 || (sb.st_mode & 0xF000) != 0x8000 )
  {
    v8 = (FILE *)fopen64(filename, &_LC0);
    *fh = v8;
    if ( !v8 )
      goto LABEL_4;
    return 0;
  }
  v9 = Curl_rand_hex(data, randsuffix, 9);
  v8 = 0;
  if ( v9 )
    goto LABEL_5;
  v10 = curl_maprintf("%s.%s.tmp", filename, randsuffix);
  v8 = (FILE *)v10;
  if ( !v10 )
  {
    v9 = 27;
    goto LABEL_5;
  }
  v11 = open64(v10, 1281, 384);
  v12 = v11;
  if ( v11 != -1 )
  {
    if ( fstat64(v11, &nsb) != -1 )
    {
      v13 = (CURLcode (*)(Curl_easy *, const char *, FILE **, char **))MEMORY[0x8288];
      if ( nsb.st_uid != sb.st_uid || nsb.st_gid != sb.st_gid )
      {
LABEL_14:
        v14 = fdopen(v12, (const char *)v13 + (__int16)&_LC0);
        *fh = v14;
        if ( v14 )
        {
          *tempname = (char *)v8;
          return 0;
        }
LABEL_17:
        close(v12);
        unlink((const char *)v8);
        goto LABEL_4;
      }
      if ( fchmod(v12, sb.st_mode) == -1 )
        goto LABEL_17;
    }
    v13 = Curl_fopen;
    goto LABEL_14;
  }
LABEL_4:
  v9 = 23;
LABEL_5:
  Curl_cfree(v8);
  *tempname = 0;
  return v9;
}
