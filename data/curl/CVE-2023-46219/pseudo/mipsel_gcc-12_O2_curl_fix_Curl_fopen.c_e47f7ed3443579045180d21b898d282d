int __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  int v4; // $v0
  size_t v9; // $v0
  size_t v10; // $a1
  int v11; // $s1
  char *v12; // $s0
  int v13; // $v0
  int result; // $v0
  FILE *v15; // $v0
  int v16; // $v0
  int v17; // $v0
  int v18; // $v0
  int v19; // $v0
  int v20; // $a0
  FILE *v21; // $v0
  int v22; // $v0
  int fda; // [sp+1Ch] [-188h]
  int fd; // [sp+1Ch] [-188h]
  int fdb; // [sp+1Ch] [-188h]
  char v26[16]; // [sp+20h] [-184h] BYREF
  stat sb; // [sp+30h] [-174h] BYREF
  stat nsb; // [sp+D0h] [-D4h] BYREF
  unsigned __int8 randbuf[41]; // [sp+170h] [-34h] BYREF
  int v30; // [sp+19Ch] [-8h]

  v4 = _stack_chk_guard;
  *tempname = 0;
  v30 = v4;
  Curl_dyn_init(v26, 8000000);
  v9 = strlen(filename);
  if ( v9 )
  {
    do
    {
      v10 = v9--;
      if ( filename[v9] == 47 )
      {
        v9 = v10;
        goto LABEL_7;
      }
    }
    while ( v9 );
    while ( 1 )
    {
LABEL_7:
      if ( !v9 )
      {
        if ( !Curl_dyn_addn(v26, filename, 0) )
          goto LABEL_13;
        goto LABEL_9;
      }
      if ( filename[v9 - 1] != 47 )
        break;
      --v9;
    }
    if ( Curl_dyn_addn(v26, filename, v9) )
      goto LABEL_9;
    if ( Curl_dyn_addn(v26, &_LC0, 1) )
    {
      v11 = 0;
      goto LABEL_10;
    }
  }
  else if ( Curl_dyn_addn(v26, filename, 0) )
  {
LABEL_9:
    v11 = 0;
LABEL_10:
    v12 = 0;
    v13 = 23;
    goto LABEL_11;
  }
LABEL_13:
  v11 = Curl_dyn_ptr(v26);
  if ( !v11 )
  {
    v12 = 0;
    v13 = 23;
    goto LABEL_11;
  }
  v15 = (FILE *)fopen64(filename, "w");
  v12 = (char *)v15;
  *fh = v15;
  if ( !v15 )
    goto LABEL_30;
  v16 = fileno(v15);
  if ( fstat64(v16, &sb) == -1 || (sb.st_mode & 0xF000) != 0x8000 )
  {
    Curl_cfree(v11);
    return 0;
  }
  fclose(*fh);
  *fh = 0;
  v13 = Curl_rand_alnum(data, randbuf, 41);
  if ( v13 )
  {
    v12 = 0;
LABEL_11:
    fda = v13;
    Curl_cfree(v12);
    Curl_cfree(v11);
    return fda;
  }
  v17 = curl_maprintf("%s%s.tmp", v11, randbuf);
  v12 = (char *)v17;
  if ( !v17 )
  {
    v13 = 27;
    goto LABEL_11;
  }
  v18 = open64(v17, 1281, 384);
  if ( v18 == -1 )
  {
LABEL_30:
    v13 = 23;
    goto LABEL_11;
  }
  fd = v18;
  v19 = fstat64(v18, &nsb);
  v20 = fd;
  if ( v19 != -1
    && nsb.st_uid == sb.st_uid
    && nsb.st_gid == sb.st_gid
    && (v22 = fchmod(fd, sb.st_mode), v20 = fd, v22 == -1)
    || (fdb = v20, v21 = fdopen(v20, "w"), v20 = fdb, (*fh = v21) == 0) )
  {
    close(v20);
    unlink(v12);
    v13 = 23;
    goto LABEL_11;
  }
  Curl_cfree(v11);
  result = 0;
  *tempname = v12;
  return result;
}
