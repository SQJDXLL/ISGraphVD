CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  size_t v8; // x0
  const char *v9; // x8
  size_t v10; // x9
  int v11; // w10
  int v12; // w11
  size_t v13; // x10
  size_t v14; // x21
  char *v15; // x22
  const char *v16; // x21
  CURLcode v17; // w23
  FILE *v19; // x0
  int v20; // w0
  __mode_t st_mode; // w24
  CURLcode v22; // w0
  const char *v23; // x0
  int v24; // w0
  int v25; // w23
  FILE *v26; // x0
  struct stat v27; // [xsp+0h] [xbp-130h] BYREF
  struct stat buf; // [xsp+80h] [xbp-B0h] BYREF
  char v29[32]; // [xsp+104h] [xbp-2Ch] BYREF

  *tempname = 0LL;
  Curl_dyn_init(&buf, 8000000LL);
  v8 = strlen(filename);
  if ( v8 )
  {
    v9 = filename + -0x1;
    do
    {
      v10 = v8;
      if ( !v8 )
        break;
      v11 = (unsigned __int8)v9[v8--];
    }
    while ( v11 != 47 );
    while ( v10 )
    {
      v12 = (unsigned __int8)v9[v10];
      v13 = --v10;
      if ( v12 != 47 )
      {
        v14 = v13 + 1;
        goto LABEL_10;
      }
    }
  }
  v14 = 0LL;
LABEL_10:
  if ( (unsigned int)Curl_dyn_addn(&buf, filename, v14) || v14 && (unsigned int)Curl_dyn_addn(&buf, "/", 1LL) )
  {
    v15 = 0LL;
    v16 = 0LL;
  }
  else
  {
    v16 = (const char *)Curl_dyn_ptr(&buf);
    if ( v16 && (v19 = fopen(filename, "w"), (*fh = v19) != 0LL) )
    {
      v20 = fileno(v19);
      if ( fstat(v20, &buf) == -1 || (st_mode = buf.st_mode, (buf.st_mode & 0xF000) != 0x8000) )
      {
        Curl_cfree(v16);
        return 0;
      }
      fclose(*fh);
      *fh = 0LL;
      v22 = (unsigned int)Curl_rand_alnum(data, v29, 41LL);
      if ( v22 )
      {
        v17 = v22;
        v15 = 0LL;
        goto LABEL_13;
      }
      v23 = (const char *)curl_maprintf("%s%s.tmp", v16, v29);
      v15 = (char *)v23;
      if ( !v23 )
      {
        v17 = CURLE_OUT_OF_MEMORY;
        goto LABEL_13;
      }
      v24 = open(v23, 193, 384LL);
      if ( v24 != -1 )
      {
        v25 = v24;
        if ( fstat(v24, &v27) == -1
          || v27.st_uid != buf.st_uid
          || v27.st_gid != buf.st_gid
          || fchmod(v25, st_mode) != -1 )
        {
          v26 = fdopen(v25, "w");
          *fh = v26;
          if ( v26 )
          {
            Curl_cfree(v16);
            v17 = CURLE_OK;
            *tempname = v15;
            return v17;
          }
        }
        close(v25);
        unlink(v15);
      }
    }
    else
    {
      v15 = 0LL;
    }
  }
  v17 = CURLE_WRITE_ERROR;
LABEL_13:
  Curl_cfree(v15);
  Curl_cfree(v16);
  return v17;
}
