CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  size_t v8; // x0
  const char *v9; // x1
  __int64 v10; // x2
  const char *v11; // x21
  char *v12; // x19
  size_t v13; // x0
  size_t v14; // x19
  FILE *v15; // x0
  int v16; // w0
  CURLcode v17; // w20
  const char *v18; // x0
  int v19; // w0
  int v20; // w20
  FILE *v21; // x0
  char v23[32]; // [xsp+58h] [xbp+58h] BYREF
  stat sb; // [xsp+78h] [xbp+78h] BYREF
  stat nsb; // [xsp+F8h] [xbp+F8h] BYREF
  unsigned __int8 randbuf[41]; // [xsp+178h] [xbp+178h] BYREF

  *tempname = 0LL;
  Curl_dyn_init(v23, 8000000LL);
  v8 = strlen(filename);
  if ( !v8 )
  {
    v9 = filename;
    v10 = 0LL;
    goto LABEL_3;
  }
  v14 = v8;
  while ( 1 )
  {
    v13 = v14--;
    if ( filename[v14] == 47 )
      break;
    if ( !v14 )
      goto LABEL_10;
  }
  do
  {
    v14 = v13;
    if ( !v13 )
      break;
    --v13;
  }
  while ( filename[v13] == 47 );
LABEL_10:
  if ( (unsigned int)Curl_dyn_addn(v23, filename, v14) )
    goto LABEL_4;
  if ( v14 )
  {
    v9 = (const char *)&unk_286;
    v10 = 1LL;
LABEL_3:
    if ( (unsigned int)Curl_dyn_addn(v23, v9, v10) )
    {
LABEL_4:
      v11 = 0LL;
LABEL_5:
      v12 = 0LL;
      goto LABEL_30;
    }
  }
  v11 = (const char *)Curl_dyn_ptr(v23);
  if ( !v11 )
    goto LABEL_5;
  v15 = fopen(filename, "w");
  *fh = v15;
  v12 = (char *)v15;
  if ( !v15 )
    goto LABEL_30;
  v16 = fileno(v15);
  if ( fstat(v16, &sb) != -1 && (sb.st_mode & 0xF000) == 0x8000 )
  {
    fclose(*fh);
    *fh = 0LL;
    v17 = (unsigned int)Curl_rand_alnum(data, randbuf, 41LL);
    if ( v17 )
    {
      v12 = 0LL;
      goto LABEL_32;
    }
    v18 = (const char *)curl_maprintf("%s%s.tmp", v11, (const char *)randbuf);
    v12 = (char *)v18;
    if ( !v18 )
    {
      v17 = CURLE_OUT_OF_MEMORY;
      goto LABEL_32;
    }
    v19 = open(v18, 193, 384LL);
    v20 = v19;
    if ( v19 == -1 )
    {
LABEL_30:
      v17 = CURLE_WRITE_ERROR;
LABEL_32:
      Curl_cfree(v12);
      Curl_cfree(v11);
      return v17;
    }
    if ( fstat(v19, &nsb) != -1 && *(_QWORD *)&nsb.st_uid == *(_QWORD *)&sb.st_uid && fchmod(v20, sb.st_mode) == -1
      || (v21 = fdopen(v20, "w"), (*fh = v21) == 0LL) )
    {
      close(v20);
      unlink(v12);
      goto LABEL_30;
    }
    Curl_cfree(v11);
    *tempname = v12;
  }
  else
  {
    Curl_cfree(v11);
  }
  return 0;
}
