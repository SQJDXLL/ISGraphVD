int __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  const char *v8; // $s0
  char *v9; // $s5
  int v10; // $s1
  FILE *v11; // $v0
  int v12; // $v0
  __mode_t v13; // $s7
  int v14; // $v0
  int v15; // $s6
  int v17; // $v0
  int v18; // $v0
  FILE *v19; // $v0
  char v20[32]; // [sp+10h] [-170h] BYREF
  int v21; // [sp+30h] [-150h]
  int v22; // [sp+34h] [-14Ch]
  char v23[24]; // [sp+B0h] [-D0h] BYREF
  __mode_t v24; // [sp+C8h] [-B8h]
  int v25; // [sp+D0h] [-B0h]
  int v26; // [sp+D4h] [-ACh]
  char v27[44]; // [sp+154h] [-2Ch] BYREF

  *tempname = 0;
  v8 = dirslash(filename);
  v9 = 0;
  v10 = 23;
  if ( v8 )
  {
    v11 = (FILE *)fopen64(filename, "w");
    *fh = v11;
    if ( v11 )
    {
      v12 = fileno(v11);
      if ( fstat64(v12, v23) == -1 || (v13 = v24, (v24 & 0xF000) != 0x8000) )
      {
        Curl_cfree(v8);
        return 0;
      }
      fclose(*fh);
      *fh = 0;
      v14 = Curl_rand_alnum(data, v27, 41);
      v15 = -1;
      if ( v14 )
      {
        v10 = v14;
      }
      else
      {
        v17 = curl_maprintf("%s%s.tmp", v8, v27);
        if ( v17 )
        {
          v9 = (char *)v17;
          v18 = open64(v17, 1281, 384);
          if ( v18 == -1 )
          {
            v15 = -1;
          }
          else
          {
            v15 = v18;
            if ( fstat64(v18, v20) == -1 || v21 != v25 || v22 != v26 || fchmod(v15, v13) != -1 )
            {
              v19 = fdopen(v15, "w");
              *fh = v19;
              if ( v19 )
              {
                Curl_cfree(v8);
                *tempname = v9;
                return 0;
              }
            }
          }
        }
        else
        {
          v10 = 27;
        }
      }
    }
    else
    {
      v15 = -1;
    }
  }
  else
  {
    v15 = -1;
  }
  if ( v15 != -1 )
  {
    close(v15);
    unlink(v9);
  }
  Curl_cfree(v9);
  Curl_cfree(v8);
  return v10;
}
