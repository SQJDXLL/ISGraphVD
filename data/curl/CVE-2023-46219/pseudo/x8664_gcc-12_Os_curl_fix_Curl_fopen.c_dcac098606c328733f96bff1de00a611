CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  const char *v6; // rbx
  size_t v7; // rax
  size_t v8; // rbp
  size_t v9; // rax
  __int64 v10; // rdx
  const char *v11; // rbp
  FILE *v12; // rax
  char *v13; // rbx
  int v14; // eax
  CURLcode v15; // r14d
  const char *v16; // rax
  int v17; // eax
  int v18; // r14d
  FILE *v19; // rax
  char v21[32]; // [rsp+8h] [rbp-1B0h] BYREF
  stat sb; // [rsp+28h] [rbp-190h] BYREF
  stat nsb; // [rsp+B8h] [rbp-100h] BYREF
  unsigned __int8 randbuf[41]; // [rsp+14Fh] [rbp-69h] BYREF
  unsigned __int64 v25; // [rsp+178h] [rbp-40h]

  v6 = filename;
  v25 = __readfsqword(0x28u);
  *tempname = 0LL;
  Curl_dyn_init(v21, 8000000LL);
  v7 = strlen(filename);
  if ( !v7 )
  {
    v10 = 0LL;
    goto LABEL_10;
  }
  v8 = v7;
  while ( 1 )
  {
    v9 = v8--;
    if ( filename[v8] == 47 )
      break;
    if ( !v8 )
      goto LABEL_12;
  }
  do
  {
    v8 = v9;
    if ( !v9 )
      break;
    --v9;
  }
  while ( filename[v8 - 1] == 47 );
LABEL_12:
  if ( (unsigned int)Curl_dyn_addn(v21, filename, v8) )
    goto LABEL_11;
  v10 = 1LL;
  filename = (const char *)&LC0;
  if ( v8 )
  {
LABEL_10:
    if ( !(unsigned int)Curl_dyn_addn(v21, filename, v10) )
      goto LABEL_14;
LABEL_11:
    v11 = 0LL;
LABEL_30:
    v13 = 0LL;
    goto LABEL_32;
  }
LABEL_14:
  v11 = (const char *)Curl_dyn_ptr(v21, filename, v10);
  if ( !v11 )
    goto LABEL_30;
  v12 = fopen(v6, "w");
  *fh = v12;
  v13 = (char *)v12;
  if ( !v12 )
  {
LABEL_32:
    v15 = CURLE_WRITE_ERROR;
    goto LABEL_33;
  }
  v14 = fileno(v12);
  if ( fstat(v14, &sb) != -1 && (sb.st_mode & 0xF000) == 0x8000 )
  {
    v13 = 0LL;
    fclose(*fh);
    *fh = 0LL;
    v15 = (unsigned int)Curl_rand_alnum(data, randbuf, 41LL);
    if ( v15 == CURLE_OK )
    {
      v16 = (const char *)curl_maprintf("%s%s.tmp", v11, (const char *)randbuf);
      v13 = (char *)v16;
      if ( v16 )
      {
        v17 = open(v16, 193, 384LL);
        v18 = v17;
        if ( v17 != -1 )
        {
          if ( fstat(v17, &nsb) == -1
            || nsb.st_uid != sb.st_uid
            || nsb.st_gid != sb.st_gid
            || fchmod(v18, sb.st_mode) != -1 )
          {
            v19 = fdopen(v18, "w");
            *fh = v19;
            if ( v19 )
            {
              Curl_cfree(v11);
              *tempname = v13;
              return 0;
            }
          }
          close(v18);
          unlink(v13);
        }
        goto LABEL_32;
      }
      v15 = CURLE_OUT_OF_MEMORY;
    }
LABEL_33:
    Curl_cfree(v13);
    Curl_cfree(v11);
    return v15;
  }
  Curl_cfree(v11);
  return 0;
}
