CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  char *v8; // r6
  char *v9; // r4
  int v10; // r5
  FILE *v11; // r0
  int v12; // r0
  __mode_t v13; // r8
  int v14; // r0
  CURLcode v15; // r7
  int v16; // r0
  int v17; // r0
  int v18; // r10
  FILE *v19; // r0
  void (__fastcall **v20)(char *); // r5
  _DWORD v22[26]; // [sp+0h] [bp-120h] BYREF
  char v23[16]; // [sp+68h] [bp-B8h] BYREF
  __mode_t v24; // [sp+78h] [bp-A8h]
  int v25; // [sp+80h] [bp-A0h]
  int v26; // [sp+84h] [bp-9Ch]
  unsigned __int8 randbuf[41]; // [sp+D7h] [bp-49h] BYREF

  v8 = 0;
  *tempname = 0;
  v9 = dirslash(filename);
  v10 = -1;
  if ( !v9 )
    goto LABEL_19;
  v11 = (FILE *)fopen64(filename, "w");
  *fh = v11;
  if ( !v11 )
    goto LABEL_19;
  v12 = fileno(v11);
  if ( fstat64(v12, v23) == -1 || (v13 = v24, (v24 & 0xF000) != 0x8000) )
  {
    ((void (__fastcall *)(char *))*Curl_cfree)(v9);
    return 0;
  }
  fclose(*fh);
  v8 = 0;
  *fh = 0;
  v14 = Curl_rand_alnum(data, randbuf, 41);
  if ( !v14 )
  {
    v16 = curl_maprintf("%s%s.tmp", v9, (const char *)randbuf);
    if ( !v16 )
    {
      v15 = CURLE_OUT_OF_MEMORY;
      goto fail;
    }
    v8 = (char *)v16;
    v17 = open64(v16, 193, 384);
    if ( v17 != -1 )
    {
      v18 = v17;
      if ( fstat64(v17, v22) == -1 || v22[6] != v25 || v22[7] != v26 || fchmod(v18, v13) != -1 )
      {
        v19 = fdopen(v18, "w");
        *fh = v19;
        if ( v19 )
        {
          ((void (__fastcall *)(char *))*Curl_cfree)(v9);
          *tempname = v8;
          return 0;
        }
      }
      v10 = v18;
    }
LABEL_19:
    v15 = CURLE_WRITE_ERROR;
    goto fail;
  }
  v15 = v14;
fail:
  if ( v10 != -1 )
  {
    close(v10);
    unlink(v8);
  }
  v20 = (void (__fastcall **)(char *))Curl_cfree;
  ((void (__fastcall *)(char *))*Curl_cfree)(v8);
  (*v20)(v9);
  return v15;
}
