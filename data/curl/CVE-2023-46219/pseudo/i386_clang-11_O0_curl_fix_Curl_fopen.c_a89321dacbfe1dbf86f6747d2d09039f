CURLcode __cdecl Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  int v4; // eax
  stat nsb; // [esp+28h] [ebp-110h] BYREF
  char *dir; // [esp+88h] [ebp-B0h]
  int fd; // [esp+8Ch] [ebp-ACh]
  stat sb; // [esp+90h] [ebp-A8h] BYREF
  char *tempstore; // [esp+F4h] [ebp-44h]
  unsigned __int8 randbuf[41]; // [esp+FBh] [ebp-3Dh] BYREF
  CURLcode result; // [esp+124h] [ebp-14h]

  result = CURLE_WRITE_ERROR;
  tempstore = 0;
  fd = -1;
  *tempname = 0;
  dir = dirslash(filename);
  if ( dir )
  {
    *fh = (FILE *)fopen64(filename, "w");
    if ( *fh )
    {
      v4 = fileno(*fh);
      if ( fstat64(v4, &sb) == -1 || (sb.st_mode & 0xF000) != 0x8000 )
      {
        Curl_cfree(dir);
        return 0;
      }
      fclose(*fh);
      *fh = 0;
      result = Curl_rand_alnum(data, randbuf, 41);
      if ( result == CURLE_OK )
      {
        tempstore = (char *)curl_maprintf("%s%s.tmp", dir, randbuf);
        if ( tempstore )
        {
          result = CURLE_WRITE_ERROR;
          fd = open64(tempstore, 193, 384);
          if ( fd != -1
            && (fstat64(fd, &nsb) == -1
             || nsb.st_uid != sb.st_uid
             || nsb.st_gid != sb.st_gid
             || fchmod(fd, sb.st_mode) != -1) )
          {
            *fh = fdopen(fd, "w");
            if ( *fh )
            {
              Curl_cfree(dir);
              *tempname = tempstore;
              return 0;
            }
          }
        }
        else
        {
          result = CURLE_OUT_OF_MEMORY;
        }
      }
    }
  }
  if ( fd != -1 )
  {
    close(fd);
    unlink(tempstore);
  }
  Curl_cfree(tempstore);
  Curl_cfree(dir);
  return result;
}
