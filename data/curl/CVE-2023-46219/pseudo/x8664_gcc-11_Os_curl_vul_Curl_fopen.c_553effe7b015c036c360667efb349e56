CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  CURLcode v6; // r12d
  FILE *v7; // rax
  char *v8; // rbp
  const char *v9; // rax
  int v10; // eax
  int v11; // r13d
  FILE *v12; // rax
  stat sb; // [rsp+8h] [rbp-170h] BYREF
  stat nsb; // [rsp+98h] [rbp-E0h] BYREF
  unsigned __int8 randsuffix[9]; // [rsp+12Fh] [rbp-49h] BYREF
  unsigned __int64 v17; // [rsp+138h] [rbp-40h]

  v17 = __readfsqword(0x28u);
  *tempname = 0LL;
  if ( stat_0(filename, &sb) != -1 && (sb.st_mode & 0xF000) == 0x8000 )
  {
    v8 = 0LL;
    v6 = (unsigned int)Curl_rand_hex(data, randsuffix, 9LL);
    if ( v6 == CURLE_OK )
    {
      v9 = (const char *)curl_maprintf("%s.%s.tmp", filename, (const char *)randsuffix);
      v8 = (char *)v9;
      if ( v9 )
      {
        v10 = open(v9, 193, 384LL);
        v11 = v10;
        if ( v10 != -1 )
        {
          if ( fstat(v10, &nsb) == -1
            || nsb.st_uid != sb.st_uid
            || nsb.st_gid != sb.st_gid
            || fchmod(v11, sb.st_mode) != -1 )
          {
            v12 = fdopen(v11, "w");
            *fh = v12;
            if ( v12 )
            {
              *tempname = v8;
              return v6;
            }
          }
          close(v11);
          unlink(v8);
        }
LABEL_16:
        v6 = CURLE_WRITE_ERROR;
        goto LABEL_17;
      }
      v6 = CURLE_OUT_OF_MEMORY;
    }
LABEL_17:
    Curl_cfree(v8);
    *tempname = 0LL;
    return v6;
  }
  v6 = CURLE_OK;
  v7 = fopen(filename, "w");
  *fh = v7;
  v8 = (char *)v7;
  if ( !v7 )
    goto LABEL_16;
  return v6;
}
