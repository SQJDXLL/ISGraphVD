CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  size_t v6; // rbp
  bool i; // zf
  size_t v8; // rax
  CURLcode v9; // r12d
  const char *v10; // rbp
  FILE *v11; // rax
  char *v12; // rbx
  int v13; // eax
  int v14; // eax
  const char *v15; // rax
  int v16; // eax
  FILE *v17; // rax
  int fd; // [rsp+0h] [rbp-1C8h]
  char v20[32]; // [rsp+18h] [rbp-1B0h] BYREF
  stat sb; // [rsp+38h] [rbp-190h] BYREF
  stat nsb; // [rsp+C8h] [rbp-100h] BYREF
  unsigned __int8 randbuf[41]; // [rsp+15Fh] [rbp-69h] BYREF
  unsigned __int64 v24; // [rsp+188h] [rbp-40h]

  v24 = __readfsqword(0x28u);
  *tempname = 0LL;
  Curl_dyn_init(v20, 8000000LL);
  v6 = strlen(filename);
  for ( i = v6 == 0; !i; i = v6 == 0 )
  {
    v8 = v6--;
    if ( filename[v6] == 47 )
    {
      do
      {
        v6 = v8;
        if ( !v8 )
          break;
        --v8;
      }
      while ( filename[v6 - 1] == 47 );
      break;
    }
  }
  v9 = (unsigned int)Curl_dyn_addn(v20, filename, v6);
  if ( v9 || v6 && (unsigned int)Curl_dyn_addn(v20, &LC0, 1LL) )
  {
    v10 = 0LL;
LABEL_27:
    v12 = 0LL;
    goto LABEL_29;
  }
  v10 = (const char *)Curl_dyn_ptr(v20);
  if ( !v10 )
    goto LABEL_27;
  v11 = fopen(filename, "w");
  *fh = v11;
  v12 = (char *)v11;
  if ( !v11 )
    goto LABEL_29;
  v13 = fileno(v11);
  if ( fstat(v13, &sb) == -1 || (sb.st_mode & 0xF000) != 0x8000 )
    goto LABEL_26;
  v12 = 0LL;
  fclose(*fh);
  *fh = 0LL;
  v14 = Curl_rand_alnum(data, randbuf, 41LL);
  if ( v14 )
    goto LABEL_30;
  v15 = (const char *)curl_maprintf("%s%s.tmp", v10, (const char *)randbuf);
  v12 = (char *)v15;
  if ( !v15 )
  {
    v14 = 27;
LABEL_30:
    v9 = v14;
    goto LABEL_25;
  }
  v16 = open(v15, 193, 384LL);
  fd = v16;
  if ( v16 == -1 )
  {
LABEL_29:
    v14 = 23;
    goto LABEL_30;
  }
  if ( fstat(v16, &nsb) != -1 && nsb.st_uid == sb.st_uid && nsb.st_gid == sb.st_gid && fchmod(fd, sb.st_mode) == -1
    || (v17 = fdopen(fd, "w"), (*fh = v17) == 0LL) )
  {
    v9 = CURLE_WRITE_ERROR;
    close(fd);
    unlink(v12);
LABEL_25:
    Curl_cfree(v12);
LABEL_26:
    Curl_cfree(v10);
    return v9;
  }
  Curl_cfree(v10);
  *tempname = v12;
  return v9;
}
