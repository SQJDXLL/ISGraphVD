CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  size_t v6; // rdx
  const char *v7; // r14
  FILE *v8; // rax
  char *v9; // rbx
  int v10; // eax
  CURLcode v11; // r13d
  size_t v13; // rax
  const char *v14; // rax
  int v15; // eax
  int v16; // r15d
  FILE *v17; // rax
  _BYTE v18[32]; // [rsp+0h] [rbp-1B8h] BYREF
  stat sb; // [rsp+20h] [rbp-198h] BYREF
  stat nsb; // [rsp+B0h] [rbp-108h] BYREF
  unsigned __int8 randbuf[41]; // [rsp+140h] [rbp-78h] BYREF
  unsigned __int64 v22; // [rsp+178h] [rbp-40h]

  v22 = __readfsqword(0x28u);
  *tempname = 0LL;
  Curl_dyn_init(v18, 8000000LL);
  v6 = strlen(filename);
  if ( v6 )
  {
    do
    {
      v13 = v6--;
      if ( filename[v6] == 47 )
      {
        v6 = v13;
        goto LABEL_14;
      }
    }
    while ( v6 );
    while ( 1 )
    {
LABEL_14:
      if ( !v6 )
      {
        if ( !(unsigned int)Curl_dyn_addn(v18, filename, 0LL) )
          goto LABEL_3;
        goto LABEL_34;
      }
      if ( filename[v6 - 1] != 47 )
        break;
      --v6;
    }
    if ( !(unsigned int)Curl_dyn_addn(v18, filename, v6) && !(unsigned int)Curl_dyn_addn(v18, &LC0, 1LL) )
      goto LABEL_3;
    goto LABEL_34;
  }
  if ( (unsigned int)Curl_dyn_addn(v18, filename, 0LL) )
  {
LABEL_34:
    v7 = 0LL;
    v9 = 0LL;
    v11 = CURLE_WRITE_ERROR;
    goto LABEL_35;
  }
LABEL_3:
  v7 = (const char *)Curl_dyn_ptr(v18);
  if ( !v7 )
  {
    v9 = 0LL;
    v11 = CURLE_WRITE_ERROR;
    goto LABEL_35;
  }
  v8 = fopen(filename, "w");
  v9 = (char *)v8;
  *fh = v8;
  if ( !v8 )
  {
    v11 = CURLE_WRITE_ERROR;
    goto LABEL_35;
  }
  v10 = fileno(v8);
  if ( fstat(v10, &sb) != -1 && (sb.st_mode & 0xF000) == 0x8000 )
  {
    fclose(*fh);
    *fh = 0LL;
    v11 = (unsigned int)Curl_rand_alnum(data, randbuf, 41LL);
    v9 = 0LL;
    if ( v11 == CURLE_OK )
    {
      v14 = (const char *)curl_maprintf("%s%s.tmp", v7, (const char *)randbuf);
      v9 = (char *)v14;
      if ( v14 )
      {
        v15 = open(v14, 193, 384LL);
        v16 = v15;
        if ( v15 == -1 )
        {
          v11 = CURLE_WRITE_ERROR;
        }
        else
        {
          if ( fstat(v15, &nsb) == -1
            || nsb.st_uid != sb.st_uid
            || nsb.st_gid != sb.st_gid
            || fchmod(v16, sb.st_mode) != -1 )
          {
            v17 = fdopen(v16, "w");
            *fh = v17;
            if ( v17 )
            {
              Curl_cfree(v7);
              *tempname = v9;
              return v11;
            }
          }
          close(v16);
          unlink(v9);
          v11 = CURLE_WRITE_ERROR;
        }
      }
      else
      {
        v11 = CURLE_OUT_OF_MEMORY;
      }
    }
LABEL_35:
    Curl_cfree(v9);
    Curl_cfree(v7);
    return v11;
  }
  Curl_cfree(v7);
  return 0;
}
