CURLcode __cdecl Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  size_t v4; // eax
  size_t v5; // eax
  size_t v6; // edi
  CURLcode v8; // ebp
  char *v9; // eax
  int v10; // edi
  FILE *v12; // eax
  int v13; // eax
  __mode_t mode; // esi
  int v15; // eax
  int v16; // eax
  int v17; // eax
  int v18; // esi
  FILE *v19; // eax
  int v20; // [esp+14h] [ebp-108h]
  char *name; // [esp+18h] [ebp-104h]
  char v22[16]; // [esp+20h] [ebp-FCh] BYREF
  __mode_t v23; // [esp+30h] [ebp-ECh]
  int v24; // [esp+38h] [ebp-E4h]
  int v25; // [esp+3Ch] [ebp-E0h]
  char v26[24]; // [esp+80h] [ebp-9Ch] BYREF
  int v27; // [esp+98h] [ebp-84h]
  int v28; // [esp+9Ch] [ebp-80h]
  char v29[57]; // [esp+E3h] [ebp-39h] BYREF

  *tempname = 0;
  Curl_dyn_init(v22, 8000000);
  v4 = strlen(filename);
  if ( v4 )
  {
    v5 = v4 + 1;
    do
    {
      v6 = v5;
      if ( v5 == 1 )
        break;
      --v5;
    }
    while ( filename[v6 - 2] != 47 );
    while ( v6 != 1 )
    {
      if ( filename[v6-- - 2] != 47 )
        goto LABEL_9;
    }
  }
  v6 = 0;
LABEL_9:
  if ( Curl_dyn_addn(v22, filename, v6) || v6 && Curl_dyn_addn(v22, "/", 1) )
  {
    v8 = CURLE_WRITE_ERROR;
    v9 = 0;
    v10 = 0;
  }
  else
  {
    v10 = Curl_dyn_ptr(v22);
    v9 = 0;
    if ( v10 )
    {
      v12 = (FILE *)fopen64(filename, "w");
      *fh = v12;
      if ( !v12 )
      {
        v8 = CURLE_WRITE_ERROR;
        goto LABEL_26;
      }
      v13 = fileno(v12);
      if ( fstat64(v13, v22) == -1 || (mode = v23, (v23 & 0xF000) != 0x8000) )
      {
        Curl_cfree(v10);
        return 0;
      }
      fclose(*fh);
      *fh = 0;
      v15 = Curl_rand_alnum(data, v29, 41);
      if ( v15 )
      {
        v8 = v15;
LABEL_26:
        v9 = 0;
        goto LABEL_11;
      }
      v16 = curl_maprintf("%s%s.tmp", v10, v29);
      if ( !v16 )
      {
        v8 = CURLE_OUT_OF_MEMORY;
        goto LABEL_26;
      }
      name = (char *)v16;
      v17 = open64(v16, 193, 384);
      if ( v17 != -1 )
      {
        v20 = v17;
        v8 = CURLE_WRITE_ERROR;
        if ( fstat64(v17, v26) != -1 && v27 == v24 && v28 == v25 && fchmod(v20, mode) == -1 )
        {
          v18 = v20;
        }
        else
        {
          v18 = v20;
          v19 = fdopen(v20, "w");
          *fh = v19;
          if ( v19 )
          {
            Curl_cfree(v10);
            *tempname = name;
            return 0;
          }
        }
        close(v18);
        unlink(name);
        v9 = name;
        goto LABEL_11;
      }
      v9 = name;
    }
    else
    {
      v10 = 0;
    }
    v8 = CURLE_WRITE_ERROR;
  }
LABEL_11:
  Curl_cfree(v9);
  Curl_cfree(v10);
  return v8;
}
