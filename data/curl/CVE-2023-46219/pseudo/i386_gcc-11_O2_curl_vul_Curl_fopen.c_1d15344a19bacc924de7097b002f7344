CURLcode __cdecl Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  char *name; // esi
  int v7; // ecx
  int v8; // eax
  int v9; // edx
  int v10; // eax
  int v11; // edx
  FILE *v12; // eax
  int v13; // eax
  CURLcode v14; // [esp+14h] [ebp-F8h]
  int fd; // [esp+18h] [ebp-F4h]
  int fda; // [esp+18h] [ebp-F4h]
  stat sb; // [esp+20h] [ebp-ECh] BYREF
  stat nsb; // [esp+80h] [ebp-8Ch] BYREF
  unsigned __int8 randsuffix[9]; // [esp+E3h] [ebp-29h] BYREF
  unsigned int v20; // [esp+ECh] [ebp-20h]

  v20 = __readgsdword(0x14u);
  *tempname = 0;
  if ( stat64(filename, &sb) != -1 && (sb.st_mode & 0xF000) == 0x8000 )
  {
    name = 0;
    v7 = Curl_rand_hex(data, randsuffix, 9);
    if ( !v7 )
    {
      v8 = curl_maprintf("%s.%s.tmp", filename, randsuffix);
      name = (char *)v8;
      if ( !v8 )
      {
        v7 = 27;
        goto LABEL_16;
      }
      v9 = open64(v8, 193, 384);
      if ( v9 == -1 )
        goto LABEL_17;
      fd = v9;
      v10 = fstat64(v9, &nsb);
      v11 = fd;
      if ( v10 == -1
        || nsb.st_uid != sb.st_uid
        || nsb.st_gid != sb.st_gid
        || (v13 = fchmod(fd, sb.st_mode), v11 = fd, v13 != -1) )
      {
        fda = v11;
        v12 = fdopen(v11, "w");
        *fh = v12;
        v11 = fda;
        if ( v12 )
        {
          *tempname = name;
          return 0;
        }
      }
      close(v11);
      unlink(name);
      v7 = 23;
    }
LABEL_16:
    v14 = v7;
    Curl_cfree(name);
    *tempname = 0;
    return v14;
  }
  name = (char *)fopen64(filename, "w");
  *fh = (FILE *)name;
  if ( !name )
  {
LABEL_17:
    v7 = 23;
    goto LABEL_16;
  }
  return 0;
}
