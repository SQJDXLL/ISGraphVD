CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  char *v7; // r4
  CURLcode v9; // r5
  int v10; // r0
  int v11; // r0
  int v12; // r5
  FILE *v13; // r0
  stat sb; // [sp+0h] [bp-100h] BYREF
  stat nsb; // [sp+68h] [bp-98h] BYREF
  unsigned __int8 randsuffix[9]; // [sp+D0h] [bp-30h] BYREF

  v7 = 0;
  *tempname = 0;
  if ( stat64(filename, &sb, &fstat64 + 8, 0) != -1 && (sb.st_mode & 0xF000) == 0x8000 )
  {
    v9 = Curl_rand_hex(data, randsuffix, 9);
    if ( v9 )
      goto LABEL_18;
    v10 = curl_maprintf("%s.%s.tmp", filename, (const char *)randsuffix);
    v7 = (char *)v10;
    if ( !v10 )
    {
      v9 = CURLE_OUT_OF_MEMORY;
      goto LABEL_18;
    }
    v11 = open64(v10, 193, 384);
    v12 = v11;
    if ( v11 == -1 )
    {
LABEL_4:
      v9 = CURLE_WRITE_ERROR;
LABEL_18:
      Curl_cfree(v7);
      *tempname = 0;
      return v9;
    }
    if ( fstat64(v11, &nsb) != -1 && nsb.st_uid == sb.st_uid && nsb.st_gid == sb.st_gid && fchmod(v12, sb.st_mode) == -1
      || (v13 = fdopen(v12, "w"), (*fh = v13) == 0) )
    {
      close(v12);
      unlink(v7);
      goto LABEL_4;
    }
    *tempname = v7;
  }
  else
  {
    v7 = (char *)fopen64(filename, "w");
    *fh = (FILE *)v7;
    if ( !v7 )
      goto LABEL_4;
  }
  return 0;
}
