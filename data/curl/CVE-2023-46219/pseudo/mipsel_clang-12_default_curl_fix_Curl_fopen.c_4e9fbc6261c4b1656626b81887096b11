int __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  size_t v8; // $v0
  size_t v9; // $s3
  size_t v10; // $v1
  int v11; // $at
  int v12; // $at
  int v13; // $s3
  char *v14; // $s5
  const char *v15; // $s4
  int v17; // $v0
  FILE *v18; // $v0
  int v19; // $v0
  __mode_t v20; // $s7
  int v21; // $v0
  int v22; // $v0
  int v23; // $v0
  int v24; // $s6
  FILE *v25; // $v0
  char v26[32]; // [sp+10h] [-170h] BYREF
  int v27; // [sp+30h] [-150h]
  int v28; // [sp+34h] [-14Ch]
  char v29[24]; // [sp+B0h] [-D0h] BYREF
  __mode_t v30; // [sp+C8h] [-B8h]
  int v31; // [sp+D0h] [-B0h]
  int v32; // [sp+D4h] [-ACh]
  char v33[44]; // [sp+154h] [-2Ch] BYREF

  *tempname = 0;
  Curl_dyn_init(v29, 8000000);
  v8 = strlen(filename);
  v9 = 0;
  if ( v8 )
  {
    do
    {
      v10 = v8;
      if ( !v8 )
        break;
      v11 = (unsigned __int8)filename[-1 + v8--];
    }
    while ( v11 != 47 );
    while ( v10 )
    {
      v12 = (unsigned __int8)filename[-1 + v10--];
      if ( v12 != 47 )
      {
        v9 = v10 + 1;
        break;
      }
    }
  }
  if ( Curl_dyn_addn(v29, filename, v9) || v9 && Curl_dyn_addn(v29, "/", 1) )
  {
    v13 = 23;
    v14 = 0;
    v15 = 0;
  }
  else
  {
    v17 = Curl_dyn_ptr(v29);
    v13 = 23;
    v14 = 0;
    if ( v17 )
    {
      v15 = (const char *)v17;
      v18 = (FILE *)fopen64(filename, "w");
      *fh = v18;
      if ( v18 )
      {
        v19 = fileno(v18);
        if ( fstat64(v19, v29) == -1 || (v20 = v30, (v30 & 0xF000) != 0x8000) )
        {
          Curl_cfree(v15);
          return 0;
        }
        fclose(*fh);
        *fh = 0;
        v21 = Curl_rand_alnum(data, v33, 41);
        if ( v21 )
        {
          v13 = v21;
        }
        else
        {
          v22 = curl_maprintf("%s%s.tmp", v15, v33);
          if ( v22 )
          {
            v14 = (char *)v22;
            v23 = open64(v22, 1281, 384);
            if ( v23 != -1 )
            {
              v24 = v23;
              if ( fstat64(v23, v26) == -1 || v27 != v31 || v28 != v32 || fchmod(v24, v20) != -1 )
              {
                v25 = fdopen(v24, "w");
                *fh = v25;
                if ( v25 )
                {
                  Curl_cfree(v15);
                  *tempname = v14;
                  return 0;
                }
              }
              close(v24);
              unlink(v14);
            }
          }
          else
          {
            v13 = 27;
            v14 = 0;
          }
        }
      }
    }
    else
    {
      v15 = 0;
    }
  }
  Curl_cfree(v14);
  Curl_cfree(v15);
  return v13;
}
