CURLcode __fastcall Curl_fopen(Curl_easy *data, const char *filename, FILE **fh, char **tempname)
{
  size_t v6; // r5
  size_t v9; // r0
  const char *v10; // r1
  size_t v11; // r2
  bool v12; // zf
  int v13; // r3
  int v14; // r0
  CURLcode v15; // r6
  char *v16; // r5
  const char *v17; // r7
  void (__fastcall **v18)(const char *); // r4
  int v20; // r0
  FILE *v21; // r0
  int v22; // r0
  __mode_t v23; // r4
  int v24; // r0
  int v25; // r0
  int v26; // r0
  int v27; // r9
  FILE *v28; // r0
  char v29[24]; // [sp+8h] [bp-120h] BYREF
  int v30; // [sp+20h] [bp-108h]
  int v31; // [sp+24h] [bp-104h]
  char v32[16]; // [sp+70h] [bp-B8h] BYREF
  __mode_t v33; // [sp+80h] [bp-A8h]
  int v34; // [sp+88h] [bp-A0h]
  int v35; // [sp+8Ch] [bp-9Ch]
  char v36[73]; // [sp+DFh] [bp-49h] BYREF

  v6 = 0;
  *tempname = 0;
  Curl_dyn_init(v32, 8000000);
  v9 = strlen(filename);
  if ( v9 )
  {
    v10 = filename + -0x1;
    do
    {
      v11 = v9;
      v12 = v9 == 0;
      if ( v9 )
      {
        v13 = (unsigned __int8)v10[v9--];
        v12 = v13 == 47;
      }
    }
    while ( !v12 );
    while ( v11 )
    {
      v14 = (unsigned __int8)v10[v11--];
      if ( v14 != 47 )
      {
        v6 = v11 + 1;
        break;
      }
    }
  }
  if ( Curl_dyn_addn(v32, filename, v6) || v6 && Curl_dyn_addn(v32, "/", 1) )
  {
    v15 = CURLE_WRITE_ERROR;
    v16 = 0;
LABEL_14:
    v17 = 0;
    goto LABEL_15;
  }
  v20 = Curl_dyn_ptr(v32);
  v15 = CURLE_WRITE_ERROR;
  v16 = 0;
  if ( !v20 )
    goto LABEL_14;
  v17 = (const char *)v20;
  v21 = (FILE *)fopen64(filename, "w");
  *fh = v21;
  if ( v21 )
  {
    v22 = fileno(v21);
    if ( fstat64(v22, v32) == -1 || (v23 = v33, (v33 & 0xF000) != 0x8000) )
    {
      ((void (__fastcall *)(const char *))*Curl_cfree)(v17);
      return 0;
    }
    fclose(*fh);
    v16 = 0;
    *fh = 0;
    v24 = Curl_rand_alnum(data, v36, 41);
    if ( v24 )
    {
      v15 = v24;
    }
    else
    {
      v25 = curl_maprintf("%s%s.tmp", v17, v36);
      if ( v25 )
      {
        v16 = (char *)v25;
        v26 = open64(v25, 193, 384);
        if ( v26 != -1 )
        {
          v27 = v26;
          if ( fstat64(v26, v29) == -1 || v30 != v34 || v31 != v35 || fchmod(v27, v23) != -1 )
          {
            v28 = fdopen(v27, "w");
            *fh = v28;
            if ( v28 )
            {
              ((void (__fastcall *)(const char *))*Curl_cfree)(v17);
              *tempname = v16;
              return 0;
            }
          }
          close(v27);
          unlink(v16);
        }
      }
      else
      {
        v15 = CURLE_OUT_OF_MEMORY;
        v16 = 0;
      }
    }
  }
LABEL_15:
  v18 = (void (__fastcall **)(const char *))Curl_cfree;
  ((void (__fastcall *)(char *))*Curl_cfree)(v16);
  (*v18)(v17);
  return v15;
}
