int __fastcall set_dns_listeners(time_t now)
{
  int v2; // edi
  tftp_transfer *tftp_trans; // ebx
  serverfd *i; // esi
  dnsmasq_daemon *v5; // eax
  int v6; // esi
  int v7; // ebx
  randfd *randomsocks; // eax
  randfd_list *j; // esi
  listener *k; // esi
  int tcpfd; // eax
  int v12; // ecx
  int tftpfd; // eax
  int v14; // esi
  int v15; // eax
  int v17[4]; // [esp+Ch] [ebp-10h] BYREF

  v17[0] = 0;
  v2 = 0;
  if ( (dnsmasq_daemon_0->options[1] & 0x10000000) == 0 )
  {
    tftp_trans = dnsmasq_daemon_0->tftp_trans;
    if ( tftp_trans )
    {
      v2 = 0;
      do
      {
        ++v2;
        poll_listen(tftp_trans->sockfd, 1);
        tftp_trans = tftp_trans->next;
      }
      while ( tftp_trans );
    }
  }
  if ( dnsmasq_daemon_0->port )
    get_new_frec(now, v17, 0);
  for ( i = dnsmasq_daemon_0->sfds; i; i = i->next )
    poll_listen(i->fd, 1);
  v5 = dnsmasq_daemon_0;
  if ( dnsmasq_daemon_0->numrrand > 0 )
  {
    v6 = 0;
    v7 = 8;
    do
    {
      randomsocks = v5->randomsocks;
      if ( *(_WORD *)((char *)&randomsocks->serv + v7) )
        poll_listen(*(_DWORD *)((char *)randomsocks + v7 - 4), 1);
      ++v6;
      v5 = dnsmasq_daemon_0;
      v7 += 12;
    }
    while ( v6 < dnsmasq_daemon_0->numrrand );
  }
  for ( j = v5->rfl_poll; j; j = j->next )
    poll_listen(j->rfd->fd, 1);
  for ( k = dnsmasq_daemon_0->listeners; k; k = k->next )
  {
    if ( k->fd != -1 && !v17[0] )
      poll_listen(k->fd, 1);
    tcpfd = k->tcpfd;
    if ( tcpfd != -1 )
    {
      v12 = -20;
      while ( dnsmasq_daemon_0->tcp_pipes[v12] || dnsmasq_daemon_0->tcp_pipes[v12 + 20] != -1 )
      {
        if ( !(++v12 * 4) )
          goto LABEL_28;
      }
      poll_listen(tcpfd, 1);
    }
LABEL_28:
    if ( v2 <= dnsmasq_daemon_0->tftp_max )
    {
      tftpfd = k->tftpfd;
      if ( tftpfd != -1 )
        poll_listen(tftpfd, 1);
    }
  }
  if ( (dnsmasq_daemon_0->options[0] & 0x40) == 0 )
  {
    v14 = -20;
    do
    {
      v15 = dnsmasq_daemon_0->tcp_pipes[v14 + 20];
      if ( v15 != -1 )
        poll_listen(v15, 1);
      ++v14;
    }
    while ( v14 * 4 );
  }
  return v17[0];
}
