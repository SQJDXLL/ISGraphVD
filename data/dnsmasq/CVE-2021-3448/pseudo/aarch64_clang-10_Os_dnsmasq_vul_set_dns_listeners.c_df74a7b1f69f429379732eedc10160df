int __fastcall set_dns_listeners(time_t now)
{
  __int64 v1; // x8
  unsigned int *v3; // x22
  int v4; // w21
  unsigned int *v5; // x19
  __int64 i; // x19
  unsigned int *v7; // x19
  __int64 v8; // x0
  __int64 v9; // x0
  __int64 v10; // x9
  __int64 v11; // x0
  __int64 j; // x19
  __int64 v13; // x0
  int wait; // [xsp+Ch] [xbp-4h] BYREF

  v1 = dnsmasq_daemon_0;
  wait = 0;
  if ( (*(_BYTE *)(dnsmasq_daemon_0 + 7) & 0x10) != 0 || (v3 = *(unsigned int **)(dnsmasq_daemon_0 + 1936)) == 0LL )
  {
    v4 = 0;
  }
  else
  {
    v4 = 0;
    do
    {
      ++v4;
      poll_listen(*v3, 1LL);
      v3 = (unsigned int *)*((_QWORD *)v3 + 13);
    }
    while ( v3 );
    v1 = dnsmasq_daemon_0;
  }
  if ( *(_DWORD *)(v1 + 412) )
  {
    get_new_frec(now, &wait, 0LL);
    v1 = dnsmasq_daemon_0;
  }
  v5 = *(unsigned int **)(v1 + 1016);
  if ( v5 )
  {
    do
    {
      poll_listen(*v5, 1LL);
      v5 = (unsigned int *)*((_QWORD *)v5 + 8);
    }
    while ( v5 );
    v1 = dnsmasq_daemon_0;
  }
  if ( *(_DWORD *)(v1 + 412) && !*(_DWORD *)(v1 + 260) )
  {
    for ( i = 1256LL; i != 1768; i += 8LL )
    {
      if ( *(_WORD *)(v1 + i) )
        poll_listen(*(unsigned int *)(v1 + i - 4), 1LL);
      v1 = dnsmasq_daemon_0;
    }
  }
  v7 = *(unsigned int **)(v1 + 1032);
  if ( v7 )
  {
    do
    {
      v8 = *v7;
      if ( (_DWORD)v8 != -1 && !wait )
        poll_listen(v8, 1LL);
      v9 = v7[1];
      if ( (_DWORD)v9 != -1 )
      {
        v10 = 0LL;
        while ( *(_DWORD *)(dnsmasq_daemon_0 + v10 + 1088) || *(_DWORD *)(dnsmasq_daemon_0 + v10 + 1168) != -1 )
        {
          v10 += 4LL;
          if ( v10 == 80 )
            goto LABEL_29;
        }
        poll_listen(v9, 1LL);
      }
LABEL_29:
      if ( v4 <= *(_DWORD *)(dnsmasq_daemon_0 + 748) )
      {
        v11 = v7[2];
        if ( (_DWORD)v11 != -1 )
          poll_listen(v11, 1LL);
      }
      v7 = (unsigned int *)*((_QWORD *)v7 + 7);
    }
    while ( v7 );
    v1 = dnsmasq_daemon_0;
  }
  if ( (*(_BYTE *)v1 & 0x40) == 0 )
  {
    for ( j = 1168LL; ; j += 4LL )
    {
      v13 = *(unsigned int *)(v1 + j);
      if ( (_DWORD)v13 != -1 )
        poll_listen(v13, 1LL);
      if ( j == 1244 )
        break;
      v1 = dnsmasq_daemon_0;
    }
  }
  return wait;
}
