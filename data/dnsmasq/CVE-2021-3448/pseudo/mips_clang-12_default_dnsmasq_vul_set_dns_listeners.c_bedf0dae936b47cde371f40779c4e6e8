int __fastcall set_dns_listeners(time_t now)
{
  tftp_transfer *i; // [sp+14h] [+14h]
  int v3; // [sp+18h] [+18h]
  int k; // [sp+1Ch] [+1Ch]
  int n; // [sp+1Ch] [+1Ch]
  int ii; // [sp+1Ch] [+1Ch]
  int v7; // [sp+20h] [+20h] BYREF
  listener *m; // [sp+24h] [+24h]
  serverfd *j; // [sp+28h] [+28h]
  time_t v10; // [sp+2Ch] [+2Ch]

  v10 = now;
  v7 = 0;
  v3 = 0;
  if ( (dnsmasq_daemon_0->options[1] & 0x10000000) == 0 )
  {
    for ( i = dnsmasq_daemon_0->tftp_trans; i; i = i->next )
    {
      ++v3;
      poll_listen(i->sockfd, 1);
    }
  }
  if ( dnsmasq_daemon_0->port )
    get_new_frec(v10, &v7, 0);
  for ( j = dnsmasq_daemon_0->sfds; j; j = j->next )
    poll_listen(j->fd, 1);
  if ( dnsmasq_daemon_0->port && !dnsmasq_daemon_0->osport )
  {
    for ( k = 0; k < 64; ++k )
    {
      if ( dnsmasq_daemon_0->randomsocks[k].refcount )
        poll_listen(dnsmasq_daemon_0->randomsocks[k].fd, 1);
    }
  }
  for ( m = dnsmasq_daemon_0->listeners; m; m = m->next )
  {
    if ( m->fd != -1 && !v7 )
      poll_listen(m->fd, 1);
    if ( m->tcpfd != -1 )
    {
      for ( n = 0; n < 20; ++n )
      {
        if ( !dnsmasq_daemon_0->tcp_pids[n] && dnsmasq_daemon_0->tcp_pipes[n] == -1 )
        {
          poll_listen(m->tcpfd, 1);
          break;
        }
      }
    }
    if ( dnsmasq_daemon_0->tftp_max >= v3 && m->tftpfd != -1 )
      poll_listen(m->tftpfd, 1);
  }
  if ( (dnsmasq_daemon_0->options[0] & 0x40) == 0 )
  {
    for ( ii = 0; ii < 20; ++ii )
    {
      if ( dnsmasq_daemon_0->tcp_pipes[ii] != -1 )
        poll_listen(dnsmasq_daemon_0->tcp_pipes[ii], 1);
    }
  }
  return v7;
}
