int __fastcall set_dns_listeners(time_t now)
{
  __int64 v1; // rax
  int v2; // ebp
  unsigned int *v3; // rbx
  unsigned int *v4; // rbx
  unsigned int *v5; // rbx
  __int64 v6; // rdi
  __int64 v7; // rdi
  __int64 v8; // rdi
  __int64 v9; // rdi
  __int64 v10; // rdi
  __int64 v11; // rdi
  __int64 v12; // rdi
  __int64 v13; // rdi
  __int64 v14; // rdi
  __int64 v15; // rdi
  __int64 v16; // rdi
  __int64 v17; // rdi
  __int64 v18; // rdi
  __int64 v19; // rdi
  __int64 v20; // rdi
  __int64 v21; // rdi
  __int64 v22; // rdi
  __int64 v23; // rdi
  __int64 v24; // rdi
  __int64 v25; // rdi
  __int64 v26; // rdi
  __int64 v27; // rdi
  __int64 v28; // rdi
  __int64 i; // rbx
  int v31[7]; // [rsp+Ch] [rbp-1Ch] BYREF

  v31[0] = 0;
  v1 = dnsmasq_daemon_0;
  v2 = 0;
  if ( (*(_BYTE *)(dnsmasq_daemon_0 + 7) & 0x10) == 0 )
  {
    v3 = *(unsigned int **)(dnsmasq_daemon_0 + 1936);
    if ( v3 )
    {
      v2 = 0;
      do
      {
        ++v2;
        poll_listen(*v3, 1LL);
        v3 = (unsigned int *)*((_QWORD *)v3 + 13);
      }
      while ( v3 );
      v1 = dnsmasq_daemon_0;
    }
  }
  if ( *(_DWORD *)(v1 + 412) )
  {
    get_new_frec(now, v31, 0LL);
    v1 = dnsmasq_daemon_0;
  }
  v4 = *(unsigned int **)(v1 + 1016);
  if ( v4 )
  {
    do
    {
      poll_listen(*v4, 1LL);
      v4 = (unsigned int *)*((_QWORD *)v4 + 8);
    }
    while ( v4 );
    v1 = dnsmasq_daemon_0;
  }
  if ( *(_DWORD *)(v1 + 412) && !*(_DWORD *)(v1 + 260) )
  {
    for ( i = 0LL; i != 64; ++i )
    {
      if ( *(_WORD *)(v1 + 8 * i + 1256) )
        poll_listen(*(unsigned int *)(v1 + 8 * i + 1252), 1LL);
      v1 = dnsmasq_daemon_0;
    }
  }
  v5 = *(unsigned int **)(v1 + 1032);
  if ( !v5 )
  {
    if ( (*(_BYTE *)v1 & 0x40) != 0 )
      return v31[0];
    goto LABEL_66;
  }
  do
  {
    v6 = *v5;
    if ( (_DWORD)v6 != -1 && !v31[0] )
      poll_listen(v6, 1LL);
    v7 = v5[1];
    if ( (_DWORD)v7 != -1
      && (!*(_DWORD *)(dnsmasq_daemon_0 + 1088) && *(_DWORD *)(dnsmasq_daemon_0 + 1168) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1092) && *(_DWORD *)(dnsmasq_daemon_0 + 1172) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1096) && *(_DWORD *)(dnsmasq_daemon_0 + 1176) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1100) && *(_DWORD *)(dnsmasq_daemon_0 + 1180) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1104) && *(_DWORD *)(dnsmasq_daemon_0 + 1184) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1108) && *(_DWORD *)(dnsmasq_daemon_0 + 1188) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1112) && *(_DWORD *)(dnsmasq_daemon_0 + 1192) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1116) && *(_DWORD *)(dnsmasq_daemon_0 + 1196) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1120) && *(_DWORD *)(dnsmasq_daemon_0 + 1200) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1124) && *(_DWORD *)(dnsmasq_daemon_0 + 1204) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1128) && *(_DWORD *)(dnsmasq_daemon_0 + 1208) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1132) && *(_DWORD *)(dnsmasq_daemon_0 + 1212) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1136) && *(_DWORD *)(dnsmasq_daemon_0 + 1216) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1140) && *(_DWORD *)(dnsmasq_daemon_0 + 1220) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1144) && *(_DWORD *)(dnsmasq_daemon_0 + 1224) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1148) && *(_DWORD *)(dnsmasq_daemon_0 + 1228) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1152) && *(_DWORD *)(dnsmasq_daemon_0 + 1232) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1156) && *(_DWORD *)(dnsmasq_daemon_0 + 1236) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1160) && *(_DWORD *)(dnsmasq_daemon_0 + 1240) == -1
       || !*(_DWORD *)(dnsmasq_daemon_0 + 1164) && *(_DWORD *)(dnsmasq_daemon_0 + 1244) == -1) )
    {
      poll_listen(v7, 1LL);
    }
    if ( v2 <= *(_DWORD *)(dnsmasq_daemon_0 + 748) )
    {
      v8 = v5[2];
      if ( (_DWORD)v8 != -1 )
        poll_listen(v8, 1LL);
    }
    v5 = (unsigned int *)*((_QWORD *)v5 + 7);
  }
  while ( v5 );
  v1 = dnsmasq_daemon_0;
  if ( (*(_BYTE *)dnsmasq_daemon_0 & 0x40) == 0 )
  {
LABEL_66:
    v9 = *(unsigned int *)(v1 + 1168);
    if ( (_DWORD)v9 != -1 )
    {
      poll_listen(v9, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v10 = *(unsigned int *)(v1 + 1172);
    if ( (_DWORD)v10 != -1 )
    {
      poll_listen(v10, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v11 = *(unsigned int *)(v1 + 1176);
    if ( (_DWORD)v11 != -1 )
    {
      poll_listen(v11, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v12 = *(unsigned int *)(v1 + 1180);
    if ( (_DWORD)v12 != -1 )
    {
      poll_listen(v12, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v13 = *(unsigned int *)(v1 + 1184);
    if ( (_DWORD)v13 != -1 )
    {
      poll_listen(v13, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v14 = *(unsigned int *)(v1 + 1188);
    if ( (_DWORD)v14 != -1 )
    {
      poll_listen(v14, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v15 = *(unsigned int *)(v1 + 1192);
    if ( (_DWORD)v15 != -1 )
    {
      poll_listen(v15, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v16 = *(unsigned int *)(v1 + 1196);
    if ( (_DWORD)v16 != -1 )
    {
      poll_listen(v16, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v17 = *(unsigned int *)(v1 + 1200);
    if ( (_DWORD)v17 != -1 )
    {
      poll_listen(v17, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v18 = *(unsigned int *)(v1 + 1204);
    if ( (_DWORD)v18 != -1 )
    {
      poll_listen(v18, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v19 = *(unsigned int *)(v1 + 1208);
    if ( (_DWORD)v19 != -1 )
    {
      poll_listen(v19, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v20 = *(unsigned int *)(v1 + 1212);
    if ( (_DWORD)v20 != -1 )
    {
      poll_listen(v20, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v21 = *(unsigned int *)(v1 + 1216);
    if ( (_DWORD)v21 != -1 )
    {
      poll_listen(v21, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v22 = *(unsigned int *)(v1 + 1220);
    if ( (_DWORD)v22 != -1 )
    {
      poll_listen(v22, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v23 = *(unsigned int *)(v1 + 1224);
    if ( (_DWORD)v23 != -1 )
    {
      poll_listen(v23, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v24 = *(unsigned int *)(v1 + 1228);
    if ( (_DWORD)v24 != -1 )
    {
      poll_listen(v24, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v25 = *(unsigned int *)(v1 + 1232);
    if ( (_DWORD)v25 != -1 )
    {
      poll_listen(v25, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v26 = *(unsigned int *)(v1 + 1236);
    if ( (_DWORD)v26 != -1 )
    {
      poll_listen(v26, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v27 = *(unsigned int *)(v1 + 1240);
    if ( (_DWORD)v27 != -1 )
    {
      poll_listen(v27, 1LL);
      v1 = dnsmasq_daemon_0;
    }
    v28 = *(unsigned int *)(v1 + 1244);
    if ( (_DWORD)v28 != -1 )
      poll_listen(v28, 1LL);
  }
  return v31[0];
}
