__int64 __usercall set_dns_listeners@<edx:eax>(time_t now@<eax>)
{
  int v1; // edi
  dnsmasq_daemon *v3; // eax
  tftp_transfer *tftp_trans; // ebp
  serverfd *sfds; // esi
  int osport; // esi
  int v7; // edx
  listener *listeners; // esi
  int tftpfd; // eax
  int tcpfd; // ebp
  dnsmasq_daemon *v11; // ecx
  dnsmasq_daemon *tcp_pids; // eax
  int v13; // esi
  int v14; // eax
  __int64 result; // rax
  int wait; // [esp+0h] [ebp-24h] BYREF
  unsigned int v17; // [esp+4h] [ebp-20h]

  v1 = 0;
  v17 = __readgsdword(0x14u);
  wait = 0;
  v3 = dnsmasq_daemon_0;
  if ( (dnsmasq_daemon_0->options[1] & 0x10000000) == 0 )
  {
    tftp_trans = dnsmasq_daemon_0->tftp_trans;
    if ( tftp_trans )
    {
      do
      {
        ++v1;
        poll_listen(tftp_trans->sockfd, 1);
        tftp_trans = tftp_trans->next;
      }
      while ( tftp_trans );
      v3 = dnsmasq_daemon_0;
    }
  }
  if ( v3->port )
  {
    get_new_frec(now, &wait, 0);
    v3 = dnsmasq_daemon_0;
    sfds = dnsmasq_daemon_0->sfds;
    if ( !sfds )
      goto LABEL_9;
  }
  else
  {
    sfds = v3->sfds;
    if ( !sfds )
      goto LABEL_15;
  }
  do
  {
    poll_listen(sfds->fd, 1);
    sfds = sfds->next;
  }
  while ( sfds );
  v3 = dnsmasq_daemon_0;
LABEL_9:
  if ( v3->port )
  {
    osport = v3->osport;
    if ( !osport )
    {
      do
      {
        while ( 1 )
        {
          v7 = osport + 100;
          if ( v3->randomsocks[osport].refcount )
            break;
          if ( ++osport == 64 )
            goto LABEL_15;
        }
        ++osport;
        poll_listen(v3->options[2 * v7], 1);
        v3 = dnsmasq_daemon_0;
      }
      while ( osport != 64 );
    }
  }
LABEL_15:
  listeners = v3->listeners;
  if ( listeners )
  {
    do
    {
      if ( listeners->fd != -1 && !wait )
        poll_listen(listeners->fd, 1);
      tcpfd = listeners->tcpfd;
      v11 = dnsmasq_daemon_0;
      if ( tcpfd != -1 )
      {
        tcp_pids = (dnsmasq_daemon *)dnsmasq_daemon_0->tcp_pids;
        while ( tcp_pids->options[0] || tcp_pids->auth_zones != (auth_zone *)-1 )
        {
          tcp_pids = (dnsmasq_daemon *)((char *)tcp_pids + 4);
          if ( tcp_pids == (dnsmasq_daemon *)dnsmasq_daemon_0->tcp_pipes )
            goto LABEL_17;
        }
        poll_listen(tcpfd, 1);
        v11 = dnsmasq_daemon_0;
      }
LABEL_17:
      if ( v11->tftp_max >= v1 )
      {
        tftpfd = listeners->tftpfd;
        if ( tftpfd != -1 )
          poll_listen(tftpfd, 1);
      }
      listeners = listeners->next;
    }
    while ( listeners );
    v3 = dnsmasq_daemon_0;
  }
  if ( (v3->options[0] & 0x40) == 0 )
  {
    v13 = 0;
    while ( 1 )
    {
      v14 = v3->tcp_pipes[v13];
      if ( v14 != -1 )
        poll_listen(v14, 1);
      if ( ++v13 == 20 )
        break;
      v3 = dnsmasq_daemon_0;
    }
  }
  LODWORD(result) = wait;
  HIDWORD(result) = v17 - __readgsdword(0x14u);
  return result;
}
