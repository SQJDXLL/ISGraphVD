int __fastcall set_dns_listeners(time_t now)
{
  dnsmasq_daemon *v2; // eax
  int v3; // edi
  tftp_transfer *tftp_trans; // ebx
  serverfd *sfds; // esi
  int i; // esi
  listener *listeners; // esi
  int tcpfd; // eax
  int v9; // ecx
  int tftpfd; // eax
  int j; // esi
  int v12; // eax
  int v14[4]; // [esp+Ch] [ebp-10h] BYREF

  v14[0] = 0;
  v2 = dnsmasq_daemon_0;
  v3 = 0;
  if ( (dnsmasq_daemon_0->options[1] & 0x10000000) == 0 )
  {
    tftp_trans = dnsmasq_daemon_0->tftp_trans;
    if ( tftp_trans )
    {
      v3 = 0;
      do
      {
        ++v3;
        poll_listen(tftp_trans->sockfd, 1);
        tftp_trans = tftp_trans->next;
      }
      while ( tftp_trans );
      v2 = dnsmasq_daemon_0;
    }
  }
  if ( v2->port )
  {
    get_new_frec(now, v14, 0);
    v2 = dnsmasq_daemon_0;
  }
  sfds = v2->sfds;
  if ( sfds )
  {
    do
    {
      poll_listen(sfds->fd, 1);
      sfds = sfds->next;
    }
    while ( sfds );
    v2 = dnsmasq_daemon_0;
  }
  if ( v2->port && !v2->osport )
  {
    for ( i = 0; i != 64; ++i )
    {
      if ( v2->randomsocks[i].refcount )
        poll_listen(v2->randomsocks[i].fd, 1);
      v2 = dnsmasq_daemon_0;
    }
  }
  listeners = v2->listeners;
  if ( listeners )
  {
    do
    {
      if ( listeners->fd != -1 && !v14[0] )
        poll_listen(listeners->fd, 1);
      tcpfd = listeners->tcpfd;
      if ( tcpfd != -1 )
      {
        v9 = -20;
        while ( dnsmasq_daemon_0->tcp_pipes[v9] || dnsmasq_daemon_0->tcp_pipes[v9 + 20] != -1 )
        {
          if ( !(++v9 * 4) )
            goto LABEL_28;
        }
        poll_listen(tcpfd, 1);
      }
LABEL_28:
      if ( v3 <= dnsmasq_daemon_0->tftp_max )
      {
        tftpfd = listeners->tftpfd;
        if ( tftpfd != -1 )
          poll_listen(tftpfd, 1);
      }
      listeners = listeners->next;
    }
    while ( listeners );
    v2 = dnsmasq_daemon_0;
  }
  if ( (v2->options[0] & 0x40) == 0 )
  {
    for ( j = 0; ; ++j )
    {
      v12 = v2->tcp_pipes[j];
      if ( v12 != -1 )
        poll_listen(v12, 1);
      if ( j == 19 )
        break;
      v2 = dnsmasq_daemon_0;
    }
  }
  return v14[0];
}
