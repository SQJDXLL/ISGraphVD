int __fastcall set_dns_listeners(time_t now)
{
  dnsmasq_daemon *v1; // x1
  unsigned __int64 v3; // x2
  int v4; // w21
  unsigned int v5; // w0
  int *tcp_pipes; // x3
  tftp_transfer *tftp_trans; // x19
  serverfd *sfds; // x19
  int osport; // w19
  char *v10; // x0
  listener *listeners; // x19
  __int64 tftpfd; // x0
  __int64 fd; // x0
  __int64 tcpfd; // x0
  dnsmasq_daemon *v15; // x4
  pid_t *tcp_pids; // x1
  int v17; // w19
  __int64 v18; // x0
  int wait; // [xsp+34h] [xbp+34h] BYREF

  v1 = dnsmasq_daemon_0;
  v3 = (unsigned __int64)&_stack_chk_guard;
  v4 = 0;
  v5 = dnsmasq_daemon_0->options[1];
  tcp_pipes = 0LL;
  wait = 0;
  if ( (v5 & 0x10000000) == 0 )
  {
    tftp_trans = dnsmasq_daemon_0->tftp_trans;
    if ( tftp_trans )
    {
      do
      {
        ++v4;
        poll_listen((unsigned int)tftp_trans->sockfd, 1LL, v3, tcp_pipes);
        tftp_trans = tftp_trans->next;
      }
      while ( tftp_trans );
      v1 = dnsmasq_daemon_0;
    }
  }
  if ( v1->port )
  {
    get_new_frec(now, &wait, 0LL, tcp_pipes);
    v1 = dnsmasq_daemon_0;
    sfds = dnsmasq_daemon_0->sfds;
    if ( !sfds )
      goto LABEL_9;
  }
  else
  {
    sfds = v1->sfds;
    if ( !sfds )
      goto LABEL_15;
  }
  do
  {
    poll_listen((unsigned int)sfds->fd, 1LL, v3, tcp_pipes);
    sfds = sfds->next;
  }
  while ( sfds );
  v1 = dnsmasq_daemon_0;
LABEL_9:
  if ( v1->port )
  {
    osport = v1->osport;
    if ( !osport )
    {
      do
      {
        while ( 1 )
        {
          v10 = (char *)v1 + 8 * osport;
          v3 = *((unsigned __int16 *)v10 + 628);
          if ( *((_WORD *)v10 + 628) )
            break;
          if ( ++osport == 64 )
            goto LABEL_15;
        }
        ++osport;
        poll_listen(*((unsigned int *)v10 + 313), 1LL, v3, tcp_pipes);
        v1 = dnsmasq_daemon_0;
      }
      while ( osport != 64 );
    }
  }
LABEL_15:
  listeners = v1->listeners;
  if ( listeners )
  {
    do
    {
      fd = (unsigned int)listeners->fd;
      if ( (_DWORD)fd != -1 && !wait )
        poll_listen(fd, 1LL, v3, tcp_pipes);
      tcpfd = (unsigned int)listeners->tcpfd;
      v15 = dnsmasq_daemon_0;
      if ( (_DWORD)tcpfd != -1 )
      {
        tcp_pids = dnsmasq_daemon_0->tcp_pids;
        tcp_pipes = dnsmasq_daemon_0->tcp_pipes;
        while ( 1 )
        {
          v3 = (unsigned int)*tcp_pids;
          if ( !(_DWORD)v3 )
          {
            v3 = (unsigned int)tcp_pids[20];
            if ( (_DWORD)v3 == -1 )
              break;
          }
          if ( tcp_pipes == ++tcp_pids )
            goto LABEL_17;
        }
        poll_listen(tcpfd, 1LL, v3, tcp_pipes);
        v15 = dnsmasq_daemon_0;
      }
LABEL_17:
      if ( v15->tftp_max >= v4 )
      {
        tftpfd = (unsigned int)listeners->tftpfd;
        if ( (_DWORD)tftpfd != -1 )
          poll_listen(tftpfd, 1LL, v3, tcp_pipes);
      }
      listeners = listeners->next;
    }
    while ( listeners );
    v1 = dnsmasq_daemon_0;
  }
  if ( (v1->options[0] & 0x40) == 0 )
  {
    v17 = 0;
    while ( 1 )
    {
      v18 = (unsigned int)v1->tcp_pipes[v17];
      if ( (_DWORD)v18 != -1 )
        poll_listen(v18, 1LL, v3, tcp_pipes);
      if ( ++v17 == 20 )
        break;
      v1 = dnsmasq_daemon_0;
    }
  }
  return wait;
}
