int __fastcall set_dns_listeners(time_t now)
{
  int v1; // ebp
  unsigned int *v2; // rbx
  unsigned int *i; // rbx
  unsigned int *k; // rbx
  __int64 v5; // rdi
  __int64 v6; // rdi
  __int64 v7; // rax
  __int64 v8; // rdi
  __int64 m; // rbx
  __int64 v10; // rdi
  __int64 j; // rbx
  int v13[7]; // [rsp+Ch] [rbp-1Ch] BYREF

  v13[0] = 0;
  v1 = 0;
  if ( (*(_BYTE *)(dnsmasq_daemon_0 + 7) & 0x10) == 0 )
  {
    v2 = *(unsigned int **)(dnsmasq_daemon_0 + 1936);
    if ( v2 )
    {
      v1 = 0;
      do
      {
        ++v1;
        poll_listen(*v2, 1LL);
        v2 = (unsigned int *)*((_QWORD *)v2 + 13);
      }
      while ( v2 );
    }
  }
  if ( *(_DWORD *)(dnsmasq_daemon_0 + 412) )
    get_new_frec(now, v13, 0LL);
  for ( i = *(unsigned int **)(dnsmasq_daemon_0 + 1016); i; i = (unsigned int *)*((_QWORD *)i + 8) )
    poll_listen(*i, 1LL);
  if ( *(_DWORD *)(dnsmasq_daemon_0 + 412) && !*(_DWORD *)(dnsmasq_daemon_0 + 260) )
  {
    for ( j = 0LL; j != 64; ++j )
    {
      if ( *(_WORD *)(dnsmasq_daemon_0 + 8 * j + 1256) )
        poll_listen(*(unsigned int *)(dnsmasq_daemon_0 + 8 * j + 1252), 1LL);
    }
  }
  for ( k = *(unsigned int **)(dnsmasq_daemon_0 + 1032); k; k = (unsigned int *)*((_QWORD *)k + 7) )
  {
    v5 = *k;
    if ( (_DWORD)v5 != -1 && !v13[0] )
      poll_listen(v5, 1LL);
    v6 = k[1];
    if ( (_DWORD)v6 != -1 )
    {
      v7 = -20LL;
      while ( *(_DWORD *)(dnsmasq_daemon_0 + 4 * v7 + 1168) || *(_DWORD *)(dnsmasq_daemon_0 + 4 * v7 + 1248) != -1 )
      {
        if ( !++v7 )
          goto LABEL_23;
      }
      poll_listen(v6, 1LL);
    }
LABEL_23:
    if ( v1 <= *(_DWORD *)(dnsmasq_daemon_0 + 748) )
    {
      v8 = k[2];
      if ( (_DWORD)v8 != -1 )
        poll_listen(v8, 1LL);
    }
  }
  if ( (*(_BYTE *)dnsmasq_daemon_0 & 0x40) == 0 )
  {
    for ( m = 0LL; m != 20; ++m )
    {
      v10 = *(unsigned int *)(dnsmasq_daemon_0 + 4 * m + 1168);
      if ( (_DWORD)v10 != -1 )
        poll_listen(v10, 1LL);
    }
  }
  return v13[0];
}
