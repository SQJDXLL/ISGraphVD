__int64 __usercall set_dns_listeners@<edx:eax>(time_t now@<eax>)
{
  int v2; // esi
  tftp_transfer *tftp_trans; // edi
  serverfd *sfds; // edi
  int osport; // edi
  listener *i; // edi
  int j; // esi
  dnsmasq_daemon *tcp_pids; // eax
  int tcpfd; // ecx
  int tftpfd; // eax
  int v11; // eax
  __int64 result; // rax
  int wait; // [esp+8h] [ebp-24h] BYREF
  unsigned int v14; // [esp+Ch] [ebp-20h]

  v14 = __readgsdword(0x14u);
  wait = 0;
  v2 = 0;
  if ( (dnsmasq_daemon_0->options[1] & 0x10000000) == 0 )
  {
    tftp_trans = dnsmasq_daemon_0->tftp_trans;
    if ( tftp_trans )
    {
      do
      {
        ++v2;
        poll_listen(tftp_trans->sockfd, 1);
        tftp_trans = tftp_trans->next;
      }
      while ( tftp_trans );
    }
    else
    {
      v2 = 0;
    }
  }
  if ( dnsmasq_daemon_0->port )
  {
    get_new_frec(now, &wait, 0);
    sfds = dnsmasq_daemon_0->sfds;
    if ( !sfds )
      goto LABEL_7;
  }
  else
  {
    sfds = dnsmasq_daemon_0->sfds;
    if ( !sfds )
      goto LABEL_9;
  }
  do
  {
    poll_listen(sfds->fd, 1);
    sfds = sfds->next;
  }
  while ( sfds );
LABEL_7:
  if ( dnsmasq_daemon_0->port )
  {
    osport = dnsmasq_daemon_0->osport;
    if ( !osport )
    {
      do
      {
        if ( dnsmasq_daemon_0->randomsocks[osport].refcount )
          poll_listen(dnsmasq_daemon_0->randomsocks[osport].fd, 1);
        ++osport;
      }
      while ( osport != 64 );
    }
  }
LABEL_9:
  for ( i = dnsmasq_daemon_0->listeners; i; i = i->next )
  {
    if ( i->fd != -1 && !wait )
      poll_listen(i->fd, 1);
    tcpfd = i->tcpfd;
    if ( tcpfd != -1 )
    {
      tcp_pids = (dnsmasq_daemon *)dnsmasq_daemon_0->tcp_pids;
      while ( tcp_pids->options[0] || tcp_pids->auth_zones != (auth_zone *)-1 )
      {
        tcp_pids = (dnsmasq_daemon *)((char *)tcp_pids + 4);
        if ( tcp_pids == (dnsmasq_daemon *)dnsmasq_daemon_0->tcp_pipes )
          goto LABEL_28;
      }
      poll_listen(tcpfd, 1);
    }
LABEL_28:
    if ( dnsmasq_daemon_0->tftp_max >= v2 )
    {
      tftpfd = i->tftpfd;
      if ( tftpfd != -1 )
        poll_listen(tftpfd, 1);
    }
  }
  if ( (dnsmasq_daemon_0->options[0] & 0x40) == 0 )
  {
    for ( j = 0; j != 20; ++j )
    {
      v11 = dnsmasq_daemon_0->tcp_pipes[j];
      if ( v11 != -1 )
        poll_listen(v11, 1);
    }
  }
  LODWORD(result) = wait;
  HIDWORD(result) = v14 - __readgsdword(0x14u);
  return result;
}
