int __cdecl set_dns_listeners(time_t now)
{
  tftp_transfer *i; // [xsp+0h] [xbp-30h]
  int v3; // [xsp+Ch] [xbp-24h]
  int j; // [xsp+10h] [xbp-20h]
  int m; // [xsp+10h] [xbp-20h]
  int n; // [xsp+10h] [xbp-20h]
  int v7; // [xsp+14h] [xbp-1Ch] BYREF
  listener *k; // [xsp+18h] [xbp-18h]
  serverfd *serverfdp; // [xsp+20h] [xbp-10h]
  time_t nowa; // [xsp+28h] [xbp-8h]

  nowa = now;
  v7 = 0;
  v3 = 0;
  if ( (dnsmasq_daemon_0->options[1] & 0x10000000) == 0 )
  {
    for ( i = dnsmasq_daemon_0->tftp_trans; i; i = i->next )
    {
      ++v3;
      poll_listen((unsigned int)i->sockfd, 1LL);
    }
  }
  if ( dnsmasq_daemon_0->port )
    get_new_frec(nowa, &v7, 0LL);
  for ( serverfdp = dnsmasq_daemon_0->sfds; serverfdp; serverfdp = serverfdp->next )
    poll_listen((unsigned int)serverfdp->fd, 1LL);
  if ( dnsmasq_daemon_0->port && !dnsmasq_daemon_0->osport )
  {
    for ( j = 0; j < 64; ++j )
    {
      if ( dnsmasq_daemon_0->randomsocks[j].refcount )
        poll_listen((unsigned int)dnsmasq_daemon_0->randomsocks[j].fd, 1LL);
    }
  }
  for ( k = dnsmasq_daemon_0->listeners; k; k = k->next )
  {
    if ( k->fd != -1 && !v7 )
      poll_listen((unsigned int)k->fd, 1LL);
    if ( k->tcpfd != -1 )
    {
      for ( m = 0; m < 20; ++m )
      {
        if ( !dnsmasq_daemon_0->tcp_pids[m] && dnsmasq_daemon_0->tcp_pipes[m] == -1 )
        {
          poll_listen((unsigned int)k->tcpfd, 1LL);
          break;
        }
      }
    }
    if ( v3 <= dnsmasq_daemon_0->tftp_max && k->tftpfd != -1 )
      poll_listen((unsigned int)k->tftpfd, 1LL);
  }
  if ( (dnsmasq_daemon_0->options[0] & 0x40) == 0 )
  {
    for ( n = 0; n < 20; ++n )
    {
      if ( dnsmasq_daemon_0->tcp_pipes[n] != -1 )
        poll_listen((unsigned int)dnsmasq_daemon_0->tcp_pipes[n], 1LL);
    }
  }
  return v7;
}
