int __fastcall set_dns_listeners(time_t now)
{
  int v1; // r14d
  unsigned int *v2; // rbp
  unsigned int *i; // rbx
  __int64 v4; // rax
  __int64 v5; // rbx
  __int64 v6; // rbp
  __int64 v7; // rax
  _QWORD *j; // rbx
  unsigned int *k; // rbx
  __int64 v10; // rdi
  __int64 v11; // rdi
  __int64 v12; // rax
  __int64 v13; // rdi
  __int64 m; // rbx
  __int64 v15; // rdi
  int v17[7]; // [rsp+Ch] [rbp-1Ch] BYREF

  v17[0] = 0;
  v1 = 0;
  if ( (*(_BYTE *)(dnsmasq_daemon_0 + 7) & 0x10) == 0 )
  {
    v2 = *(unsigned int **)(dnsmasq_daemon_0 + 1456);
    if ( v2 )
    {
      v1 = 0;
      do
      {
        ++v1;
        poll_listen(*v2, 1LL);
        v2 = (unsigned int *)*((_QWORD *)v2 + 13);
      }
      while ( v2 );
    }
  }
  if ( *(_DWORD *)(dnsmasq_daemon_0 + 412) )
    get_new_frec(now, v17, 0LL);
  for ( i = *(unsigned int **)(dnsmasq_daemon_0 + 1016); i; i = (unsigned int *)*((_QWORD *)i + 8) )
    poll_listen(*i, 1LL);
  v4 = dnsmasq_daemon_0;
  if ( *(int *)(dnsmasq_daemon_0 + 1248) > 0 )
  {
    v5 = 12LL;
    v6 = 0LL;
    do
    {
      v7 = *(_QWORD *)(v4 + 1256);
      if ( *(_WORD *)(v7 + v5) )
        poll_listen(*(unsigned int *)(v7 + v5 - 4), 1LL);
      ++v6;
      v4 = dnsmasq_daemon_0;
      v5 += 16LL;
    }
    while ( v6 < *(int *)(dnsmasq_daemon_0 + 1248) );
  }
  for ( j = *(_QWORD **)(v4 + 1272); j; j = (_QWORD *)j[1] )
    poll_listen(*(unsigned int *)(*j + 8LL), 1LL);
  for ( k = *(unsigned int **)(dnsmasq_daemon_0 + 1032); k; k = (unsigned int *)*((_QWORD *)k + 7) )
  {
    v10 = *k;
    if ( (_DWORD)v10 != -1 && !v17[0] )
      poll_listen(v10, 1LL);
    v11 = k[1];
    if ( (_DWORD)v11 != -1 )
    {
      v12 = -20LL;
      while ( *(_DWORD *)(dnsmasq_daemon_0 + 4 * v12 + 1164) || *(_DWORD *)(dnsmasq_daemon_0 + 4 * v12 + 1244) != -1 )
      {
        if ( !++v12 )
          goto LABEL_28;
      }
      poll_listen(v11, 1LL);
    }
LABEL_28:
    if ( v1 <= *(_DWORD *)(dnsmasq_daemon_0 + 748) )
    {
      v13 = k[2];
      if ( (_DWORD)v13 != -1 )
        poll_listen(v13, 1LL);
    }
  }
  if ( (*(_BYTE *)dnsmasq_daemon_0 & 0x40) == 0 )
  {
    for ( m = 0LL; m != 20; ++m )
    {
      v15 = *(unsigned int *)(dnsmasq_daemon_0 + 4 * m + 1164);
      if ( (_DWORD)v15 != -1 )
        poll_listen(v15, 1LL);
    }
  }
  return v17[0];
}
