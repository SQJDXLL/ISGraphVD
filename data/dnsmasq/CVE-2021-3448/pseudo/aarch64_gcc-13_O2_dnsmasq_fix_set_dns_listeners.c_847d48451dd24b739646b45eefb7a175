int __fastcall set_dns_listeners(time_t now)
{
  dnsmasq_daemon *v1; // x1
  unsigned __int64 v3; // x2
  int v4; // w21
  unsigned int v5; // w0
  int *tcp_pipes; // x3
  tftp_transfer *tftp_trans; // x19
  serverfd *sfds; // x19
  __int64 v9; // x22
  int v10; // w19
  randfd *v11; // x0
  randfd_list *i; // x19
  dnsmasq_daemon *v13; // x0
  listener *listeners; // x19
  __int64 tftpfd; // x0
  __int64 fd; // x0
  __int64 tcpfd; // x0
  dnsmasq_daemon *v18; // x4
  pid_t *tcp_pids; // x1
  int v20; // w19
  __int64 v21; // x0
  int wait; // [xsp+34h] [xbp+34h] BYREF

  v1 = dnsmasq_daemon_0;
  v3 = (unsigned __int64)&_stack_chk_guard;
  v4 = 0;
  v5 = dnsmasq_daemon_0->options[1];
  tcp_pipes = 0LL;
  wait = 0;
  if ( (v5 & 0x10000000) == 0 )
  {
    tftp_trans = dnsmasq_daemon_0->tftp_trans;
    if ( tftp_trans )
    {
      do
      {
        ++v4;
        poll_listen((unsigned int)tftp_trans->sockfd, 1LL, v3, tcp_pipes);
        tftp_trans = tftp_trans->next;
      }
      while ( tftp_trans );
      v1 = dnsmasq_daemon_0;
    }
  }
  if ( v1->port )
  {
    get_new_frec(now, &wait, 0LL, tcp_pipes);
    v1 = dnsmasq_daemon_0;
  }
  sfds = v1->sfds;
  if ( sfds )
  {
    do
    {
      poll_listen((unsigned int)sfds->fd, 1LL, v3, tcp_pipes);
      sfds = sfds->next;
    }
    while ( sfds );
    v1 = dnsmasq_daemon_0;
  }
  if ( v1->numrrand > 0 )
  {
    v9 = 0LL;
    v10 = 0;
    do
    {
      while ( 1 )
      {
        v11 = &v1->randomsocks[v9];
        if ( v11->refcount )
          break;
        v1 = dnsmasq_daemon_0;
        ++v10;
        ++v9;
        if ( dnsmasq_daemon_0->numrrand <= v10 )
          goto LABEL_15;
      }
      ++v10;
      ++v9;
      poll_listen((unsigned int)v11->fd, 1LL, v3, tcp_pipes);
      v1 = dnsmasq_daemon_0;
    }
    while ( dnsmasq_daemon_0->numrrand > v10 );
  }
LABEL_15:
  for ( i = v1->rfl_poll; i; i = i->next )
    poll_listen((unsigned int)i->rfd->fd, 1LL, v3, tcp_pipes);
  v13 = dnsmasq_daemon_0;
  listeners = dnsmasq_daemon_0->listeners;
  if ( listeners )
  {
    do
    {
      fd = (unsigned int)listeners->fd;
      if ( (_DWORD)fd != -1 && !wait )
        poll_listen(fd, 1LL, v3, tcp_pipes);
      tcpfd = (unsigned int)listeners->tcpfd;
      v18 = dnsmasq_daemon_0;
      if ( (_DWORD)tcpfd != -1 )
      {
        tcp_pids = dnsmasq_daemon_0->tcp_pids;
        tcp_pipes = dnsmasq_daemon_0->tcp_pipes;
        while ( 1 )
        {
          v3 = (unsigned int)*tcp_pids;
          if ( !(_DWORD)v3 )
          {
            v3 = (unsigned int)tcp_pids[20];
            if ( (_DWORD)v3 == -1 )
              break;
          }
          if ( tcp_pipes == ++tcp_pids )
            goto LABEL_19;
        }
        poll_listen(tcpfd, 1LL, v3, tcp_pipes);
        v18 = dnsmasq_daemon_0;
      }
LABEL_19:
      if ( v18->tftp_max >= v4 )
      {
        tftpfd = (unsigned int)listeners->tftpfd;
        if ( (_DWORD)tftpfd != -1 )
          poll_listen(tftpfd, 1LL, v3, tcp_pipes);
      }
      listeners = listeners->next;
    }
    while ( listeners );
    v13 = dnsmasq_daemon_0;
  }
  if ( (v13->options[0] & 0x40) == 0 )
  {
    v20 = 0;
    while ( 1 )
    {
      v21 = (unsigned int)v13->tcp_pipes[v20];
      if ( (_DWORD)v21 != -1 )
        poll_listen(v21, 1LL, v3, tcp_pipes);
      if ( ++v20 == 20 )
        break;
      v13 = dnsmasq_daemon_0;
    }
  }
  return wait;
}
