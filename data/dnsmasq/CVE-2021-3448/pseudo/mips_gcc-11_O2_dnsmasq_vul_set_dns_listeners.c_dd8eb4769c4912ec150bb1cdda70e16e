int __fastcall set_dns_listeners(time_t now)
{
  dnsmasq_daemon *v1; // $v1
  unsigned int v2; // $v0
  tftp_transfer *tftp_trans; // $s0
  int v5; // $s3
  serverfd *sfds; // $s0
  int port; // $v0
  int osport; // $s0
  char *v9; // $v0
  listener *listeners; // $s0
  int i; // $a0
  int tftpfd; // $a0
  int tcpfd; // $a0
  dnsmasq_daemon *v14; // $a2
  dnsmasq_daemon *tcp_pids; // $v0
  auth_zone *auth_zones; // $v1
  int v17; // $s0
  int v18; // $a0
  int wait; // [sp+18h] [-8h] BYREF

  v1 = dnsmasq_daemon_0;
  v2 = dnsmasq_daemon_0->options[1] & 0x10000000;
  wait = 0;
  if ( v2 )
  {
    v5 = 0;
    if ( !dnsmasq_daemon_0->port )
      goto LABEL_6;
  }
  else
  {
    tftp_trans = dnsmasq_daemon_0->tftp_trans;
    v5 = 0;
    if ( tftp_trans )
    {
      do
      {
        poll_listen(tftp_trans->sockfd, 1);
        tftp_trans = tftp_trans->next;
        ++v5;
      }
      while ( tftp_trans );
      v1 = dnsmasq_daemon_0;
    }
    if ( !v1->port )
    {
LABEL_6:
      sfds = v1->sfds;
      if ( !sfds )
        goto LABEL_15;
      goto LABEL_7;
    }
  }
  get_new_frec(now, &wait, 0);
  v1 = dnsmasq_daemon_0;
  sfds = dnsmasq_daemon_0->sfds;
  if ( !sfds )
  {
    port = dnsmasq_daemon_0->port;
    goto LABEL_9;
  }
  do
  {
LABEL_7:
    poll_listen(sfds->fd, 1);
    sfds = sfds->next;
  }
  while ( sfds );
  v1 = dnsmasq_daemon_0;
  port = dnsmasq_daemon_0->port;
LABEL_9:
  if ( port )
  {
    osport = v1->osport;
    if ( !osport )
    {
      do
      {
        while ( 1 )
        {
          v9 = (char *)v1 + 8 * osport;
          if ( *((_WORD *)v9 + 402) )
            break;
          if ( ++osport == 64 )
            goto LABEL_15;
        }
        ++osport;
        poll_listen(*((_DWORD *)v9 + 200), 1);
        v1 = dnsmasq_daemon_0;
      }
      while ( osport != 64 );
    }
  }
LABEL_15:
  listeners = v1->listeners;
  if ( listeners )
  {
    for ( i = listeners->fd; ; i = listeners->fd )
    {
      if ( i != -1 && !wait )
        poll_listen(i, 1);
      tcpfd = listeners->tcpfd;
      v14 = dnsmasq_daemon_0;
      if ( tcpfd != -1 )
      {
        tcp_pids = (dnsmasq_daemon *)dnsmasq_daemon_0->tcp_pids;
        do
        {
          if ( tcp_pids->options[0] )
          {
            tcp_pids = (dnsmasq_daemon *)((char *)tcp_pids + 4);
          }
          else
          {
            auth_zones = tcp_pids->auth_zones;
            tcp_pids = (dnsmasq_daemon *)((char *)tcp_pids + 4);
            if ( auth_zones == (auth_zone *)-1 )
            {
              poll_listen(tcpfd, 1);
              v14 = dnsmasq_daemon_0;
              break;
            }
          }
        }
        while ( tcp_pids != (dnsmasq_daemon *)dnsmasq_daemon_0->tcp_pipes );
      }
      if ( v14->tftp_max >= v5 )
      {
        tftpfd = listeners->tftpfd;
        if ( tftpfd != -1 )
          poll_listen(tftpfd, 1);
      }
      listeners = listeners->next;
      if ( !listeners )
        break;
    }
    v1 = dnsmasq_daemon_0;
  }
  if ( (v1->options[0] & 0x40) == 0 )
  {
    v17 = 0;
    while ( 1 )
    {
      v18 = v1->tcp_pipes[v17];
      if ( v18 != -1 )
        poll_listen(v18, 1);
      if ( ++v17 == 20 )
        break;
      v1 = dnsmasq_daemon_0;
    }
  }
  return wait;
}
