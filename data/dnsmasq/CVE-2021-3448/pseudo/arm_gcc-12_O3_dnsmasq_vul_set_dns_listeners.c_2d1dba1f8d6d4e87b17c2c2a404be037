int __fastcall set_dns_listeners(time_t now)
{
  dnsmasq_daemon *v1; // r3
  tftp_transfer *v2; // r5
  unsigned int v3; // r2
  tftp_transfer *tftp_trans; // r4
  serverfd *sfds; // r4
  int osport; // r4
  char *v8; // r2
  listener *listeners; // r7
  int tftpfd; // r0
  int tcpfd; // r0
  dnsmasq_daemon *v12; // r12
  dnsmasq_daemon *p_rfd_save; // r3
  unsigned int v14; // t1
  int v15; // r4
  int v16; // r0
  int wait; // [sp+0h] [bp-20h] BYREF

  v1 = dnsmasq_daemon_0;
  v2 = 0;
  v3 = dnsmasq_daemon_0->options[1] & 0x10000000;
  wait = 0;
  if ( !v3 )
  {
    tftp_trans = dnsmasq_daemon_0->tftp_trans;
    if ( tftp_trans )
    {
      v2 = (tftp_transfer *)v3;
      do
      {
        poll_listen(tftp_trans->sockfd, 1);
        tftp_trans = tftp_trans->next;
        v2 = (tftp_transfer *)((char *)v2 + 1);
      }
      while ( tftp_trans );
      v1 = dnsmasq_daemon_0;
    }
    else
    {
      v2 = dnsmasq_daemon_0->tftp_trans;
    }
  }
  if ( v1->port )
  {
    get_new_frec(now, &wait, 0);
    v1 = dnsmasq_daemon_0;
    sfds = dnsmasq_daemon_0->sfds;
    if ( !sfds )
      goto LABEL_10;
  }
  else
  {
    sfds = v1->sfds;
    if ( !sfds )
      goto LABEL_16;
  }
  do
  {
    poll_listen(sfds->fd, 1);
    sfds = sfds->next;
  }
  while ( sfds );
  v1 = dnsmasq_daemon_0;
LABEL_10:
  if ( v1->port )
  {
    osport = v1->osport;
    if ( !osport )
    {
      do
      {
        while ( 1 )
        {
          v8 = (char *)v1 + 8 * osport;
          if ( *((_WORD *)v8 + 0x192) )
            break;
          if ( ++osport == 64 )
            goto LABEL_16;
        }
        ++osport;
        poll_listen(*((_DWORD *)v8 + 200), 1);
        v1 = dnsmasq_daemon_0;
      }
      while ( osport != 64 );
    }
  }
LABEL_16:
  listeners = v1->listeners;
  if ( listeners )
  {
    do
    {
      if ( listeners->fd != -1 && !wait )
        poll_listen(listeners->fd, 1);
      tcpfd = listeners->tcpfd;
      v12 = dnsmasq_daemon_0;
      if ( tcpfd != -1 )
      {
        p_rfd_save = (dnsmasq_daemon *)&dnsmasq_daemon_0->rfd_save;
        while ( 1 )
        {
          v14 = p_rfd_save->options[1];
          p_rfd_save = (dnsmasq_daemon *)((char *)p_rfd_save + 4);
          if ( !v14 && p_rfd_save->auth_zones == (auth_zone *)-1 )
            break;
          if ( &dnsmasq_daemon_0->tcp_pids[0x13] == (pid_t *)p_rfd_save )
            goto LABEL_18;
        }
        poll_listen(tcpfd, 1);
        v12 = dnsmasq_daemon_0;
      }
LABEL_18:
      if ( v12->tftp_max >= (int)v2 )
      {
        tftpfd = listeners->tftpfd;
        if ( tftpfd != -1 )
          poll_listen(tftpfd, 1);
      }
      listeners = listeners->next;
    }
    while ( listeners );
    v1 = dnsmasq_daemon_0;
  }
  v15 = v1->options[0] & 0x40;
  if ( !v15 )
  {
    while ( 1 )
    {
      v16 = v1->tcp_pipes[v15];
      if ( v16 != -1 )
        poll_listen(v16, 1);
      if ( ++v15 == 20 )
        break;
      v1 = dnsmasq_daemon_0;
    }
  }
  return wait;
}
