int __fastcall set_dns_listeners(time_t now)
{
  dnsmasq_daemon *v1; // x8
  tftp_transfer *tftp_trans; // x22
  int v4; // w21
  serverfd *sfds; // x19
  __int64 i; // x19
  listener *listeners; // x19
  __int64 fd; // x0
  __int64 tcpfd; // x0
  __int64 v10; // x9
  __int64 tftpfd; // x0
  __int64 j; // x19
  __int64 v13; // x0
  int wait; // [xsp+Ch] [xbp-4h] BYREF

  v1 = dnsmasq_daemon_0;
  wait = 0;
  if ( (dnsmasq_daemon_0->options[1] & 0x10000000) != 0 || (tftp_trans = dnsmasq_daemon_0->tftp_trans) == 0LL )
  {
    v4 = 0;
  }
  else
  {
    v4 = 0;
    do
    {
      ++v4;
      poll_listen((unsigned int)tftp_trans->sockfd, 1LL);
      tftp_trans = tftp_trans->next;
    }
    while ( tftp_trans );
    v1 = dnsmasq_daemon_0;
  }
  if ( v1->port )
  {
    get_new_frec(now, &wait, 0LL);
    v1 = dnsmasq_daemon_0;
  }
  sfds = v1->sfds;
  if ( sfds )
  {
    do
    {
      poll_listen((unsigned int)sfds->fd, 1LL);
      sfds = sfds->next;
    }
    while ( sfds );
    v1 = dnsmasq_daemon_0;
  }
  if ( v1->port && !v1->osport )
  {
    for ( i = 314LL; i != 442; i += 2LL )
    {
      if ( LOWORD(v1->options[i]) )
        poll_listen(v1->options[i - 1], 1LL);
      v1 = dnsmasq_daemon_0;
    }
  }
  listeners = v1->listeners;
  if ( listeners )
  {
    do
    {
      fd = (unsigned int)listeners->fd;
      if ( (_DWORD)fd != -1 && !wait )
        poll_listen(fd, 1LL);
      tcpfd = (unsigned int)listeners->tcpfd;
      if ( (_DWORD)tcpfd != -1 )
      {
        v10 = 0LL;
        while ( dnsmasq_daemon_0->tcp_pids[v10] || dnsmasq_daemon_0->tcp_pipes[v10] != -1 )
        {
          if ( ++v10 == 20 )
            goto LABEL_29;
        }
        poll_listen(tcpfd, 1LL);
      }
LABEL_29:
      if ( v4 <= dnsmasq_daemon_0->tftp_max )
      {
        tftpfd = (unsigned int)listeners->tftpfd;
        if ( (_DWORD)tftpfd != -1 )
          poll_listen(tftpfd, 1LL);
      }
      listeners = listeners->next;
    }
    while ( listeners );
    v1 = dnsmasq_daemon_0;
  }
  if ( (v1->options[0] & 0x40) == 0 )
  {
    for ( j = 292LL; ; ++j )
    {
      v13 = v1->options[j];
      if ( (_DWORD)v13 != -1 )
        poll_listen(v13, 1LL);
      if ( j == 311 )
        break;
      v1 = dnsmasq_daemon_0;
    }
  }
  return wait;
}
