int __fastcall set_dns_listeners(time_t now)
{
  _DWORD *i; // [sp+10h] [+10h]
  int v3; // [sp+14h] [+14h]
  int k; // [sp+18h] [+18h]
  int ii; // [sp+18h] [+18h]
  int jj; // [sp+18h] [+18h]
  int v7; // [sp+1Ch] [+1Ch] BYREF
  _DWORD *m; // [sp+20h] [+20h]
  _DWORD *n; // [sp+24h] [+24h]
  _DWORD *j; // [sp+28h] [+28h]
  time_t v11; // [sp+2Ch] [+2Ch]

  v11 = now;
  v7 = 0;
  v3 = 0;
  if ( (*(_BYTE *)(dnsmasq_daemon_0 + 4) & 0x10) == 0 )
  {
    for ( i = *(_DWORD **)(dnsmasq_daemon_0 + 924); i; i = (_DWORD *)i[22] )
    {
      ++v3;
      poll_listen(*i, 1);
    }
  }
  if ( *(_DWORD *)(dnsmasq_daemon_0 + 224) )
    get_new_frec(v11, &v7, 0);
  for ( j = *(_DWORD **)(dnsmasq_daemon_0 + 600); j; j = (_DWORD *)j[16] )
    poll_listen(*j, 1);
  for ( k = 0; k < *(_DWORD *)(dnsmasq_daemon_0 + 800); ++k )
  {
    if ( *(_WORD *)(*(_DWORD *)(dnsmasq_daemon_0 + 804) + 12 * k + 8) )
      poll_listen(*(_DWORD *)(*(_DWORD *)(dnsmasq_daemon_0 + 804) + 12 * k + 4), 1);
  }
  for ( m = *(_DWORD **)(dnsmasq_daemon_0 + 812); m; m = (_DWORD *)m[1] )
    poll_listen(*(_DWORD *)(*m + 4), 1);
  for ( n = *(_DWORD **)(dnsmasq_daemon_0 + 608); n; n = (_DWORD *)n[12] )
  {
    if ( *n != -1 && !v7 )
      poll_listen(*n, 1);
    if ( n[1] != -1 )
    {
      for ( ii = 0; ii < 20; ++ii )
      {
        if ( !*(_DWORD *)(dnsmasq_daemon_0 + 4 * ii + 636) && *(_DWORD *)(dnsmasq_daemon_0 + 4 * ii + 716) == -1 )
        {
          poll_listen(n[1], 1);
          break;
        }
      }
    }
    if ( *(_DWORD *)(dnsmasq_daemon_0 + 408) >= v3 && n[2] != -1 )
      poll_listen(n[2], 1);
  }
  if ( (*(_BYTE *)(dnsmasq_daemon_0 + 3) & 0x40) == 0 )
  {
    for ( jj = 0; jj < 20; ++jj )
    {
      if ( *(_DWORD *)(dnsmasq_daemon_0 + 4 * jj + 716) != -1 )
        poll_listen(*(_DWORD *)(dnsmasq_daemon_0 + 4 * jj + 716), 1);
    }
  }
  return v7;
}
