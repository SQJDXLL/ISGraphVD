int __fastcall set_dns_listeners(time_t now)
{
  int v2; // r6
  _DWORD *v3; // r7
  _DWORD *i; // r4
  _DWORD *k; // r4
  int v6; // r0
  int v7; // r2
  int v8; // r3
  int v9; // r0
  int m; // r4
  int v11; // r0
  int j; // r4
  int v14[5]; // [sp+4h] [bp-14h] BYREF

  v2 = 0;
  v14[0] = 0;
  if ( (*(_BYTE *)(dnsmasq_daemon_0 + 7) & 0x10) == 0 )
  {
    v3 = *(_DWORD **)(dnsmasq_daemon_0 + 1420);
    if ( v3 )
    {
      v2 = 0;
      do
      {
        poll_listen(*v3, 1);
        ++v2;
        v3 = (_DWORD *)v3[22];
      }
      while ( v3 );
    }
  }
  if ( *(_DWORD *)(dnsmasq_daemon_0 + 224) )
    get_new_frec(now, v14, 0);
  for ( i = *(_DWORD **)(dnsmasq_daemon_0 + 600); i; i = (_DWORD *)i[16] )
    poll_listen(*i, 1);
  if ( *(_DWORD *)(dnsmasq_daemon_0 + 224) && !*(_DWORD *)(dnsmasq_daemon_0 + 140) )
  {
    for ( j = 800; j != 1312; j += 8 )
    {
      if ( *(_WORD *)(dnsmasq_daemon_0 + j + 4) )
        poll_listen(*(_DWORD *)(dnsmasq_daemon_0 + j), 1);
    }
  }
  for ( k = *(_DWORD **)(dnsmasq_daemon_0 + 608); k; k = (_DWORD *)k[12] )
  {
    if ( *k != -1 && !v14[0] )
      poll_listen(*k, 1);
    v6 = k[1];
    if ( v6 != -1 )
    {
      v7 = 0;
      while ( 1 )
      {
        v8 = dnsmasq_daemon_0 - 4 * v7;
        if ( !*(_DWORD *)(v8 + 636) && *(_DWORD *)(v8 + 716) == -1 )
          break;
        if ( --v7 == -20 )
          goto LABEL_23;
      }
      poll_listen(v6, 1);
    }
LABEL_23:
    if ( v2 <= *(_DWORD *)(dnsmasq_daemon_0 + 408) )
    {
      v9 = k[2];
      if ( v9 != -1 )
        poll_listen(v9, 1);
    }
  }
  if ( (*(_BYTE *)dnsmasq_daemon_0 & 0x40) == 0 )
  {
    for ( m = 179; m != 199; ++m )
    {
      v11 = *(_DWORD *)(dnsmasq_daemon_0 + 4 * m);
      if ( v11 != -1 )
        poll_listen(v11, 1);
    }
  }
  return v14[0];
}
