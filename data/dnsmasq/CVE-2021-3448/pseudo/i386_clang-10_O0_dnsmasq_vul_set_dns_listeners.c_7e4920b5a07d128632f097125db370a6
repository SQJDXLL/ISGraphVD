int __cdecl set_dns_listeners(time_t now)
{
  tftp_transfer *transfer; // [esp+10h] [ebp-18h]
  int tftp; // [esp+14h] [ebp-14h]
  int i; // [esp+18h] [ebp-10h]
  int ia; // [esp+18h] [ebp-10h]
  int ib; // [esp+18h] [ebp-10h]
  int wait; // [esp+1Ch] [ebp-Ch] BYREF
  listener *listener; // [esp+20h] [ebp-8h]
  serverfd *serverfdp; // [esp+24h] [ebp-4h]

  wait = 0;
  tftp = 0;
  if ( (*(_DWORD *)(dnsmasq_daemon_0 + 4) & 0x10000000) == 0 )
  {
    for ( transfer = *(tftp_transfer **)(dnsmasq_daemon_0 + 1420); transfer; transfer = transfer->next )
    {
      ++tftp;
      poll_listen(transfer->sockfd, 1);
    }
  }
  if ( *(_DWORD *)(dnsmasq_daemon_0 + 224) )
    get_new_frec(now, &wait, 0, 0);
  for ( serverfdp = *(serverfd **)(dnsmasq_daemon_0 + 600); serverfdp; serverfdp = serverfdp->next )
    poll_listen(serverfdp->fd, 1);
  if ( *(_DWORD *)(dnsmasq_daemon_0 + 224) && !*(_DWORD *)(dnsmasq_daemon_0 + 140) )
  {
    for ( i = 0; i < 64; ++i )
    {
      if ( *(_WORD *)(dnsmasq_daemon_0 + 8 * i + 804) )
        poll_listen(*(_DWORD *)(dnsmasq_daemon_0 + 8 * i + 800), 1);
    }
  }
  for ( listener = *(listener **)(dnsmasq_daemon_0 + 608); listener; listener = listener->next )
  {
    if ( listener->fd != -1 && !wait )
      poll_listen(listener->fd, 1);
    if ( listener->tcpfd != -1 )
    {
      for ( ia = 0; ia < 20; ++ia )
      {
        if ( !*(_DWORD *)(dnsmasq_daemon_0 + 4 * ia + 636) && *(_DWORD *)(dnsmasq_daemon_0 + 4 * ia + 716) == -1 )
        {
          poll_listen(listener->tcpfd, 1);
          break;
        }
      }
    }
    if ( tftp <= *(_DWORD *)(dnsmasq_daemon_0 + 408) && listener->tftpfd != -1 )
      poll_listen(listener->tftpfd, 1);
  }
  if ( (*(_DWORD *)dnsmasq_daemon_0 & 0x40) == 0 )
  {
    for ( ib = 0; ib < 20; ++ib )
    {
      if ( *(_DWORD *)(dnsmasq_daemon_0 + 4 * ib + 716) != -1 )
        poll_listen(*(_DWORD *)(dnsmasq_daemon_0 + 4 * ib + 716), 1);
    }
  }
  return wait;
}
