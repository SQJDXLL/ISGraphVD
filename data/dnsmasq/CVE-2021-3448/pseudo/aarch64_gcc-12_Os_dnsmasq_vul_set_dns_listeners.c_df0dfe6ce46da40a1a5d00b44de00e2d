int __fastcall set_dns_listeners(time_t now)
{
  tftp_transfer *tftp_trans; // x20
  int v3; // w21
  serverfd *i; // x20
  listener *j; // x20
  int osport; // w20
  char *v8; // x0
  __int64 fd; // x0
  __int64 tcpfd; // x0
  pid_t *tcp_pids; // x1
  __int64 tftpfd; // x0
  int k; // w20
  __int64 v14; // x0
  int wait; // [xsp+34h] [xbp+34h] BYREF

  wait = 0;
  if ( (dnsmasq_daemon_0->options[1] & 0x10000000) != 0 )
  {
    v3 = 0;
  }
  else
  {
    tftp_trans = dnsmasq_daemon_0->tftp_trans;
    v3 = 0;
    while ( tftp_trans )
    {
      ++v3;
      poll_listen((unsigned int)tftp_trans->sockfd, 1LL);
      tftp_trans = tftp_trans->next;
    }
  }
  if ( dnsmasq_daemon_0->port )
    get_new_frec(now, &wait, 0LL);
  for ( i = dnsmasq_daemon_0->sfds; i; i = i->next )
    poll_listen((unsigned int)i->fd, 1LL);
  if ( dnsmasq_daemon_0->port )
  {
    osport = dnsmasq_daemon_0->osport;
    if ( !osport )
    {
      do
      {
        v8 = (char *)dnsmasq_daemon_0 + 8 * osport;
        if ( *((_WORD *)v8 + 628) )
          poll_listen(*((unsigned int *)v8 + 313), 1LL);
        ++osport;
      }
      while ( osport != 64 );
    }
  }
  for ( j = dnsmasq_daemon_0->listeners; j; j = j->next )
  {
    fd = (unsigned int)j->fd;
    if ( (_DWORD)fd != -1 && !wait )
      poll_listen(fd, 1LL);
    tcpfd = (unsigned int)j->tcpfd;
    if ( (_DWORD)tcpfd != -1 )
    {
      tcp_pids = dnsmasq_daemon_0->tcp_pids;
      while ( *tcp_pids || tcp_pids[20] != -1 )
      {
        if ( dnsmasq_daemon_0->tcp_pipes == ++tcp_pids )
          goto LABEL_29;
      }
      poll_listen(tcpfd, 1LL);
    }
LABEL_29:
    if ( dnsmasq_daemon_0->tftp_max >= v3 )
    {
      tftpfd = (unsigned int)j->tftpfd;
      if ( (_DWORD)tftpfd != -1 )
        poll_listen(tftpfd, 1LL);
    }
  }
  if ( (dnsmasq_daemon_0->options[0] & 0x40) == 0 )
  {
    for ( k = 0; k != 20; ++k )
    {
      v14 = (unsigned int)dnsmasq_daemon_0->tcp_pipes[k];
      if ( (_DWORD)v14 != -1 )
        poll_listen(v14, 1LL);
    }
  }
  return wait;
}
