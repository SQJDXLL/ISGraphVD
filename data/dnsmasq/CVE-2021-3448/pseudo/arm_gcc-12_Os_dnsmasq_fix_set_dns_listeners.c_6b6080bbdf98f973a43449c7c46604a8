int __fastcall set_dns_listeners(time_t now)
{
  int v1; // r5
  tftp_transfer *tftp_trans; // r4
  int i; // r4
  randfd_list *j; // r4
  listener *k; // r4
  randfd *v8; // r3
  int tcpfd; // r0
  dnsmasq_daemon *p_fd_save; // r3
  unsigned int v11; // t1
  int tftpfd; // r0
  int v13; // r0
  int wait; // [sp+0h] [bp-20h] BYREF

  v1 = 0;
  wait = 0;
  if ( (dnsmasq_daemon_0->options[1] & 0x10000000) == 0 )
  {
    tftp_trans = dnsmasq_daemon_0->tftp_trans;
    v1 = 0;
    while ( tftp_trans )
    {
      poll_listen(tftp_trans->sockfd, 1);
      tftp_trans = tftp_trans->next;
      ++v1;
    }
  }
  if ( dnsmasq_daemon_0->port )
    get_new_frec(now, &wait, 0);
  for ( i = (int)dnsmasq_daemon_0->sfds; i; i = *(_DWORD *)(i + 64) )
    poll_listen(*(_DWORD *)i, 1);
  while ( dnsmasq_daemon_0->numrrand > i )
  {
    v8 = &dnsmasq_daemon_0->randomsocks[i];
    if ( v8->refcount )
      poll_listen(v8->fd, 1);
    ++i;
  }
  for ( j = dnsmasq_daemon_0->rfl_poll; j; j = j->next )
    poll_listen(j->rfd->fd, 1);
  for ( k = dnsmasq_daemon_0->listeners; k; k = k->next )
  {
    if ( k->fd != -1 && !wait )
      poll_listen(k->fd, 1);
    tcpfd = k->tcpfd;
    if ( tcpfd != -1 )
    {
      p_fd_save = (dnsmasq_daemon *)&dnsmasq_daemon_0->fd_save;
      while ( 1 )
      {
        v11 = p_fd_save->options[1];
        p_fd_save = (dnsmasq_daemon *)((char *)p_fd_save + 4);
        if ( !v11 && p_fd_save->auth_zones == (auth_zone *)-1 )
          break;
        if ( &dnsmasq_daemon_0->tcp_pids[0x13] == (pid_t *)p_fd_save )
          goto LABEL_30;
      }
      poll_listen(tcpfd, 1);
    }
LABEL_30:
    if ( dnsmasq_daemon_0->tftp_max >= v1 )
    {
      tftpfd = k->tftpfd;
      if ( tftpfd != -1 )
        poll_listen(tftpfd, 1);
    }
  }
  if ( (dnsmasq_daemon_0->options[0] & 0x40) == 0 )
  {
    do
    {
      v13 = dnsmasq_daemon_0->tcp_pipes[(_DWORD)k];
      if ( v13 != -1 )
        poll_listen(v13, 1);
      k = (listener *)((char *)k + 1);
    }
    while ( k != (listener *)&loc_14 );
  }
  return wait;
}
