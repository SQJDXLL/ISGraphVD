int __fastcall set_dns_listeners(time_t now)
{
  int v1; // ebp
  tftp_transfer *tftp_trans; // rbx
  serverfd *i; // rbx
  dnsmasq_daemon *v4; // rdx
  __int64 v5; // rbx
  __int64 v6; // rax
  randfd_list *j; // rbx
  listener *k; // rbx
  int m; // ebx
  pid_t *tcp_pids; // rax
  __int64 fd; // rdi
  __int64 tcpfd; // rdi
  __int64 tftpfd; // rdi
  __int64 v14; // rdi
  int wait; // [rsp+4h] [rbp-24h] BYREF
  unsigned __int64 v17; // [rsp+8h] [rbp-20h]

  v17 = __readfsqword(0x28u);
  wait = 0;
  v1 = 0;
  if ( (dnsmasq_daemon_0->options[1] & 0x10000000) == 0 )
  {
    tftp_trans = dnsmasq_daemon_0->tftp_trans;
    if ( tftp_trans )
    {
      do
      {
        ++v1;
        poll_listen((unsigned int)tftp_trans->sockfd, 1LL);
        tftp_trans = tftp_trans->next;
      }
      while ( tftp_trans );
    }
    else
    {
      v1 = 0;
    }
  }
  if ( dnsmasq_daemon_0->port )
    get_new_frec(now, &wait, 0LL);
  for ( i = dnsmasq_daemon_0->sfds; i; i = i->next )
    poll_listen((unsigned int)i->fd, 1LL);
  v4 = dnsmasq_daemon_0;
  if ( dnsmasq_daemon_0->numrrand > 0 )
  {
    v5 = 0LL;
    do
    {
      v6 = (__int64)&v4->randomsocks[v5];
      if ( *(_WORD *)(v6 + 12) )
        poll_listen(*(unsigned int *)(v6 + 8), 1LL);
      v4 = dnsmasq_daemon_0;
      ++v5;
    }
    while ( dnsmasq_daemon_0->numrrand > (int)v5 );
  }
  for ( j = v4->rfl_poll; j; j = j->next )
    poll_listen((unsigned int)j->rfd->fd, 1LL);
  for ( k = dnsmasq_daemon_0->listeners; k; k = k->next )
  {
    fd = (unsigned int)k->fd;
    if ( (_DWORD)fd != -1 && !wait )
      poll_listen(fd, 1LL);
    tcpfd = (unsigned int)k->tcpfd;
    if ( (_DWORD)tcpfd != -1 )
    {
      tcp_pids = dnsmasq_daemon_0->tcp_pids;
      while ( *tcp_pids || tcp_pids[20] != -1 )
      {
        if ( ++tcp_pids == dnsmasq_daemon_0->tcp_pipes )
          goto LABEL_29;
      }
      poll_listen(tcpfd, 1LL);
    }
LABEL_29:
    if ( dnsmasq_daemon_0->tftp_max >= v1 )
    {
      tftpfd = (unsigned int)k->tftpfd;
      if ( (_DWORD)tftpfd != -1 )
        poll_listen(tftpfd, 1LL);
    }
  }
  if ( (dnsmasq_daemon_0->options[0] & 0x40) == 0 )
  {
    for ( m = 0; m != 20; ++m )
    {
      v14 = (unsigned int)dnsmasq_daemon_0->tcp_pipes[m];
      if ( (_DWORD)v14 != -1 )
        poll_listen(v14, 1LL);
    }
  }
  return wait;
}
