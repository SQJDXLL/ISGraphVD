int __cdecl set_dns_listeners(time_t now)
{
  tftp_transfer *transfer; // [rsp+8h] [rbp-38h]
  int tftp; // [rsp+14h] [rbp-2Ch]
  int i; // [rsp+18h] [rbp-28h]
  int ia; // [rsp+18h] [rbp-28h]
  int ib; // [rsp+18h] [rbp-28h]
  int wait; // [rsp+1Ch] [rbp-24h] BYREF
  randfd_list *rfl; // [rsp+20h] [rbp-20h]
  listener *listener; // [rsp+28h] [rbp-18h]
  serverfd *serverfdp; // [rsp+30h] [rbp-10h]
  time_t nowa; // [rsp+38h] [rbp-8h]

  nowa = now;
  wait = 0;
  tftp = 0;
  if ( (*(_DWORD *)(dnsmasq_daemon_0 + 4) & 0x10000000) == 0 )
  {
    for ( transfer = *(tftp_transfer **)(dnsmasq_daemon_0 + 1456); transfer; transfer = transfer->next )
    {
      ++tftp;
      poll_listen((unsigned int)transfer->sockfd, 1LL);
    }
  }
  if ( *(_DWORD *)(dnsmasq_daemon_0 + 412) )
    get_new_frec(nowa, &wait, 0LL);
  for ( serverfdp = *(serverfd **)(dnsmasq_daemon_0 + 1016); serverfdp; serverfdp = serverfdp->next )
    poll_listen((unsigned int)serverfdp->fd, 1LL);
  for ( i = 0; i < *(_DWORD *)(dnsmasq_daemon_0 + 1248); ++i )
  {
    if ( *(_WORD *)(16LL * i + *(_QWORD *)(dnsmasq_daemon_0 + 1256) + 12) )
      poll_listen(*(unsigned int *)(16LL * i + *(_QWORD *)(dnsmasq_daemon_0 + 1256) + 8), 1LL);
  }
  for ( rfl = *(randfd_list **)(dnsmasq_daemon_0 + 1272); rfl; rfl = rfl->next )
    poll_listen((unsigned int)rfl->rfd->fd, 1LL);
  for ( listener = *(listener **)(dnsmasq_daemon_0 + 1032); listener; listener = listener->next )
  {
    if ( listener->fd != -1 && !wait )
      poll_listen((unsigned int)listener->fd, 1LL);
    if ( listener->tcpfd != -1 )
    {
      for ( ia = 0; ia < 20; ++ia )
      {
        if ( !*(_DWORD *)(dnsmasq_daemon_0 + 4LL * ia + 1084) && *(_DWORD *)(dnsmasq_daemon_0 + 4LL * ia + 1164) == -1 )
        {
          poll_listen((unsigned int)listener->tcpfd, 1LL);
          break;
        }
      }
    }
    if ( tftp <= *(_DWORD *)(dnsmasq_daemon_0 + 748) && listener->tftpfd != -1 )
      poll_listen((unsigned int)listener->tftpfd, 1LL);
  }
  if ( (*(_DWORD *)dnsmasq_daemon_0 & 0x40) == 0 )
  {
    for ( ib = 0; ib < 20; ++ib )
    {
      if ( *(_DWORD *)(dnsmasq_daemon_0 + 4LL * ib + 1164) != -1 )
        poll_listen(*(unsigned int *)(dnsmasq_daemon_0 + 4LL * ib + 1164), 1LL);
    }
  }
  return wait;
}
