int __fastcall set_dns_listeners(time_t now)
{
  tftp_transfer *i; // [sp+10h] [+10h]
  int v3; // [sp+14h] [+14h]
  int k; // [sp+18h] [+18h]
  int ii; // [sp+18h] [+18h]
  int jj; // [sp+18h] [+18h]
  int v7; // [sp+1Ch] [+1Ch] BYREF
  randfd_list *m; // [sp+20h] [+20h]
  listener *n; // [sp+24h] [+24h]
  serverfd *j; // [sp+28h] [+28h]
  time_t v11; // [sp+2Ch] [+2Ch]

  v11 = now;
  v7 = 0;
  v3 = 0;
  if ( (dnsmasq_daemon_0->options[1] & 0x10000000) == 0 )
  {
    for ( i = dnsmasq_daemon_0->tftp_trans; i; i = i->next )
    {
      ++v3;
      poll_listen(i->sockfd, 1);
    }
  }
  if ( dnsmasq_daemon_0->port )
    get_new_frec(v11, &v7, 0);
  for ( j = dnsmasq_daemon_0->sfds; j; j = j->next )
    poll_listen(j->fd, 1);
  for ( k = 0; k < dnsmasq_daemon_0->numrrand; ++k )
  {
    if ( dnsmasq_daemon_0->randomsocks[k].refcount )
      poll_listen(dnsmasq_daemon_0->randomsocks[k].fd, 1);
  }
  for ( m = dnsmasq_daemon_0->rfl_poll; m; m = m->next )
    poll_listen(m->rfd->fd, 1);
  for ( n = dnsmasq_daemon_0->listeners; n; n = n->next )
  {
    if ( n->fd != -1 && !v7 )
      poll_listen(n->fd, 1);
    if ( n->tcpfd != -1 )
    {
      for ( ii = 0; ii < 20; ++ii )
      {
        if ( !dnsmasq_daemon_0->tcp_pids[ii] && dnsmasq_daemon_0->tcp_pipes[ii] == -1 )
        {
          poll_listen(n->tcpfd, 1);
          break;
        }
      }
    }
    if ( dnsmasq_daemon_0->tftp_max >= v3 && n->tftpfd != -1 )
      poll_listen(n->tftpfd, 1);
  }
  if ( (dnsmasq_daemon_0->options[0] & 0x40) == 0 )
  {
    for ( jj = 0; jj < 20; ++jj )
    {
      if ( dnsmasq_daemon_0->tcp_pipes[jj] != -1 )
        poll_listen(dnsmasq_daemon_0->tcp_pipes[jj], 1);
    }
  }
  return v7;
}
