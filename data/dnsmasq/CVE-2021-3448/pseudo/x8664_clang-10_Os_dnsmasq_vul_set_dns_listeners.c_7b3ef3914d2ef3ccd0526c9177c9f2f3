int __fastcall set_dns_listeners(time_t now)
{
  __int64 v1; // rax
  int v2; // ebp
  unsigned int *v3; // rbx
  unsigned int *v4; // rbx
  __int64 i; // rbx
  unsigned int *v6; // rbx
  __int64 v7; // rdi
  __int64 v8; // rdi
  __int64 v9; // rax
  __int64 v10; // rdi
  __int64 j; // rbx
  __int64 v12; // rdi
  int v14[7]; // [rsp+Ch] [rbp-1Ch] BYREF

  v14[0] = 0;
  v1 = dnsmasq_daemon_0;
  v2 = 0;
  if ( (*(_BYTE *)(dnsmasq_daemon_0 + 7) & 0x10) == 0 )
  {
    v3 = *(unsigned int **)(dnsmasq_daemon_0 + 1936);
    if ( v3 )
    {
      v2 = 0;
      do
      {
        ++v2;
        poll_listen(*v3, 1LL);
        v3 = (unsigned int *)*((_QWORD *)v3 + 13);
      }
      while ( v3 );
      v1 = dnsmasq_daemon_0;
    }
  }
  if ( *(_DWORD *)(v1 + 412) )
  {
    get_new_frec(now, v14, 0LL);
    v1 = dnsmasq_daemon_0;
  }
  v4 = *(unsigned int **)(v1 + 1016);
  if ( v4 )
  {
    do
    {
      poll_listen(*v4, 1LL);
      v4 = (unsigned int *)*((_QWORD *)v4 + 8);
    }
    while ( v4 );
    v1 = dnsmasq_daemon_0;
  }
  if ( *(_DWORD *)(v1 + 412) && !*(_DWORD *)(v1 + 260) )
  {
    for ( i = 0LL; i != 64; ++i )
    {
      if ( *(_WORD *)(v1 + 8 * i + 1256) )
        poll_listen(*(unsigned int *)(v1 + 8 * i + 1252), 1LL);
      v1 = dnsmasq_daemon_0;
    }
  }
  v6 = *(unsigned int **)(v1 + 1032);
  if ( v6 )
  {
    do
    {
      v7 = *v6;
      if ( (_DWORD)v7 != -1 && !v14[0] )
        poll_listen(v7, 1LL);
      v8 = v6[1];
      if ( (_DWORD)v8 != -1 )
      {
        v9 = -20LL;
        while ( *(_DWORD *)(dnsmasq_daemon_0 + 4 * v9 + 1168) || *(_DWORD *)(dnsmasq_daemon_0 + 4 * v9 + 1248) != -1 )
        {
          if ( !++v9 )
            goto LABEL_28;
        }
        poll_listen(v8, 1LL);
      }
LABEL_28:
      if ( v2 <= *(_DWORD *)(dnsmasq_daemon_0 + 748) )
      {
        v10 = v6[2];
        if ( (_DWORD)v10 != -1 )
          poll_listen(v10, 1LL);
      }
      v6 = (unsigned int *)*((_QWORD *)v6 + 7);
    }
    while ( v6 );
    v1 = dnsmasq_daemon_0;
  }
  if ( (*(_BYTE *)v1 & 0x40) == 0 )
  {
    for ( j = 0LL; ; ++j )
    {
      v12 = *(unsigned int *)(v1 + 4 * j + 1168);
      if ( (_DWORD)v12 != -1 )
        poll_listen(v12, 1LL);
      if ( j == 19 )
        break;
      v1 = dnsmasq_daemon_0;
    }
  }
  return v14[0];
}
