int __fastcall set_dns_listeners(time_t now)
{
  int v2; // w21
  unsigned int *v3; // x22
  unsigned int *i; // x19
  __int64 v5; // x8
  __int64 v6; // x19
  __int64 v7; // x22
  __int64 v8; // x8
  _QWORD *j; // x19
  unsigned int *k; // x19
  __int64 m; // x19
  __int64 v12; // x0
  __int64 v13; // x0
  __int64 v14; // x9
  __int64 v15; // x0
  __int64 v16; // x0
  int wait; // [xsp+Ch] [xbp-4h] BYREF

  wait = 0;
  v2 = 0;
  if ( (*(_BYTE *)(dnsmasq_daemon_0 + 7) & 0x10) == 0 )
  {
    v3 = *(unsigned int **)(dnsmasq_daemon_0 + 1456);
    if ( v3 )
    {
      v2 = 0;
      do
      {
        ++v2;
        poll_listen(*v3, 1LL);
        v3 = (unsigned int *)*((_QWORD *)v3 + 13);
      }
      while ( v3 );
    }
    else
    {
      v2 = 0;
    }
  }
  if ( *(_DWORD *)(dnsmasq_daemon_0 + 412) )
    get_new_frec(now, &wait, 0LL);
  for ( i = *(unsigned int **)(dnsmasq_daemon_0 + 1016); i; i = (unsigned int *)*((_QWORD *)i + 8) )
    poll_listen(*i, 1LL);
  v5 = dnsmasq_daemon_0;
  if ( *(int *)(dnsmasq_daemon_0 + 1248) >= 1 )
  {
    v6 = 0LL;
    v7 = 0LL;
    do
    {
      v8 = *(_QWORD *)(v5 + 1256) + v6;
      if ( *(_WORD *)(v8 + 12) )
        poll_listen(*(unsigned int *)(v8 + 8), 1LL);
      v5 = dnsmasq_daemon_0;
      ++v7;
      v6 += 0x10LL;
    }
    while ( v7 < *(int *)(dnsmasq_daemon_0 + 1248) );
  }
  for ( j = *(_QWORD **)(v5 + 1272); j; j = (_QWORD *)j[1] )
    poll_listen(*(unsigned int *)(*j + 8LL), 1LL);
  for ( k = *(unsigned int **)(dnsmasq_daemon_0 + 1032); k; k = (unsigned int *)*((_QWORD *)k + 7) )
  {
    v12 = *k;
    if ( (_DWORD)v12 != -1 && !wait )
      poll_listen(v12, 1LL);
    v13 = k[1];
    if ( (_DWORD)v13 != -1 )
    {
      v14 = 0LL;
      while ( *(_DWORD *)(dnsmasq_daemon_0 + v14 + 1084) || *(_DWORD *)(dnsmasq_daemon_0 + v14 + 1164) != -1 )
      {
        v14 += 4LL;
        if ( v14 == 80 )
          goto LABEL_31;
      }
      poll_listen(v13, 1LL);
    }
LABEL_31:
    if ( v2 <= *(_DWORD *)(dnsmasq_daemon_0 + 748) )
    {
      v15 = k[2];
      if ( (_DWORD)v15 != -1 )
        poll_listen(v15, 1LL);
    }
  }
  if ( (*(_BYTE *)dnsmasq_daemon_0 & 0x40) == 0 )
  {
    for ( m = 1164LL; m != 1244; m += 4LL )
    {
      v16 = *(unsigned int *)(dnsmasq_daemon_0 + m);
      if ( (_DWORD)v16 != -1 )
        poll_listen(v16, 1LL);
    }
  }
  return wait;
}
